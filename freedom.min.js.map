{"version":3,"sources":["../build/node_modules/browser-pack/_prelude.js","../build/dist/bundle.compiled.js","../build/node_modules/es6-promise/dist/es6-promise.js","../build/node_modules/process/browser.js","../build/node_modules/webrtc-adapter/adapter.js","../build/providers/core/core.battery.js","../build/providers/core/core.console.js","../build/providers/core/core.crypto.js","../build/providers/core/core.echo.js","../build/providers/core/core.oauth.js","../build/providers/core/core.peerconnection.js","../build/providers/core/core.rtcdatachannel.js","../build/providers/core/core.rtcpeerconnection.js","../build/providers/core/core.storage.js","../build/providers/core/core.unprivileged.js","../build/providers/core/core.view.js","../build/providers/core/core.websocket.js","../build/providers/core/core.xhr.js","../build/providers/oauth/oauth.localpageauth.js","../build/providers/oauth/oauth.remotepageauth.js","../build/src/api.js","../build/src/bundle.js","../build/src/consumer.js","../build/src/debug.js","../build/src/entry.js","../build/src/hub.js","../build/src/link.js","../build/src/link/worker.js","../build/src/manager.js","../build/src/module.js","../build/src/moduleinternal.js","../build/src/policy.js","../build/src/provider.js","../build/src/proxy/apiInterface.js","../build/src/proxy/eventInterface.js","../build/src/proxybinder.js","../build/src/resource.js","../build/src/util.js","../build/src/util/workerEntry.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","name","api","log","type","value","debug","info","warn","error","isCharging","ret","getChargingTime","getDischargingTime","getLevel","chargingchange","charging","chargingtimechange","chargingTime","dischargingtimechange","dischargingTime","levelchange","level","getRandomBytes","setup","send","message","createChannel","channel","identifier","bindChannel","getId","getLogger","initiateOAuth","redirect","state","err","errcode","launchAuthFlow","channelLabel","text","binary","buffer","onReceived","openDataChannel","closeDataChannel","onOpenDataChannel","channelId","onCloseDataChannel","getBufferedAmount","getInfo","createOffer","offerToReceiveVideo","offerToReceiveAudio","voiceActivityDetection","iceRestart","sdp","close","onClose","constructor","getLabel","getOrdered","getMaxPacketLifeTime","getMaxRetransmits","getProtocol","getNegotiated","getReadyState","onopen","onerror","onclose","onmessage","getBinaryType","setBinaryType","sendBuffer","iceServers","urls","username","credential","iceTransports","peerIdentity","createAnswer","setLocalDescription","getLocalDescription","setRemoteDescription","getRemoteDescription","getSignalingState","updateIce","addIceCandidate","candidate","sdpMid","sdpMLineIndex","getIceGatheringState","getIceConnectionState","getConfiguration","getLocalStreams","getRemoteStreams","getStreamById","addStream","removeStream","createDataChannel","ordered","maxPacketLifeTime","maxRetransmits","protocol","negotiated","id","ondatachannel","getStats","onnegotiationneeded","onicecandidate","onsignalingstatechange","onaddstream","stream","onremovestream","oniceconnectionstatechange","keys","get","set","remove","clear","connected","localAddress","localPort","peerAddress","peerPort","ERRCODE","SUCCESS","UNKNOWN","ALREADY_CONNECTED","INVALID_ARGUMENT","TIMED_OUT","NOT_CONNECTED","NETWORK_CHANGED","CONNECTION_CLOSED","CONNECTION_RESET","CONNECTION_REFUSED","CONNECTION_FAILED","NAME_NOT_RESOLVED","INTERNET_DISCONNECTED","ADDRESS_INVALID","ADDRESS_UNREACHABLE","HOST_UNREACHABLE","onDisconnect","connect","secure","pause","resume","prepareSecure","write","onData","data","listen","onConnection","socket","host","port","ALREADY_BOUND","ALREADY_CLOSED","SEND_FAILED","bind","sendTo","destroy","resultCode","address","show","isSecure","postMessage","onMessage","onOpen","onError","reason","wasClean","open","string","blob","abort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","getResponse","object","getResponseText","getResponseURL","getResponseType","setResponseType","getStatus","getStatusText","getTimeout","setTimeout","getWithCredentials","setWithCredentials","onloadstart","lengthComputable","loaded","total","onprogress","onabort","onload","ontimeout","onloadend","onreadystatechange","onuploadloadstart","onuploadprogress","onuploadabort","onuploaderror","onuploadload","onuploadtimeout","onuploadloadend","onuploadreadystatechange","OFFLINE","MALFORMEDPARAMETERS","LOGIN_BADCREDENTIALS","LOGIN_FAILEDCONNECTION","LOGIN_ALREADYONLINE","LOGIN_OAUTHERROR","SEND_INVALIDDESTINATION","STATUS","ONLINE","ONLINE_WITH_OTHER_APP","login","agent","version","url","interactive","rememberLogin","userId","clientId","status","lastUpdated","lastSeen","clearCachedCredentials","getClients","getUsers","sendMessage","logout","from","onUserProfile","imageData","onClientState","scope","SESSION","DEVICE_LOCAL","USER_LOCAL","SHARED","tag","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","process","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","lib$es6$promise$asap$$useMessageChannel","MessageChannel","port1","port2","lib$es6$promise$asap$$useSetTimeout","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertx","vertx","runOnLoop","runOnContext","lib$es6$promise$then$$then","onFulfillment","onRejection","parent","this","child","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$PROMISE_ID","lib$es6$promise$$internal$$makePromise","_state","arguments","lib$es6$promise$$internal$$invokeCallback","_result","lib$es6$promise$$internal$$subscribe","lib$es6$promise$promise$resolve$$resolve","Constructor","promise","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","then","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$fulfill","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","lib$es6$promise$$internal$$FULFILLED","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$then$$default","resolve","lib$es6$promise$promise$resolve$$default","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","subscribers","settled","detail","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$$internal$$nextId","lib$es6$promise$$internal$$id","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","reject","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","lib$es6$promise$enumerator$$Enumerator","input","_instanceConstructor","_input","_remaining","Array","_enumerate","lib$es6$promise$enumerator$$validationError","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","Math","random","substring","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$reject$$default","all","race","_setScheduler","_setAsap","_asap","catch","_eachEntry","entry","c","_settledAt","_willSettleAt","enumerator","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","args","push","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","myRTCPeerConnection","myRTCSessionDescription","myRTCIceCandidate","renameIceURLs","config","forEach","server","fixChromeStatsResponse","response","standardReport","reports","result","report","standardStats","timestamp","names","stat","fixFirefoxStatsResponse","sessionHasData","desc","hasData","prefix","split","line","slice","RTCPeerConnection","mozRTCPeerConnection","configuration","constraints","pc","boundGetStats","selector","successCallback","failureCallback","successCallbackWrapper","firefoxStatsResponse","dataEnabled","boundCreateDataChannel","label","dataChannelDict","dc","localDescription","remoteDescription","event","Event","webkitRTCPeerConnection","chromeStatsResponse","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","PromiseCompat","nav","navigator","BatteryProvider","cap","dispatchEvent","_batteryPromise","getBattery","battery","_setupListeners","console","Infinity","events","eventName","addEventListener","provider","style","flags","setNavigator","impl","util","Logger_console","handleEvents","print","severity","source","msg","arr","freedom","unshift","maxLogLevel","freedomDump","dump","toUpperCase","join","continuation","Core_crypto","number","Uint8Array","crypto","getRandomValues","Echo_unprivileged","mod","Core","core","controlChannel","request","proxy","chan","m","str","OAuth","handlers","ongoing","register","boundHandlers","reset","redirectURIs","authUrl","stateObj","hasOwnProperty","SimpleDataPeer","peerName","stunServers","dataChannelCallbacks","mocks","channels","onConnectedQueue","optional","DtlsSrtpKeyAgreement","sendSignalMessage","onIceCallback","onNegotiationNeeded","onDataChannel","signalingState","pcState","SimpleDataPeerState","CONNECTED","map","DISCONNECTED","PeerConnection","portModule","freedomModule","signallingChannel","peer","CONNECTING","constaints","runWhenConnected","func","dataChannel","addDataChannel","negotiateConnection","closeChannel","bufferedAmount","setSendSignalMessage","sendSignalMessageFn","handleSignalMessage","messageText","ice_candidate","json","JSON","parse","onDescription","isClosed","callbacks","readyState","onOpenFn","onCloseFn","onMessageFn","onErrorFn","description","stringify","logSuccess","op","logFail","onSignalingStateChange","signallingChannelId","initiateConnection","openDataChannelContinuation","ArrayBuffer","Blob","success","sendInfo","objToSend","eventNames","unAttachedChannels","pendingEvents","allocateChannel","handler","currentHandler","RTCDataChannelAdapter","dispatchEvents","Connection","drainPendingEvents","manageEvents","attach","binaryType","Components","myData","utils","cloneInto","allocate","wrtcClass","DataChannel","RTCPeerConnectionAdapter","adapter","connection","iceGatheringState","iceConnectionState","String","setImpl","Storage_unprivileged","localStorage","key","val","getItem","setItem","removeItem","EventInterface","Consumer","Core_unprivileged","manager","unboundChannels","contextId","moduleInternal","getChannel","isInModule","delegate","flow","iface","getProxyInterface","doClose","remote","reply","manifest","toBind","newSource","createLink","toDelegate","p","cb","hub","getDestination","getInterface","dependencyName","registerId","setId","Core_View","listener","active","page","resources","root","frame","container","body","getElementById","createElement","width","height","display","appendChild","setAttribute","border","background","src","contentWindow","removeChild","removeEventListener","views","toResolve","main","files","fname","resource","manifestId","PageProvider","WSHandle","nodeStyle","WS","protocols","WSImplementation","isNode","WebSocket","websocket","SyntaxError","toSend","errorCode","setSocket","XhrClass","XhrProvider","XMLHttpRequest","_dispatchEvent","_xhr","_events","method","async","user","password","header","mime","responseType","responseText","responseURL","statusText","withCredentials","wc","upload","oAuthRedirectId","loadedOnStartup","TIMEOUT","location","href","indexOf","Date","LocalPageAuth","listeners","here","pathname","storageListener","RemotePageAuth","hasCredentials","Api","apis","providers","waiters","definition","inst","getCore","provideCore","cleanup","prop","doReject","waiter","Bundle","interfaces","registry","bundle","interfaceCls","nextId","ifaces","closeHandlers","errorHandlers","emits","reverse","emitChannel","to","teardown","eachProp","Iface","getInterfaceConstructor","getListener","instance","obj","binder","doEmit","messageToPortable","template","externals","conform","portableToMessage","streams","separate","Number","Boolean","makeArrayBuffer","thing","DataView","recursiveFreezeObject","k","defineProperty","writable","enumerable","Debug","logger","LEVELS","setLogger","format","argarr","alist","quiet","splice","getLoggingShim","asyncMethod","methods","backing","item","mthd","freedomGlobal","Hub","Manager","Policy","ProxyBinder","Resource","getGlobal","context","policy","link","Port","site_cfg","moduleContext","isModule","isModuleContext","mixin","substr","resolvers","portType","fallbackLogger","getIface","canonical_manifest","bindDefault","external","apps","routes","destination","app","trace","action","getSource","force","deregister","install","route","generateRoute","uninstall","Link","deliverMessage","start","addErrorHandler","emitMessage","WorkerLink","setupListener","setupWorker","stop","onMsg","worker","Worker","terminate","ModuleInternal","controlFlows","dataFlows","reverseFlowMap","origin","reverseFlow","overrideDest","addResolver","addRetriever","service","removeLink","getPort","portId","lineage","destName","toDest","outgoingName","outgoing","rflow","forgetFlow","Provider","Module","manifestURL","creator","externalPortMap","internalPortMap","dependantChannels","dependencyUrls","pendingMessages","started","dependencies","drainPendingMessages","deregisterFlow","provides","modInternal","addPendingMessage","internal","loadLinks","appId","addDependency","dep","updateEnv","permissions","loadManifest","metadata","icon","manifests","pendingPorts","requests","unboundPorts","updateManifest","defaultPort","externalChannel","objects","mapProxies","generateEnv","loadScripts","script","items","def","exp","manifestPredicate","onManifest","getExternal","CoreProv","provideAsynchronous","getLoggerSync","getAPI","proxies","seen","scripts","scripts_count","load","importer","next","tryLoad","stack","runtimes","policies","pending","add","defaultPolicy","defaultConstraints","isolation","placement","overlay","runtime","findDestination","isRunning","fullMatch","okay","j","modules","getContents","modFingerprint","base","mode","synchronous","providerCls","asynchronous","promises","getProvider","onmsg","sanityCheck","provideSynchronous","prov","providePromises","ids","BoundClass","ev","returnPromise","reqId","e1","e2","e3","ApiInterface","inflight","emitter","thisReq","reckless","apiProvider","httpResolver","nullResolver","contentRetrievers","http","xhrRetriever","https","chrome-extension","chrome","gopher","manifestRetriever","firstPromise","errors","eachReverse","proto","retriever","hasScheme","removeRelativePath","toRemove","idx","replace","charAt","shift","dirname","protocolIdx","pathIdx","path","lastIndexOf","ref","userAgent","ary","hasProp","target","guid","domain","randomBytes","ceil","str2ab","bufferView","Uint16Array","charCodeAt","ab2str","fromCharCode","filter","eventState","DEBUG_BACKREF","multiple","maybemultiple","single","maybesingle","list","predicate","getBlob","WebKitBlobBuilder","builder","append","getElementsByTagName","getFreedomScript","currentScript","querySelector","oauth"],"mappings":"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","file":"freedom.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = [{\"name\":\"console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.battery\",\"api\":{\"isCharging\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getChargingTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getDischargingTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getLevel\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"chargingchange\":{\"type\":\"event\",\"value\":{\"charging\":\"boolean\"}},\"chargingtimechange\":{\"type\":\"event\",\"value\":{\"chargingTime\":\"number\"}},\"dischargingtimechange\":{\"type\":\"event\",\"value\":{\"dischargingTime\":\"number\"}},\"levelchange\":{\"type\":\"event\",\"value\":{\"level\":\"number\"}}}},{\"name\":\"core.console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.crypto\",\"api\":{\"getRandomBytes\":{\"type\":\"method\",\"value\":[\"number\"],\"ret\":\"buffer\"}}},{\"name\":\"core.echo\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"message\":{\"type\":\"event\",\"value\":\"string\"}}},{\"name\":\"core\",\"api\":{\"createChannel\":{\"type\":\"method\",\"value\":[],\"ret\":{\"channel\":\"proxy\",\"identifier\":\"string\"}},\"bindChannel\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getLogger\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"require\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"proxy\"}}},{\"name\":\"core.oauth\",\"api\":{\"initiateOAuth\":{\"type\":\"method\",\"value\":[[\"array\",\"string\"]],\"ret\":{\"redirect\":\"string\",\"state\":\"string\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"launchAuthFlow\":{\"type\":\"method\",\"value\":[\"string\",{\"redirect\":\"string\",\"state\":\"string\"},\"boolean\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"core.peerconnection\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"string\",[\"array\",\"string\"],\"boolean\"]},\"send\":{\"type\":\"method\",\"value\":[{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}]},\"onReceived\":{\"type\":\"event\",\"value\":{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"openDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"closeDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"onOpenDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"onCloseDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveVideo\":\"number\",\"offerToReceiveAudio\":\"number\",\"voiceActivityDetection\":\"boolean\",\"iceRestart\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[]},\"onClose\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"core.rtcdatachannel\",\"api\":{\"constructor\":{\"value\":[\"string\"]},\"getLabel\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getOrdered\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getMaxPacketLifeTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getMaxRetransmits\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getProtocol\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getNegotiated\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"onopen\":{\"type\":\"event\",\"value\":[]},\"onerror\":{\"type\":\"event\",\"value\":[]},\"onclose\":{\"type\":\"event\",\"value\":[]},\"close\":{\"type\":\"method\",\"value\":[]},\"onmessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"buffer\":\"buffer\"}},\"getBinaryType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setBinaryType\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"sendBuffer\":{\"type\":\"method\",\"value\":[\"buffer\"]}}},{\"name\":\"core.rtcpeerconnection\",\"api\":{\"constructor\":{\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}]},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveAudio\":\"number\",\"offerToReceiveVideo\":\"number\",\"iceRestart\":\"boolean\",\"voiceActivityDetection\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"createAnswer\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setLocalDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}]},\"getLocalDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setRemoteDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}],\"ret\":{}},\"getRemoteDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"getSignalingState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"updateIce\":{\"type\":\"method\",\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}],\"ret\":{}},\"addIceCandidate\":{\"type\":\"method\",\"value\":[{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}],\"ret\":{}},\"getIceGatheringState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getIceConnectionState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getConfiguration\":{\"type\":\"method\",\"value\":[],\"ret\":{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}},\"getLocalStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getRemoteStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getStreamById\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"addStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"removeStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":{}},\"createDataChannel\":{\"type\":\"method\",\"value\":[\"string\",{\"ordered\":\"boolean\",\"maxPacketLifeTime\":\"number\",\"maxRetransmits\":\"number\",\"protocol\":\"string\",\"negotiated\":\"boolean\",\"id\":\"number\"}],\"ret\":\"string\"},\"ondatachannel\":{\"type\":\"event\",\"value\":{\"channel\":\"string\"}},\"getStats\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"object\"},\"onnegotiationneeded\":{\"type\":\"event\",\"value\":[]},\"onicecandidate\":{\"type\":\"event\",\"value\":{\"candidate\":{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}}},\"onsignalingstatechange\":{\"type\":\"event\",\"value\":[]},\"onaddstream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"onremovestream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"oniceconnectionstatechange\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.storage\",\"api\":{\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\"},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"clear\":{\"type\":\"method\",\"value\":[]}}},{\"name\":\"core.tcpsocket\",\"api\":{\"constructor\":{\"value\":[\"number\"]},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"connected\":\"boolean\",\"localAddress\":\"string\",\"localPort\":\"number\",\"peerAddress\":\"string\",\"peerPort\":\"number\"}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_CONNECTED\":\"Socket already connected\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"TIMED_OUT\":\"Timed out\",\"NOT_CONNECTED\":\"Socket not connected\",\"NETWORK_CHANGED\":\"Network changed\",\"CONNECTION_CLOSED\":\"Connection closed gracefully\",\"CONNECTION_RESET\":\"Connection reset\",\"CONNECTION_REFUSED\":\"Connection refused\",\"CONNECTION_FAILED\":\"Connection failed\",\"NAME_NOT_RESOLVED\":\"DNS lookup failed\",\"INTERNET_DISCONNECTED\":\"Cannot reach any network\",\"ADDRESS_INVALID\":\"Invalid address\",\"ADDRESS_UNREACHABLE\":\"No route to host\",\"HOST_UNREACHABLE\":\"SOCKS proxy server could not reach host\"}},\"close\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onDisconnect\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"connect\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"secure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"pause\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"resume\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"prepareSecure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"write\":{\"type\":\"method\",\"value\":[\"buffer\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"data\":\"buffer\"}},\"listen\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onConnection\":{\"type\":\"event\",\"value\":{\"socket\":\"number\",\"host\":\"string\",\"port\":\"number\"}}}},{\"name\":\"core.udpsocket\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_BOUND\":\"Socket already bound\",\"ALREADY_CLOSED\":\"Socket already closed\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"NETWORK_CHANGED\":\"Network changed\",\"SEND_FAILED\":\"Send failed\"}},\"bind\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"localAddress\":\"string\",\"localPort\":\"number\"}},\"sendTo\":{\"type\":\"method\",\"value\":[\"buffer\",\"string\",\"number\"],\"ret\":\"number\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"destroy\":{\"type\":\"method\",\"value\":[]},\"onData\":{\"type\":\"event\",\"value\":{\"resultCode\":\"number\",\"address\":\"string\",\"port\":\"number\",\"data\":\"buffer\"}}}},{\"name\":\"core.view\",\"api\":{\"show\":{\"type\":\"method\",\"value\":[\"string\"]},\"isSecure\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"close\":{\"type\":\"method\",\"value\":[]},\"postMessage\":{\"type\":\"method\",\"value\":[\"object\"]},\"message\":{\"type\":\"event\",\"value\":\"object\"},\"onClose\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.websocket\",\"api\":{\"constructor\":{\"value\":[\"string\",[\"array\",\"string\"]]},\"send\":{\"type\":\"method\",\"value\":[{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"close\":{\"type\":\"method\",\"value\":[\"number\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"onOpen\":{\"type\":\"event\",\"value\":[]},\"onError\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onClose\":{\"type\":\"event\",\"value\":{\"code\":\"number\",\"reason\":\"string\",\"wasClean\":\"boolean\"}}}},{\"name\":\"core.xhr\",\"api\":{\"open\":{\"type\":\"method\",\"value\":[\"string\",\"string\",\"boolean\",\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[{\"string\":\"string\",\"buffer\":\"buffer\",\"blob\":\"blob\"}]},\"abort\":{\"type\":\"method\",\"value\":[]},\"getResponseHeader\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"getAllResponseHeaders\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setRequestHeader\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"overrideMimeType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getResponse\":{\"type\":\"method\",\"value\":[],\"ret\":{\"string\":\"string\",\"buffer\":\"buffer\",\"object\":\"object\"}},\"getResponseText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseURL\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setResponseType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getStatus\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getStatusText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getTimeout\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"setTimeout\":{\"type\":\"method\",\"value\":[\"number\"]},\"getWithCredentials\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"setWithCredentials\":{\"type\":\"method\",\"value\":[\"boolean\"]},\"onloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onerror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"ontimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onreadystatechange\":{\"type\":\"event\",\"value\":{}},\"onuploadloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploaderror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadtimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadreadystatechange\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"social\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"User is currently offline\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\",\"LOGIN_BADCREDENTIALS\":\"Error authenticating with server\",\"LOGIN_FAILEDCONNECTION\":\"Error connecting to server\",\"LOGIN_ALREADYONLINE\":\"User is already logged in\",\"LOGIN_OAUTHERROR\":\"OAuth Error\",\"SEND_INVALIDDESTINATION\":\"Message sent to an invalid destination\"}},\"STATUS\":{\"type\":\"constant\",\"value\":{\"OFFLINE\":\"OFFLINE\",\"ONLINE\":\"ONLINE\",\"ONLINE_WITH_OTHER_APP\":\"ONLINE_WITH_OTHER_APP\"}},\"login\":{\"type\":\"method\",\"value\":[{\"agent\":\"string\",\"version\":\"string\",\"url\":\"string\",\"interactive\":\"boolean\",\"rememberLogin\":\"boolean\"}],\"ret\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clearCachedCredentials\":{\"type\":\"method\",\"value\":[]},\"getClients\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getUsers\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"sendMessage\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"logout\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"from\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"message\":\"string\"}},\"onUserProfile\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"lastUpdated\":\"number\",\"name\":\"string\",\"url\":\"string\",\"imageData\":\"string\"}},\"onClientState\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"}}}},{\"name\":\"storage\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"storebuffer\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"transport\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"proxy\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"tag\":\"string\",\"data\":\"buffer\"}},\"onClose\":{\"type\":\"event\",\"value\":[]}}}];\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.2.1\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n    function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n      var parent = this;\n\n      var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\n      if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {\n        lib$es6$promise$$internal$$makePromise(child);\n      }\n\n      var state = parent._state;\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$es6$promise$asap$$asap(function(){\n          lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);\n        });\n      } else {\n        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$es6$promise$then$$default &&\n          constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    var lib$es6$promise$$internal$$id = 0;\n    function lib$es6$promise$$internal$$nextId() {\n      return lib$es6$promise$$internal$$id++;\n    }\n\n    function lib$es6$promise$$internal$$makePromise(promise) {\n      promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;\n      promise._state = undefined;\n      promise._result = undefined;\n      promise._subscribers = [];\n    }\n\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        return new Constructor(function(resolve, reject) {\n          reject(new TypeError('You must pass an array to race.'));\n        });\n      } else {\n        return new Constructor(function(resolve, reject) {\n          var length = entries.length;\n          for (var i = 0; i < length; i++) {\n            Constructor.resolve(entries[i]).then(resolve, reject);\n          }\n        });\n      }\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();\n      this._result = this._state = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$es6$promise$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {\n        lib$es6$promise$$internal$$makePromise(this.promise);\n      }\n\n      if (lib$es6$promise$utils$$isArray(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._result = new Array(this.length);\n\n        if (this.length === 0) {\n          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());\n      }\n    }\n\n    function lib$es6$promise$enumerator$$validationError() {\n      return new Error('Array Methods must be provided an Array');\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var input   = this._input;\n\n      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$es6$promise$promise$resolve$$default) {\n        var then = lib$es6$promise$$internal$$getThen(entry);\n\n        if (then === lib$es6$promise$then$$default &&\n            entry._state !== lib$es6$promise$$internal$$PENDING) {\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = entry;\n        } else if (c === lib$es6$promise$promise$$default) {\n          var promise = new c(lib$es6$promise$$internal$$noop);\n          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        this._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = value;\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n    try {\n        cachedSetTimeout = setTimeout;\n    } catch (e) {\n        cachedSetTimeout = function () {\n            throw new Error('setTimeout is not defined');\n        }\n    }\n    try {\n        cachedClearTimeout = clearTimeout;\n    } catch (e) {\n        cachedClearTimeout = function () {\n            throw new Error('clearTimeout is not defined');\n        }\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*jslint node:true*/\n/*globals RTCPeerConnection, mozRTCPeerConnection, webkitRTCPeerConnection */\n/*globals RTCSessionDescription, mozRTCSessionDescription */\n/*globals RTCIceCandidate, mozRTCIceCandidate */\n'use strict';\n\nvar myRTCPeerConnection = null;\nvar myRTCSessionDescription = null;\nvar myRTCIceCandidate = null;\n\nvar renameIceURLs = function (config) {\n  if (!config) {\n    return;\n  }\n  if (!config.iceServers) {\n    return config;\n  }\n  config.iceServers.forEach(function (server) {\n    server.url = server.urls;\n    delete server.urls;\n  });\n  return config;\n};\n\nvar fixChromeStatsResponse = function(response) {\n  var standardReport = {};\n  var reports = response.result();\n  reports.forEach(function(report) {\n    var standardStats = {\n      id: report.id,\n      timestamp: report.timestamp,\n      type: report.type\n    };\n    report.names().forEach(function(name) {\n      standardStats[name] = report.stat(name);\n    });\n    standardReport[standardStats.id] = standardStats;\n  });\n\n  return standardReport;\n};\n\nvar fixFirefoxStatsResponse = function(response) {\n  // Giving the response directly to the callback gives an object w/o interface\n  // https://developer.mozilla.org/en-US/docs/Mozilla/WebIDL_bindings#ChromeOnly\n  var standardReport = {};\n  response.forEach(function (report) {\n    standardReport[report.id] = report;\n  });\n  return standardReport;\n};\n\nvar sessionHasData = function(desc) {\n  if (!desc) {\n    return false;\n  }\n  var hasData = false;\n  var prefix = 'm=application';\n  desc.sdp.split('\\n').forEach(function(line) {\n    if (line.slice(0, prefix.length) === prefix) {\n      hasData = true;\n    }\n  });\n  return hasData;\n};\n\n// Unify PeerConnection Object.\nif (typeof RTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = RTCPeerConnection;\n} else if (typeof mozRTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = function (configuration, constraints) {\n    // Firefox uses 'url' rather than 'urls' for RTCIceServer.urls\n    var pc = new mozRTCPeerConnection(renameIceURLs(configuration), constraints);\n\n    // Firefox stats response is only visible 'ChromeOnly' so process it here\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(firefoxStatsResponse) {\n        successCallback(fixFirefoxStatsResponse(firefoxStatsResponse));\n      };\n      boundGetStats(selector, successCallbackWrapper, failureCallback);\n    };\n\n    // Firefox doesn't fire 'onnegotiationneeded' when a data channel is created\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n    var dataEnabled = false;\n    var boundCreateDataChannel = pc.createDataChannel.bind(pc);\n    pc.createDataChannel = function(label, dataChannelDict) {\n      var dc = boundCreateDataChannel(label, dataChannelDict);\n      if (!dataEnabled) {\n        dataEnabled = true;\n        if (pc.onnegotiationneeded &&\n            !sessionHasData(pc.localDescription) &&\n            !sessionHasData(pc.remoteDescription)) {\n          var event = new Event('negotiationneeded');\n          pc.onnegotiationneeded(event);\n        }\n      }\n      return dc;\n    };\n\n    return pc;\n  };\n} else if (typeof webkitRTCPeerConnection !== 'undefined') {\n  // Chrome returns a nonstandard, non-JSON-ifiable response from getStats.\n  myRTCPeerConnection = function(configuration, constraints) {\n    var pc = new webkitRTCPeerConnection(configuration, constraints);\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(chromeStatsResponse) {\n        successCallback(fixChromeStatsResponse(chromeStatsResponse));\n      };\n      // Chrome also takes its arguments in the wrong order.\n      boundGetStats(successCallbackWrapper, failureCallback, selector);\n    };\n    return pc;\n  };\n}\n\n// Unify SessionDescrption Object.\nif (typeof RTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = RTCSessionDescription;\n} else if (typeof mozRTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = mozRTCSessionDescription;\n}\n\n// Unify IceCandidate Object.\nif (typeof RTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = RTCIceCandidate;\n} else if (typeof mozRTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = mozRTCIceCandidate;\n}\n\nexports.RTCPeerConnection = myRTCPeerConnection;\nexports.RTCSessionDescription = myRTCSessionDescription;\nexports.RTCIceCandidate = myRTCIceCandidate;\n","/*globals navigator*/\n/*jshint node:true*/\nvar PromiseCompat = require('es6-promise').Promise;\nvar nav = false;\nif (typeof navigator !== 'undefined') {\n  nav = navigator;\n}\n\nvar BatteryProvider = function(cap, dispatchEvent) {\n  \"use strict\";\n  this._batteryPromise = nav && nav.getBattery ? nav.getBattery() : null;\n\n  if (this._batteryPromise) {\n    this._batteryPromise.then(function(battery) {\n      this._setupListeners(battery, dispatchEvent);\n    }.bind(this));\n  } else {\n    console.warn(\"Trying to use core.battery API without client support\");\n  }\n};\n\nBatteryProvider.prototype.isCharging = function() {\n  \"use strict\";\n  if (!this._batteryPromise) {\n    return PromiseCompat.resolve(true);  // Charging / plugged in\n  }\n  return this._batteryPromise.then(function(battery) {\n    return battery.charging;\n  });\n};\n\nBatteryProvider.prototype.getChargingTime = function() {\n  \"use strict\";\n  if (!this._batteryPromise) {\n    return PromiseCompat.resolve(0);  // Fully charged\n  }\n  return this._batteryPromise.then(function(battery) {\n    return battery.chargingTime;\n  });\n};\n\nBatteryProvider.prototype.getDischargingTime = function() {\n  \"use strict\";\n  if (!this._batteryPromise) {\n    return PromiseCompat.resolve(Infinity);  // Currently charging\n  }\n  return this._batteryPromise.then(function(battery) {\n    return battery.dischargingTime;\n  });\n};\n\nBatteryProvider.prototype.getLevel = function() {\n  \"use strict\";\n  if (!this._batteryPromise) {\n    return PromiseCompat.resolve(1.0);  // Fully charged\n  }\n  return this._batteryPromise.then(function(battery) {\n    return battery.level;\n  });\n};\n\nBatteryProvider.prototype._setupListeners = function(battery, dispatchEvent) {\n  \"use strict\";\n  var events = [\n    \"chargingchange\",\n    \"chargingtimechange\",\n    \"dischargingtimechange\",\n    \"levelchange\"\n  ];\n  events.forEach(function (eventName) {\n    battery.addEventListener(eventName, dispatchEvent.bind(this, eventName));\n  });\n};\n\nexports.name = \"core.battery\";\nexports.provider = BatteryProvider;\nexports.style = \"providePromises\";\nexports.flags = { provider: true };\nexports.setNavigator = function(impl) {\n  \"use strict\";\n  nav = impl;\n};\n","/*globals process, console */\n/*jslint indent:2,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A freedom.js logging provider that logs to chrome, firefox, and node consoles.\n * @Class Logger_console\n * @constructor\n * @private\n * @param {config: Object} cap Capabilities - console requires global config.\n */\nvar Logger_console = function (cap) {\n  this.level = (cap.config && cap.config.debug) || 'log';\n  this.console = (cap.config && cap.config.global.console);\n  util.handleEvents(this);\n};\n\n\n/**\n * Logging levels, for filtering output.\n * @private\n * @static\n */\nLogger_console.level = {\n  \"debug\": 0,\n  \"info\": 1,\n  \"log\": 2,\n  \"warn\": 3,\n  \"error\": 4\n};\n\n/**\n * Print a message with appropriate formatting.\n * @method print\n */\nLogger_console.prototype.print = function (severity, source, msg) {\n  var arr = msg;\n  if (typeof this.console === 'undefined' ||\n      this.console.freedom === true) {\n    return;\n  }\n  if (typeof arr === 'string') {\n    arr = [arr];\n  }\n  \n  if (Logger_console.level[this.level] !== undefined &&\n      Logger_console.level[severity] < Logger_console.level[this.level]) {\n    return;\n  }\n  \n  if (source) {\n    if (typeof process !== 'undefined' &&\n        {}.toString.call(process) === '[object process]') {\n      // Node.\n      arr.unshift('\\x1B[39m');\n      arr.unshift('\\x1B[31m' + source);\n    } else if (this.console.maxLogLevel) {\n      // Firefox in JSM context:\n      //   http://mxr.mozilla.org/mozilla-release/source/toolkit/devtools/Console.jsm\n      if (!this.console.freedomDump) {\n        this.console.freedomDump = this.console.dump;\n        this.console.dump = function() {};\n      }\n      this.console.freedomDump(source + ' ' + severity[0].toUpperCase() + ' ' +\n          arr.join(' ') + '\\n');\n    } else {\n      arr.unshift('color: none');\n      arr.unshift('color: red');\n      arr.unshift('%c' + source + '%c');\n    }\n  }\n\n  if (!this.console[severity] && this.console.log) {\n    severity = 'log';\n  }\n  this.console[severity].apply(this.console, arr);\n};\n\n/**\n * Log a message to the console.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.log = function (source, msg, continuation) {\n  this.print('log', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with debug priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.debug = function (source, msg, continuation) {\n  this.print('debug', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with info priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.info = function (source, msg, continuation) {\n  this.print('info', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with warn priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.warn = function (source, msg, continuation) {\n  this.print('warn', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with error priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.error = function (source, msg, continuation) {\n  this.print('error', source, msg);\n  continuation();\n};\n\n/** REGISTER PROVIDER **/\nexports.provider = Logger_console;\nexports.name = 'core.console';\nexports.flags = {config: true};\n","/*globals console, crypto */\n/*jslint indent:2, node:true */\nvar util = require('../../src/util');\n\n/**\n * A Core provider for getting cryptographically random buffers. This\n * functionality may not exist in all unpriviledged contexts - namely at this\n * point, firefox addon workers.\n * @Class Core_crypto\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Core_crypto = function(cap, dispatchEvent) {\n  'use strict';\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n};\n\n/**\n * Get a random buffer of some number of bytes.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\n Core_crypto.prototype.getRandomBytes = function(number, continuation) {\n   'use strict';\n   var buffer = new Uint8Array(number);\n   crypto.getRandomValues(buffer);\n   continuation(buffer.buffer);\n};\n\nexports.provider = Core_crypto;\nexports.name = \"core.crypto\";\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A minimal provider implementing the core.echo interface for interaction with\n * custom channels.  Primarily used for testing the robustness of the custom\n * channel implementation.\n * @Class Echo_unprivileged\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Echo_unprivileged = function(cap, dispatchEvent) {\n  this.mod = cap.module;\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n\n  // The Core object for managing channels.\n  this.mod.once('core', function(Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.mod.emit(this.mod.controlChannel, {\n    type: 'core request delegated to echo',\n    request: 'core'\n  });\n};\n\n/**\n * Setup the provider to echo on a specific proxy. Subsequent messages\n * From the custom channel bound here will be re-emitted as a message\n * from the provider.  Subsequent messages to the provider will be\n * emitted on the bound channel.\n * @param {Object} proxy The identifier for the custom channel to bind.\n * @param {Function} continuation Function to call when setup is complete.\n * @method setup\n */\nEcho_unprivileged.prototype.setup = function(proxy, continuation) {\n  continuation();\n  if (!this.core) {\n    this.dispatchEvent('message', 'no core available to setup proxy with at echo');\n    return;\n  }\n\n  this.core.bindChannel(proxy, function(chan) {\n    if (this.chan) {\n      this.chan.close();\n    }\n    this.chan = chan;\n    this.chan.onClose(function() {\n      delete this.chan;\n    }.bind(this));\n    this.dispatchEvent('message', 'channel bound to echo');\n    this.chan.on('message', function(m) {\n      this.dispatchEvent('message', 'from custom channel: ' + m);\n    }.bind(this));\n  }.bind(this));\n};\n\n/**\n * Send a message to the bound custom channel.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\nEcho_unprivileged.prototype.send = function(str, continuation) {\n  continuation();\n  if (this.chan) {\n    this.chan.emit('message', str);\n  } else {\n    this.dispatchEvent('message', 'no channel available');\n  }\n};\n\nexports.provider = Echo_unprivileged;\nexports.name = \"core.echo\";\nexports.flags = {module: true};\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true,node:true */\n\n/**\n * An oAuth meta-provider allowing multiple platform-dependant\n * oAuth implementations to serve as the redirectURL for an oAuth flow.\n * The core implementations are provided in providers/oauth, and are\n * supplemented in platform-dependent repositories.\n *\n */\nvar OAuth = function (handlers, cap, dispatchEvent) {\n  this.handlers = handlers;\n  this.dispatchEvent = dispatchEvent;\n  this.ongoing = {};\n};\n\n/**\n * Register oAuth handlers.\n * This method should be called before provider is used, and binds the current\n * oAuth provider to be associated with registered handlers. This is used so\n * that handlers which are registered by the user apply only the the freedom()\n * setup call they are associated with, while still being registered across\n * multiple instances of OAuth providers.\n *\n * @method register\n * @param {[constructor]} handlers\n * @private\n */\nOAuth.register = function (handlers) {\n  var i,\n      boundHandlers = [];\n  if (!handlers || !handlers.length) {\n    return OAuth.reset();\n  }\n\n  for (i = 0; i < handlers.length; i += 1) {\n    boundHandlers.push(new handlers[i]());\n  }\n  exports.provider = OAuth.bind(this, boundHandlers);\n};\n\n/**\n * Reset the oAuth provider registrations.\n * @method reset\n * @private\n */\nOAuth.reset = function () {\n  exports.provider = OAuth.bind(this, []);\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n */\nOAuth.prototype.initiateOAuth = function (redirectURIs, continuation) {\n  var promise, i, successCallback;\n  successCallback = function(result) {\n    this.ongoing[result.state] = this.handlers[i];\n    continuation(result);\n  }.bind(this);\n\n  for (i = 0; i < this.handlers.length; i += 1) {\n    if (this.handlers[i].initiateOAuth(redirectURIs, successCallback)) {\n      return;\n    }\n  }\n  //If here, we have no compatible providers\n  continuation(null, {\n    'errcode': 'UNKNOWN',\n    'message': 'No requested redirects can be handled.'\n  });\n  return;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive OAuth flow.\n *    Defaults to true.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nOAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive,\n                                          continuation) {\n  if (!this.ongoing.hasOwnProperty(stateObj.state)) {\n    continuation(undefined, {\n      'errcode': 'UNKNOWN',\n      'message': 'You must begin the oAuth flow with initiateOAuth first'\n    });\n    return;\n  }\n  if (interactive === undefined) {\n    interactive = true;\n  }\n  this.ongoing[stateObj.state].launchAuthFlow(\n      authUrl, stateObj, interactive, continuation);\n  delete this.ongoing[stateObj.state];\n};\n\nexports.register = OAuth.register;\nexports.reset = OAuth.reset;\nexports.provider = OAuth.bind(this, []);\nexports.name = 'core.oauth';\n","/*globals console, RTCPeerConnection, webkitRTCPeerConnection */\n/*globals mozRTCPeerConnection, RTCSessionDescription, RTCIceCandidate */\n/*globals mozRTCSessionDescription, mozRTCIceCandidate */\n/*globals ArrayBuffer, Blob */\n/*jslint indent:2,sloppy:true,node:true */\n/**\n * DataPeer - a class that wraps peer connections and data channels.\n */\n// TODO: check that Handling of pranswer is treated appropriately.\nvar SimpleDataPeerState = {\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED'\n};\n\nfunction SimpleDataPeer(peerName, stunServers, dataChannelCallbacks, mocks) {\n  var constraints,\n    config,\n    i;\n  this.peerName = peerName;\n  this.channels = {};\n  this.dataChannelCallbacks = dataChannelCallbacks;\n  this.onConnectedQueue = [];\n\n  if (typeof mocks.RTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mocks.RTCPeerConnection;\n  } else if (typeof webkitRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = webkitRTCPeerConnection;\n  } else if (typeof mozRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mozRTCPeerConnection;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCPeerConnection\");\n  }\n\n  if (typeof mocks.RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mocks.RTCSessionDescription;\n  } else if (typeof RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = RTCSessionDescription;\n  } else if (typeof mozRTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mozRTCSessionDescription;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCSessionDescription\");\n  }\n\n  if (typeof mocks.RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mocks.RTCIceCandidate;\n  } else if (typeof RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = RTCIceCandidate;\n  } else if (typeof mozRTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mozRTCIceCandidate;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCIceCandidate\");\n  }\n\n\n  constraints = {\n    optional: [{DtlsSrtpKeyAgreement: true}]\n  };\n  // A way to speak to the peer to send SDP headers etc.\n  this.sendSignalMessage = null;\n\n  this.pc = null;  // The peer connection.\n  // Get TURN servers for the peer connection.\n  config = {iceServers: []};\n  for (i = 0; i < stunServers.length; i += 1) {\n    config.iceServers.push({\n      'url' : stunServers[i]\n    });\n  }\n  this.pc = new this.RTCPeerConnection(config, constraints);\n  // Add basic event handlers.\n  this.pc.addEventListener(\"icecandidate\",\n                            this.onIceCallback.bind(this));\n  this.pc.addEventListener(\"negotiationneeded\",\n                            this.onNegotiationNeeded.bind(this));\n  this.pc.addEventListener(\"datachannel\",\n                            this.onDataChannel.bind(this));\n  this.pc.addEventListener(\"signalingstatechange\", function () {\n    // TODO: come up with a better way to detect connection.  We start out\n    // as \"stable\" even before we are connected.\n    // TODO: this is not fired for connections closed by the other side.\n    // This will be fixed in m37, at that point we should dispatch an onClose\n    // event here for freedom.transport to pick up.\n    if (this.pc.signalingState === \"stable\") {\n      this.pcState = SimpleDataPeerState.CONNECTED;\n      this.onConnectedQueue.map(function (callback) { callback(); });\n    }\n  }.bind(this));\n  // This state variable is used to fake offer/answer when they are wrongly\n  // requested and we really just need to reuse what we already have.\n  this.pcState = SimpleDataPeerState.DISCONNECTED;\n\n  // Note: to actually do something with data channels opened by a peer, we\n  // need someone to manage \"datachannel\" event.\n}\n\nSimpleDataPeer.prototype.createOffer = function (constaints, continuation) {\n  this.pc.createOffer(continuation, function () {\n    console.error('core.peerconnection createOffer failed.');\n  }, constaints);\n};\n\nSimpleDataPeer.prototype.runWhenConnected = function (func) {\n  if (this.pcState === SimpleDataPeerState.CONNECTED) {\n    func();\n  } else {\n    this.onConnectedQueue.push(func);\n  }\n};\n\nSimpleDataPeer.prototype.send = function (channelId, message, continuation) {\n  this.channels[channelId].send(message);\n  continuation();\n};\n\nSimpleDataPeer.prototype.openDataChannel = function (channelId, continuation) {\n  var dataChannel = this.pc.createDataChannel(channelId, {});\n  dataChannel.onopen = function () {\n    this.addDataChannel(channelId, dataChannel);\n    continuation();\n  }.bind(this);\n  dataChannel.onerror = function (err) {\n    //@(ryscheng) todo - replace with errors that work across the interface\n    console.error(err);\n    continuation(undefined, err);\n  };\n  // Firefox does not fire \"negotiationneeded\", so we need to\n  // negotate here if we are not connected.\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n  if (typeof mozRTCPeerConnection !== \"undefined\" &&\n      this.pcState === SimpleDataPeerState.DISCONNECTED) {\n    this.negotiateConnection();\n  }\n};\n\nSimpleDataPeer.prototype.closeChannel = function (channelId) {\n  if (this.channels[channelId] !== undefined) {\n    this.channels[channelId].close();\n    delete this.channels[channelId];\n  }\n};\n\nSimpleDataPeer.prototype.getBufferedAmount = function (channelId,\n                                                       continuation) {\n  if (this.channels[channelId] !== undefined) {\n    var dataChannel = this.channels[channelId];\n    return dataChannel.bufferedAmount;\n  }\n  throw new Error(\"No channel with id: \" + channelId);\n};\n\nSimpleDataPeer.prototype.setSendSignalMessage = function (sendSignalMessageFn) {\n  this.sendSignalMessage = sendSignalMessageFn;\n};\n\n// Handle a message send on the signalling channel to this peer.\nSimpleDataPeer.prototype.handleSignalMessage = function (messageText) {\n  //console.log(this.peerName + \": \" + \"handleSignalMessage: \\n\" + messageText);\n  var json = JSON.parse(messageText),\n    ice_candidate;\n\n  // TODO: If we are offering and they are also offerring at the same time,\n  // pick the one who has the lower randomId?\n  // (this.pc.signalingState == \"have-local-offer\" && json.sdp &&\n  //    json.sdp.type == \"offer\" && json.sdp.randomId < this.localRandomId)\n  if (json.sdp) {\n    // Set the remote description.\n    this.pc.setRemoteDescription(\n      new this.RTCSessionDescription(json.sdp),\n      // Success\n      function () {\n        //console.log(this.peerName + \": setRemoteDescription succeeded\");\n        if (this.pc.remoteDescription.type === \"offer\") {\n          this.pc.createAnswer(this.onDescription.bind(this),\n                               console.error);\n        }\n      }.bind(this),\n      // Failure\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setRemoteDescription failed:\", e);\n      }.bind(this)\n    );\n  } else if (json.candidate) {\n    // Add remote ice candidate.\n    //console.log(this.peerName + \": Adding ice candidate: \" + JSON.stringify(json.candidate));\n    ice_candidate = new this.RTCIceCandidate(json.candidate);\n    this.pc.addIceCandidate(ice_candidate);\n  } else {\n    console.warn(this.peerName + \": \" +\n        \"handleSignalMessage got unexpected message: \", messageText);\n  }\n};\n\n// Connect to the peer by the signalling channel.\nSimpleDataPeer.prototype.negotiateConnection = function () {\n  this.pcState = SimpleDataPeerState.CONNECTING;\n  this.pc.createOffer(\n    this.onDescription.bind(this),\n    function (e) {\n      console.error(this.peerName + \": \" +\n          \"createOffer failed: \", e.toString());\n      this.pcState = SimpleDataPeerState.DISCONNECTED;\n    }.bind(this)\n  );\n};\n\nSimpleDataPeer.prototype.isClosed = function () {\n  return !this.pc || this.pc.signalingState === \"closed\";\n};\n\nSimpleDataPeer.prototype.close = function () {\n  if (!this.isClosed()) {\n    this.pc.close();\n  }\n  //console.log(this.peerName + \": \" + \"Closed peer connection.\");\n};\n\nSimpleDataPeer.prototype.addDataChannel = function (channelId, channel) {\n  var callbacks = this.dataChannelCallbacks;\n  this.channels[channelId] = channel;\n\n  if (channel.readyState === \"connecting\") {\n    channel.onopen = callbacks.onOpenFn.bind(this, channel, {label: channelId});\n  }\n\n  channel.onclose = callbacks.onCloseFn.bind(this, channel, {label: channelId});\n\n  channel.onmessage = callbacks.onMessageFn.bind(this, channel,\n                                                 {label: channelId});\n\n  channel.onerror = callbacks.onErrorFn.bind(this, channel, {label: channel});\n};\n\n// When we get our description, we set it to be our local description and\n// send it to the peer.\nSimpleDataPeer.prototype.onDescription = function (description) {\n  if (this.sendSignalMessage) {\n    this.pc.setLocalDescription(\n      description,\n      function () {\n        //console.log(this.peerName + \": setLocalDescription succeeded\");\n        this.sendSignalMessage(JSON.stringify({'sdp': description}));\n      }.bind(this),\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setLocalDescription failed:\", e);\n      }.bind(this)\n    );\n  } else {\n    console.error(this.peerName + \": \" +\n        \"_onDescription: _sendSignalMessage is not set, so we did not \" +\n            \"set the local description. \");\n  }\n};\n\nSimpleDataPeer.prototype.onNegotiationNeeded = function (e) {\n  //console.log(this.peerName + \": \" + \"onNegotiationNeeded\",\n  //            JSON.stringify(this._pc), e);\n  if (this.pcState !== SimpleDataPeerState.DISCONNECTED) {\n    // Negotiation messages are falsely requested for new data channels.\n    //   https://code.google.com/p/webrtc/issues/detail?id=2431\n    // This code is a hack to simply reset the same local and remote\n    // description which will trigger the appropriate data channel open event.\n    // TODO: fix/remove this when Chrome issue is fixed.\n    var logSuccess = function (op) {\n      return function () {\n        //console.log(this.peerName + \": \" + op + \" succeeded \");\n      }.bind(this);\n    }.bind(this),\n      logFail = function (op) {\n        return function (e) {\n          //console.log(this.peerName + \": \" + op + \" failed: \" + e);\n        }.bind(this);\n      }.bind(this);\n    if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"offer\") {\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n    } else if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"answer\") {\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n    } else {\n      console.error(this.peerName + ', onNegotiationNeeded failed');\n    }\n    return;\n  }\n  this.negotiateConnection();\n};\n\nSimpleDataPeer.prototype.onIceCallback = function (event) {\n  if (event.candidate) {\n    // Send IceCandidate to peer.\n    //console.log(this.peerName + \": \" + \"ice callback with candidate\", event);\n    if (this.sendSignalMessage) {\n      this.sendSignalMessage(JSON.stringify({'candidate': event.candidate}));\n    } else {\n      console.warn(this.peerName + \": \" + \"_onDescription: _sendSignalMessage is not set.\");\n    }\n  }\n};\n\nSimpleDataPeer.prototype.onSignalingStateChange = function () {\n  //console.log(this.peerName + \": \" + \"onSignalingStateChange: \", this._pc.signalingState);\n  if (this.pc.signalingState === \"stable\") {\n    this.pcState = SimpleDataPeerState.CONNECTED;\n    this.onConnectedQueue.map(function (callback) { callback(); });\n  }\n};\n\nSimpleDataPeer.prototype.onDataChannel = function (event) {\n  this.addDataChannel(event.channel.label, event.channel);\n  // RTCDataChannels created by a RTCDataChannelEvent have an initial\n  // state of open, so the onopen event for the channel will not\n  // fire. We need to fire the onOpenDataChannel event here\n  // http://www.w3.org/TR/webrtc/#idl-def-RTCDataChannelState\n\n  // Firefox channels do not have an initial state of \"open\"\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=1000478\n  if (event.channel.readyState === \"open\") {\n    this.dataChannelCallbacks.onOpenFn(event.channel,\n                                       {label: event.channel.label});\n  }\n};\n\n// _signallingChannel is a channel for emitting events back to the freedom Hub.\nfunction PeerConnection(portModule, dispatchEvent,\n                        RTCPeerConnection, RTCSessionDescription,\n                        RTCIceCandidate) {\n  // Channel for emitting events to consumer.\n  this.dispatchEvent = dispatchEvent;\n\n  // a (hopefully unique) ID for debugging.\n  this.peerName = \"p\" + Math.random();\n\n  // This is the portApp (defined in freedom/src/port-app.js). A way to speak\n  // to freedom.\n  this.freedomModule = portModule.module;\n\n  // For tests we may mock out the PeerConnection and\n  // SessionDescription implementations\n  this.RTCPeerConnection = RTCPeerConnection;\n  this.RTCSessionDescription = RTCSessionDescription;\n  this.RTCIceCandidate = RTCIceCandidate;\n\n  // This is the a channel to send signalling messages.\n  this.signallingChannel = null;\n\n  // The DataPeer object for talking to the peer.\n  this.peer = null;\n\n  // The Core object for managing channels.\n  this.freedomModule.once('core', function (Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.freedomModule.emit(this.freedomModule.controlChannel, {\n    type: 'core request delegated to peerconnection',\n    request: 'core'\n  });\n}\n\n// Start a peer connection using the given freedomChannelId as the way to\n// communicate with the peer. The argument |freedomChannelId| is a way to speak\n// to an identity provide to send them SDP headers negotiate the address/port to\n// setup the peer to peerConnection.\n//\n// options: {\n//   peerName: string,   // For pretty printing messages about this peer.\n//   debug: boolean           // should we add extra\n// }\nPeerConnection.prototype.setup = function (signallingChannelId, peerName,\n                                           stunServers, initiateConnection,\n                                           continuation) {\n  this.peerName = peerName;\n  var mocks = {RTCPeerConnection: this.RTCPeerConnection,\n               RTCSessionDescription: this.RTCSessionDescription,\n               RTCIceCandidate: this.RTCIceCandidate},\n    self = this,\n    dataChannelCallbacks = {\n      // onOpenFn is called at the point messages will actually get through.\n      onOpenFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onOpenDataChannel\",\n                         { channelId: info.label});\n      },\n      onCloseFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onCloseDataChannel\",\n                         { channelId: info.label});\n      },\n      // Default on real message prints it to console.\n      onMessageFn: function (dataChannel, info, event) {\n        if (event.data instanceof ArrayBuffer) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'buffer': event.data\n          });\n        } else if (event.data instanceof Blob) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'binary': event.data\n          });\n        } else if (typeof (event.data) === 'string') {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'text': event.data\n          });\n        }\n      },\n      // Default on error, prints it.\n      onErrorFn: function (dataChannel, info, err) {\n        console.error(dataChannel.peerName + \": dataChannel(\" +\n                      dataChannel.dataChannel.label + \"): error: \", err);\n      }\n    },\n    channelId,\n    openDataChannelContinuation;\n\n  this.peer = new SimpleDataPeer(this.peerName, stunServers,\n                                 dataChannelCallbacks, mocks);\n\n  // Setup link between Freedom messaging and _peer's signalling.\n  // Note: the signalling channel should only be sending receiveing strings.\n  this.core.bindChannel(signallingChannelId, function (channel) {\n    this.signallingChannel = channel;\n    this.peer.setSendSignalMessage(function (msg) {\n      this.signallingChannel.emit('message', msg);\n    }.bind(this));\n    this.signallingChannel.on('message',\n        this.peer.handleSignalMessage.bind(this.peer));\n    this.signallingChannel.emit('ready');\n    if (!initiateConnection) {\n      this.peer.runWhenConnected(continuation);\n    }\n  }.bind(this));\n\n  if (initiateConnection) {\n    // Setup a connection right away, then invoke continuation.\n    console.log(this.peerName + ' initiating connection');\n    channelId = 'hello' + Math.random().toString();\n    openDataChannelContinuation = function (success, error) {\n      if (error) {\n        continuation(undefined, error);\n      } else {\n        this.closeDataChannel(channelId, continuation);\n      }\n    }.bind(this);\n    this.openDataChannel(channelId, openDataChannelContinuation);\n  }\n};\n\nPeerConnection.prototype.createOffer = function (constraints, continuation) {\n  this.peer.createOffer(constraints, continuation);\n};\n\n// TODO: delay continuation until the open callback from _peer is called.\nPeerConnection.prototype.openDataChannel = function (channelId, continuation) {\n  this.peer.openDataChannel(channelId, continuation);\n};\n\nPeerConnection.prototype.closeDataChannel = function (channelId, continuation) {\n  this.peer.closeChannel(channelId);\n  continuation();\n};\n\n// Called to send a message over the given datachannel to a peer. If the data\n// channel doesn't already exist, the DataPeer creates it.\nPeerConnection.prototype.send = function (sendInfo, continuation) {\n  var objToSend = sendInfo.text || sendInfo.buffer || sendInfo.binary;\n  if (typeof objToSend === 'undefined') {\n    console.error(\"No valid data to send has been provided.\", sendInfo);\n    return;\n  }\n  //DEBUG\n  // objToSend = new ArrayBuffer(4);\n  //DEBUG\n  this.peer.send(sendInfo.channelLabel, objToSend, continuation);\n};\n\nPeerConnection.prototype.getBufferedAmount = function (channelId, continuation) {\n  continuation(this.peer.getBufferedAmount(channelId));\n};\n\nPeerConnection.prototype.close = function (continuation) {\n  if (this.peer.isClosed()) {\n    // Peer already closed, run continuation without dispatching event.\n    continuation();\n    return;\n  }\n  this.peer.close();\n  this.dispatchEvent(\"onClose\");\n  continuation();\n};\n\nexports.provider = PeerConnection;\nexports.name = 'core.peerconnection';\nexports.flags = {module: true};\n","/*jslint sloppy:true, node:true */\n/*globals Components, ArrayBuffer */\n\nvar util = require('../../src/util');\n\nvar eventNames = [\n  'onopen',\n  'onerror',\n  'onclose',\n  'onmessage'\n];\n\nvar unAttachedChannels = {};\nvar pendingEvents = {};\nvar allocateChannel = function (dataChannel) {\n  var id = util.getId();\n  unAttachedChannels[id] = dataChannel;\n  pendingEvents[id] = [];\n  eventNames.forEach(function(eventName) {\n    // This listener will be overridden (re-set) after the constructor runs.\n    var handler = function(event) {\n      var currentHandler = dataChannel[eventName];\n      if (currentHandler === handler) {\n        pendingEvents[id].push(event);\n      } else if (typeof currentHandler === 'function') {\n        // If an event somehow runs on this event handler after it has been\n        // replaced, forward that event to the new event handler.\n        currentHandler(event);\n      } else {\n        throw new Error('No handler for ' + event.type + ' event');\n      }\n    };\n    dataChannel[eventName] = handler;\n  });\n  return id;\n};\n\nvar RTCDataChannelAdapter = function (cap, dispatchEvents, id) {\n  this.dispatchEvent = dispatchEvents;\n  if (!unAttachedChannels[id]) {\n    console.warn('Invalid ID, creating acting on unattached DataChannel');\n    var Connection = require('./core.rtcpeerconnection').provider,\n      provider = new Connection();\n    id = provider.createDataChannel();\n    provider.close();\n  }\n\n  this.channel = unAttachedChannels[id];\n  delete unAttachedChannels[id];\n\n  // After the constructor returns, and the caller has a chance to register\n  // event listeners, fire all pending events, and then ensure that all\n  // subsequent events are handled immediately.\n  setTimeout(function() {\n    this.drainPendingEvents(id);\n\n    // This function must not be called until after the pending events are\n    // drained, to ensure that messages are delivered in order.\n    this.manageEvents(true);\n  }.bind(this), 0);\n};\n\nRTCDataChannelAdapter.prototype.drainPendingEvents = function(id) {\n  pendingEvents[id].forEach(function(event) {\n    this['on' + event.type](event);\n  }.bind(this));\n  delete pendingEvents[id];\n};\n\n// Attach or detach listeners for events against the connection.\nRTCDataChannelAdapter.prototype.manageEvents = function (attach) {\n  eventNames.forEach(function (eventName) {\n    if (attach) {\n      this[eventName] = this[eventName].bind(this);\n      this.channel[eventName] = this[eventName];\n    } else {\n      delete this.channel[eventName];\n    }\n  }.bind(this));\n};\n\nRTCDataChannelAdapter.prototype.getLabel = function (callback) {\n  callback(this.channel.label);\n};\n\nRTCDataChannelAdapter.prototype.getOrdered = function (callback) {\n  callback(this.channel.ordered);\n};\n\nRTCDataChannelAdapter.prototype.getMaxPacketLifeTime = function (callback) {\n  callback(this.channel.maxPacketLifeTime);\n};\n\nRTCDataChannelAdapter.prototype.getMaxRetransmits = function (callback) {\n  callback(this.channel.maxRetransmits);\n};\n\nRTCDataChannelAdapter.prototype.getProtocol = function (callback) {\n  callback(this.channel.protocol);\n};\n\nRTCDataChannelAdapter.prototype.getNegotiated = function (callback) {\n  callback(this.channel.negotiated);\n};\n\nRTCDataChannelAdapter.prototype.getId = function (callback) {\n  callback(this.channel.id);\n};\n\nRTCDataChannelAdapter.prototype.getReadyState = function (callback) {\n  callback(this.channel.readyState);\n};\n\nRTCDataChannelAdapter.prototype.getBufferedAmount = function (callback) {\n  callback(this.channel.bufferedAmount);\n};\n\nRTCDataChannelAdapter.prototype.getBinaryType = function (callback) {\n  callback(this.channel.binaryType);\n};\nRTCDataChannelAdapter.prototype.setBinaryType = function (binaryType, callback) {\n  this.channel.binaryType = binaryType;\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.send = function (text, callback) {\n  this.channel.send(text);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.sendBuffer = function (buffer, callback) {\n  this.channel.send(buffer);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.close = function (callback) {\n  if (!this.channel) {\n    return callback();\n  }\n  this.manageEvents(false);\n  this.channel.close();\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.onopen = function (event) {\n  this.dispatchEvent('onopen', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onerror = function (event) {\n  this.dispatchEvent('onerror', {\n    errcode: event.type,\n    message: event.message\n  });\n};\n\nRTCDataChannelAdapter.prototype.onclose = function (event) {\n  this.dispatchEvent('onclose', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onmessage = function (event) {\n  if (typeof event.data === 'string') {\n    this.dispatchEvent('onmessage', {text: event.data});\n  } else if (this.channel.binaryType === 'arraybuffer' &&\n      typeof Components !== 'undefined' &&\n      !(event.data instanceof ArrayBuffer)) {\n    // In Firefox Addons, incoming array buffers are not always owned by the\n    // Addon context. The following line clones the object to take ownership.\n    // See: https://developer.mozilla.org/en-US/docs/Components.utils.cloneInto\n    var myData = Components.utils.cloneInto(event.data, {});\n    this.dispatchEvent('onmessage', {buffer: myData});\n  } else {\n    this.dispatchEvent('onmessage', {buffer: event.data});\n  }\n};\n\nexports.name = \"core.rtcdatachannel\";\nexports.provider = RTCDataChannelAdapter;\nexports.allocate = allocateChannel;\n","/*jslint indent:2,sloppy:true, node:true */\n\nvar PromiseCompat = require('es6-promise').Promise;\nvar wrtcClass, RTCPeerConnection, RTCSessionDescription, RTCIceCandidate;\nvar DataChannel = require('./core.rtcdatachannel');\n\nvar RTCPeerConnectionAdapter = function (cap, dispatchEvent, configuration) {\n  if (typeof wrtcClass === 'undefined') {\n    // only works in browser, so node should use setImpl (see exports)\n    var adapter = require('webrtc-adapter');\n    RTCPeerConnection = adapter.RTCPeerConnection;\n    RTCSessionDescription = adapter.RTCSessionDescription;\n    RTCIceCandidate = adapter.RTCIceCandidate;\n  } else {\n    RTCPeerConnection = wrtcClass.RTCPeerConnection;\n    RTCSessionDescription = wrtcClass.RTCSessionDescription;\n    RTCIceCandidate = wrtcClass.RTCIceCandidate;\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    this.connection = new RTCPeerConnection(configuration);\n  } catch (e) {\n    // Note: You can't ask the provider to close you synchronously, since\n    // the constructor has not yet returned, so there's no 'this' that\n    // the provider can know about yet.\n    setTimeout(cap.provider.close.bind(cap.provider, this), 0);\n    return;\n  }\n\n  this.events = [\n    'ondatachannel',\n    'onnegotiationneeded',\n    'onicecandidate',\n    'onsignalingstatechange',\n    'onaddstream',\n    'onremovestream',\n    'oniceconnectionstatechange'\n  ];\n  this.manageEvents(true);\n};\n\n// Attach or detach listeners for events against the connection.\nRTCPeerConnectionAdapter.prototype.manageEvents = function (attach) {\n  this.events.forEach(function (event) {\n    if (attach) {\n      this[event] = this[event].bind(this);\n      this.connection[event] = this[event];\n    } else if (this.connection) {\n      delete this.connection[event];\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createOffer = function (constraints) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createOffer(resolve, reject, constraints);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createAnswer = function () {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createAnswer(resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.setLocalDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setLocalDescription(new RTCSessionDescription(description),\n                                        resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalDescription = function () {\n  return PromiseCompat.resolve(this.connection.localDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.setRemoteDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setRemoteDescription(new RTCSessionDescription(description),\n                                         resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteDescription = function () {\n  return PromiseCompat.resolve(this.connection.remoteDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.getSignalingState = function () {\n  return PromiseCompat.resolve(this.connection.signalingState);\n};\n\nRTCPeerConnectionAdapter.prototype.updateIce = function (configuration) {\n  this.connection.updateIce(configuration);\n  return PromiseCompat.resolve();\n};\n\nRTCPeerConnectionAdapter.prototype.addIceCandidate = function (candidate) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.addIceCandidate(new RTCIceCandidate(candidate),\n                                    resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getIceGatheringState = function () {\n  return PromiseCompat.resolve(this.connection.iceGatheringState);\n};\n\nRTCPeerConnectionAdapter.prototype.getIceConnectionState = function () {\n  return PromiseCompat.resolve(this.connection.iceConnectionState);\n};\n\nRTCPeerConnectionAdapter.prototype.getConfiguration = function () {\n  var configuration = this.connection.getConfiguration();\n  return PromiseCompat.resolve(configuration);\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getStreamById = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.addStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.removeStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.close = function () {\n  if (!this.connection) {\n    return PromiseCompat.resolve();\n  }\n  this.manageEvents(false);\n  try {\n    this.connection.close();\n    return PromiseCompat.resolve();\n  } catch (e) {\n    return PromiseCompat.reject({\n      errcode: e.name,\n      message: e.message\n    });\n  }\n};\n\nRTCPeerConnectionAdapter.prototype.createDataChannel = function (label, dataChannelDict) {\n  var id = DataChannel.allocate(this.connection.createDataChannel(label, dataChannelDict));\n  return PromiseCompat.resolve(id);\n};\n\nRTCPeerConnectionAdapter.prototype.getStats = function (selector) {\n  return new PromiseCompat(function (resolve, reject) {\n    if (typeof wrtcClass === 'undefined') {\n      // used webrtc-adapter\n      this.connection.getStats(selector, resolve, reject);\n    } else {\n      // node-wrtc has different getStats API\n      this.connection.getStats(function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        var id = 0;  // nodewrtc stats report lacks id field\n        reports.forEach(function (report) {\n          report.id = String(id++);  // string to use as object key\n          standardReport[report.id] = report;\n        });\n        resolve(standardReport);\n      }, reject);\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.ondatachannel = function (event) {\n  var id = DataChannel.allocate(event.channel);\n  this.dispatchEvent('ondatachannel', {channel: id});\n};\n\nRTCPeerConnectionAdapter.prototype.onnegotiationneeded = function (event) {\n  this.dispatchEvent('onnegotiationneeded', event.message);\n};\n\nRTCPeerConnectionAdapter.prototype.onicecandidate = function (event) {\n  var msg;\n  if (event.candidate && event.candidate.candidate) {\n    msg = {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex\n      }\n    };\n  } else {\n    msg = {\n      candidate: null\n    };\n  }\n  this.dispatchEvent('onicecandidate', msg);\n};\n  \nRTCPeerConnectionAdapter.prototype.onsignalingstatechange = function (event) {\n  this.dispatchEvent('onsignalingstatechange', event.message);\n};\n  \nRTCPeerConnectionAdapter.prototype.onaddstream = function (event) {\n  //TODO: provide ID of allocated stream.\n  this.dispatchEvent('onaddstream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.onremovestream = function (event) {\n  //TODO: provide ID of deallocated stream.\n  this.dispatchEvent('onremovestream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.oniceconnectionstatechange = function (event) {\n  this.dispatchEvent('oniceconnectionstatechange', event.message);\n};\n\n\nexports.name = \"core.rtcpeerconnection\";\nexports.provider = RTCPeerConnectionAdapter;\nexports.style = \"providePromises\";\nexports.flags = {provider: true};\nexports.setImpl = function(impl) {\n  \"use strict\";\n  wrtcClass = impl;\n};\n","/*globals localStorage */\n/*jslint indent:2,sloppy:true,node:true */\nvar util = require('../../src/util');\n\n/**\n * A FreeDOM core.storage provider that depends on localStorage\n * Thus, this only works in the context of a webpage and has\n * some size limitations.\n * Note that this can conflict with other scripts using localStorage\n * as keys are raw\n * @Class Storage_unprivileged\n * @constructor\n * @private\n * @param {Object} cap Capabilities for the provider\n */\nvar Storage_unprivileged = function (cap, dispatchEvent) {\n  util.handleEvents(this);\n};\n\n/**\n * Lists keys in the storage repository\n * @method keys\n */\nStorage_unprivileged.prototype.keys = function (continuation) {\n  var result = [],\n    i;\n  for (i = 0; i < localStorage.length; i += 1) {\n    result.push(localStorage.key(i));\n  }\n  continuation(result);\n};\n\n/**\n * Get a key from the storage repository.\n * @param {String} key The item to get from storage.\n * @method get\n */\nStorage_unprivileged.prototype.get = function (key, continuation) {\n  try {\n    var val = localStorage.getItem(key);\n    continuation(val);\n  } catch (e) {\n    continuation(null);\n  }\n};\n\n/**\n * Set a key in the storage repository.\n * @param {String} key The item to save in storage.\n * @param {String} value The value to save in storage.\n * @method set\n */\nStorage_unprivileged.prototype.set = function (key, value, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.setItem(key, value);\n  continuation(ret);\n};\n\n/**\n * Remove a key from the storage repository.\n * @param {String} key The item to remove from storage;\n * @method remove\n */\nStorage_unprivileged.prototype.remove = function (key, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.removeItem(key);\n  continuation(ret);\n};\n\n/**\n * Reset the contents of the storage repository.\n * @method clear\n */\nStorage_unprivileged.prototype.clear = function (continuation) {\n  localStorage.clear();\n  continuation();\n};\n\nexports.provider = Storage_unprivileged;\nexports.name = 'core.storage';\n","/*jslint indent:2,white:true,sloppy:true,node:true */\nvar EventInterface = require('../../src/proxy/eventInterface');\nvar Consumer = require('../../src/consumer');\nvar util = require('../../src/util');\n\n/**\n * Core freedom services available to all modules.\n * Created by the environment helper in response to a 'core' request.\n * @Class Core_unprivileged\n * @constructor\n * @param {Manager} manager The manager this core is connected with.\n * @private\n */\nvar Core_unprivileged = function(manager, postMessage) {\n  this.manager = manager.module;\n  this.debug = this.manager.debug;\n};\n\nCore_unprivileged.unboundChannels = {};\n\nCore_unprivileged.contextId = undefined;\nCore_unprivileged.moduleInternal = undefined;\n\n/**\n * Create a custom channel.\n * Returns the structure {channel: Proxy, identifier: Object},\n * where the identifier can be 'redeemed' by another module or provider using\n * bind channel, at which point the deferred object will resolve with a channel\n * between the two endpoints.\n * @method createChannel\n * @params {Function} continuation Method to call with the cosntructed structure.\n */\nCore_unprivileged.prototype.createChannel = function(continuation) {\n  var proxy = new Consumer(EventInterface, this.manager.debug),\n      id = util.getId(),\n      chan = this.getChannel(proxy);\n  this.manager.setup(proxy);\n\n  if (this.isInModule()) {\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'register',\n        id: id\n      }\n    });\n  }\n  Core_unprivileged.unboundChannels[id] = {\n    local: true,\n    proxy: proxy\n  };\n\n  proxy.once('start', this.getChannel.bind(this, proxy));\n\n  continuation({\n    channel: chan,\n    identifier: id\n  });\n};\n\nCore_unprivileged.prototype.getChannel = function(proxy) {\n  var iface = proxy.getProxyInterface(),\n      chan = iface();\n  chan.close = iface.close;\n  chan.onClose = iface.onClose;\n  iface.onClose(chan, function() {\n    proxy.doClose();\n  });\n  return chan;\n};\n\n/**\n * Receive a message from another core instance.\n * Note: Core_unprivileged is not registered on the hub. it is a provider,\n *     as it's location and name would indicate. This function is called by\n *     port-app to relay messages up to higher levels.  More generally, the\n *     messages emitted by the core to 'this.manager.emit(this.mananage.delegate'\n *     Should be onMessaged to the controlling core.\n * @param {String} source The source of the message.\n * @param {Object} msg The messsage from an isolated core provider.\n */\nCore_unprivileged.prototype.onMessage = function(source, msg) {\n  if (msg.type === 'register') {\n    Core_unprivileged.unboundChannels[msg.id] = {\n      remote: true,\n      resolve: msg.reply,\n      source: source\n    };\n  } else if (msg.type === 'clear') {\n    delete Core_unprivileged.unboundChannels[msg.id];\n  } else if (msg.type === 'bind') {\n    if (Core_unprivileged.unboundChannels[msg.id]) {\n      this.bindChannel(msg.id, function() {}, source);\n    }\n  } else if (msg.type === 'require') {\n    source.require(msg.id, msg.manifest);\n  }\n};\n\n/**\n * Bind a custom channel.\n * Creates a proxy interface to the custom channel, which will be bound to\n * the proxy obtained through an earlier createChannel call.\n * channel to a proxy.\n * @method bindChannel\n * @param {Object} identifier An identifier obtained through createChannel.\n * @param {Function} continuation A function to be called with the proxy.\n */\nCore_unprivileged.prototype.bindChannel = function(identifier, continuation, source) {\n  var toBind = Core_unprivileged.unboundChannels[identifier],\n      newSource = !source;\n\n  // when bindChannel is called directly, source will be undefined.\n  // When it is propogated by onMessage, a source for binding will already exist.\n  if (newSource) {\n    this.debug.debug('making local proxy for core binding');\n    source = new Consumer(EventInterface, this.debug);\n    this.manager.setup(source);\n  }\n\n  // If this is a known identifier and is in the same context, binding is easy.\n  if (toBind && toBind.local) {\n    this.debug.debug('Binding a channel to port on this hub:' + source);\n    this.manager.createLink(source, identifier, toBind.proxy, 'default');\n    delete Core_unprivileged.unboundChannels[identifier];\n    if (this.manager.delegate && this.manager.toDelegate.core) {\n      this.manager.emit(this.manager.delegate, {\n        type: 'Delegation',\n        request: 'handle',\n        flow: 'core',\n        message: {\n          type: 'clear',\n          id: identifier\n        }\n      });\n    }\n  } else if (toBind && toBind.remote) {\n    this.debug.debug('Binding a channel into a module.');\n    this.manager.createLink(\n        source,\n        newSource ? 'default' : identifier,\n        toBind.source,\n        identifier);\n    toBind.resolve({\n      type: 'Bind Channel',\n      request:'core',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    delete Core_unprivileged.unboundChannels[identifier];\n  } else if (this.isInModule()) {\n    this.debug.info('delegating channel bind for an unknown ID:' + identifier);\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    source.once('start', function(p, cb) {\n      cb(this.getChannel(p));\n    }.bind(this, source, continuation));\n    this.manager.createLink(source,\n        'default',\n        this.manager.hub.getDestination(this.manager.delegate),\n        identifier);\n    delete Core_unprivileged.unboundChannels[identifier];\n    return;\n  } else {\n    this.debug.warn('Asked to bind unknown channel: ' + identifier);\n    this.debug.log(Core_unprivileged.unboundChannels);\n    continuation();\n    return;\n  }\n\n  if (source.getInterface) {\n    continuation(this.getChannel(source));\n  } else {\n    continuation();\n  }\n};\n\n/**\n * @method isInModule\n * @private\n * @returns {Boolean} Whether this class is running in a module.\n */\nCore_unprivileged.prototype.isInModule = function () {\n  return (this.manager.delegate && this.manager.toDelegate.core);\n};\n\n/**\n * Require a dynamic dependency for your freedom module.\n * If new permissions are needed beyond what are already available to the\n * freedom context, the user will need to approve of the requested permissions.\n * @method require\n * @param {String} manifest The URL of the manifest to require.\n * @param {String} api The API of the dependency to expose if not default.\n * @param {Function} callback The function to call with the dependency.\n */\nCore_unprivileged.prototype.require = function (manifest, api, callback) {\n  if (this.isInModule() && Core_unprivileged.moduleInternal) {\n    // Register a callback with moduleInternal.\n    // DependencyName is the name of the channel moduelInternal will allocate\n    // callback will be called once a link to that channel is seen.\n    var dependencyName =\n        Core_unprivileged.moduleInternal.registerId(api, callback);\n\n    // Request the dependency be added.\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'require',\n        manifest: manifest,\n        id: dependencyName\n      }\n    });\n  } else {\n    this.debug.error('The require function in external context makes no sense' +\n        ' Instead create a new freedom() context.');\n    callback(undefined, {\n      errcode: 'InvalidContext',\n      message: 'Cannot call require() from this context.'\n    });\n  }\n};\n\n/**\n * Get the ID of the current freedom.js context.  Provides an\n * array of module URLs, the lineage of the current context.\n * When not in an application context, the ID is the lineage\n * of the current View.\n * @method getId\n * @param {Function} callback The function called with ID information.\n */\nCore_unprivileged.prototype.getId = function(callback) {\n  // TODO: make sure contextID is properly frozen.\n  callback(Core_unprivileged.contextId);\n};\n\n/**\n * Get a logger for logging to the freedom.js logger. Provides a\n * log object with an interface similar to the standard javascript console,\n * which logs via debug.\n * @method getLogger\n * @param {String} name The name of the logger, used as its 'source'\n * @param {Function} callback The function to call with the logger.\n */\nCore_unprivileged.prototype.getLogger = function(name, callback) {\n  callback(this.manager.debug.getLogger(name));\n};\n\n/**\n * Set the ID of the current freedom.js context.\n * @method setId\n * @private\n * @param {String[]} id The lineage of the current context.\n * @param {ModuleInternal} moduleInternal The Module environment if one exists.\n */\nCore_unprivileged.prototype.setId = function(id, moduleInternal) {\n  Core_unprivileged.contextId = id;\n  Core_unprivileged.moduleInternal = moduleInternal;\n};\n\nexports.provider = Core_unprivileged;\nexports.name = \"core\";\nexports.flags = {module: true};\n","/*globals document */\r\n/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('../../src/util');\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\n/**\r\n * A freedom.js view is the interface for user interaction.\r\n * A view exists as an iFrame, which is shown to the user in some way.\r\n * communication between the view and the freedom.js module is performed\r\n * through the HTML5 postMessage mechanism, which this provider translates\r\n * to freedom.js message events.\r\n * @Class View_unprivileged\r\n * @constructor\r\n * @private\r\n * @param {View Provider} provider\r\n * @param {provider:Provider,module:Module} cap The instantiator of the view.\r\n * @param {Function} dispatchEvent Function to call to emit events.\r\n */\r\nvar Core_View = function (provider, cap, dispatchEvent) {\r\n  this.provider = provider;\r\n  this.dispatchEvent = dispatchEvent;\r\n  setTimeout(cap.provider.onClose.bind(\r\n    cap.provider,\r\n    this,\r\n    this.close.bind(this, function () {})\r\n  ), 0);\r\n  this.module = cap.module;\r\n  util.handleEvents(this);\r\n};\r\n\r\n/**\r\n * The is the default provider for core.view, unless overridden by context or\r\n * a user supplied provider. The interface is documented at:\r\n * https://github.com/freedomjs/freedom/wiki/freedom.js-Views\r\n *\r\n * Generally, a view provider consists of 3 methods:\r\n * onOpen is called when a view should be shown.\r\n *     id - is a unique identifier for this view, used on subsequent calls\r\n *          for communication and to eventually close the view.\r\n *     name - is the name of the view (as defined in the manifest),\r\n *            in order to place it appropriately.\r\n *     page - is the resolved URL to open.\r\n *     resources - is an array of resolved URLs which are referenced.\r\n *     postMessage - is a function to call when messages are emitted\r\n *                   by the window in which the view is opened.\r\n * onOpen returns a promise that completes when the view is loaded.\r\n * onMessage is called to send a message to an open view.\r\n *     id - is the unique identifier for the open view.\r\n *     message - is the message to postMessage to the view's window.\r\n * onClose is called to close a view.\r\n *     id - is the unique identifier for the view.\r\n */\r\nCore_View.provider = {\r\n  listener: undefined,\r\n  active: {},\r\n  onOpen: function (id, name, page, resources, postMessage) {\r\n    var container = document.body,\r\n      root,\r\n      frame;\r\n    \r\n    if (!this.listener) {\r\n      this.listener = function (msg) {\r\n        var i;\r\n        for (i in this.active) {\r\n          if (this.active.hasOwnProperty(i) &&\r\n              this.active[i].source === msg.source) {\r\n            this.active[i].postMessage(msg.data);\r\n          }\r\n        }\r\n      }.bind(this);\r\n      window.addEventListener('message', this.listener, true);\r\n    }\r\n\r\n    // Views open by default in an element with their ID, or fill the page\r\n    // otherwise.\r\n    if (document.getElementById(name)) {\r\n      container = document.getElementById(name);\r\n    }\r\n\r\n    root = document.createElement(\"div\");\r\n    root.style.width = \"100%\";\r\n    root.style.height = \"100%\";\r\n    root.style.display = \"relative\";\r\n\r\n    container.appendChild(root);\r\n    \r\n    return new PromiseCompat(function (resolve, reject) {\r\n      frame = document.createElement(\"iframe\");\r\n      frame.setAttribute(\"sandbox\", \"allow-scripts allow-forms\");\r\n      frame.style.width = \"100%\";\r\n      frame.style.height = \"100%\";\r\n      frame.style.border = \"0\";\r\n      frame.style.background = \"transparent\";\r\n      frame.src = page;\r\n      frame.addEventListener('load', resolve, true);\r\n      frame.addEventListener('error', reject, true);\r\n\r\n      root.appendChild(frame);\r\n\r\n      this.active[id] = {\r\n        postMessage: postMessage,\r\n        container: container,\r\n        root: root,\r\n        source: frame.contentWindow\r\n      };\r\n    }.bind(this));\r\n  },\r\n  onMessage: function (id, message) {\r\n    this.active[id].source.postMessage(message, '*');\r\n  },\r\n  onClose: function (id) {\r\n    this.active[id].container.removeChild(this.active[id].root);\r\n    delete this.active[id];\r\n    \r\n    if (Object.keys(this.active).length === 0) {\r\n      window.removeEventListener('message', this.listener, true);\r\n      this.listener = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Ask for this view to open a specific location, either a File relative to\r\n * the loader, or an explicit code location.\r\n * @method show\r\n * @param {String} name The identifier of the view.\r\n * @param {Function} continuation Function to call when view is loaded.\r\n */\r\nCore_View.prototype.show = function (name, continuation) {\r\n  if (this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'ALREADY_OPEN',\r\n      message: 'Cannot show multiple views through one instance.'\r\n    });\r\n  }\r\n  this.id = util.getId();\r\n\r\n  var config = this.module.manifest.views,\r\n    toResolve = [];\r\n  if (!config || !config[name]) {\r\n    return continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n\r\n  if (config[name].main && config[name].files) {\r\n    toResolve = config[name].files.concat(config[name].main);\r\n    PromiseCompat.all(toResolve.map(function (fname) {\r\n      return this.module.resource.get(this.module.manifestId, fname);\r\n    }.bind(this))).then(function (files) {\r\n      this.provider.onOpen(this.id,\r\n          name,\r\n          files[files.length - 1],\r\n          files,\r\n          this.dispatchEvent.bind(this, 'message')).then(\r\n        function (c) {\r\n          // Make sure continuation is called without an argument.\r\n          c();\r\n        }.bind({}, continuation),\r\n        continuation.bind({}, undefined)\r\n      );\r\n    }.bind(this), function (err) {\r\n      this.module.debug.error('Unable to open view ' + name + ': ', err);\r\n      continuation(undefined, {\r\n        errcode: 'VIEW_MALFORMED',\r\n        message: 'Malformed View Declaration: ' + err\r\n      });\r\n    });\r\n  } else {\r\n    continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * isSecure determines whether the module can have confidence that its\r\n * communication with its view cannot be intercepted by an untrusted 3rd party.\r\n * In practice, this means that its okay for the runtime to have access to the\r\n * messages, and if the context is a web server or a browser extension then\r\n * that context is trusted. However, if a provider wants to allow their e.g.\r\n * social provider to be used on arbitrary websites, this mechanism means that\r\n * if the website uses a trusted version of the freedom.js library, then the\r\n * module can be used.\r\n * @method isSecure\r\n * @returns {Boolean} if the channel to the view is secure.\r\n */\r\nCore_View.prototype.isSecure = function (continuation) {\r\n  continuation(false);\r\n};\r\n\r\n/**\r\n * Send a message to an open view.\r\n * @method postMessage\r\n */\r\nCore_View.prototype.postMessage = function (msg, continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot post message to uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onMessage(this.id, msg);\r\n  continuation();\r\n};\r\n\r\n/**\r\n * Close an active view.\r\n * @method close\r\n */\r\nCore_View.prototype.close = function (continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot close uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onClose(this.id);\r\n  delete this.id;\r\n\r\n  continuation();\r\n};\r\n\r\n\r\n/**\r\n * Allow a web page to redefine behavior for how views are shown.\r\n * @method register\r\n * @static\r\n * @param {Function} PageProvider The custom view behavior.\r\n */\r\nCore_View.register = function (PageProvider) {\r\n  var provider = PageProvider ? new PageProvider() : Core_View.provider;\r\n  exports.provider = Core_View.bind(this, provider);\r\n};\r\n\r\nexports.provider = Core_View.bind(this, Core_View.provider);\r\nexports.name = 'core.view';\r\nexports.register = Core_View.register;\r\nexports.flags = {provider: true, module: true};\r\n","/*globals WebSocket, ArrayBuffer, Blob, Uint8Array, console */\n/*jslint sloppy:true, node:true */\n\nvar WSHandle = null;\nvar nodeStyle = false;\n\n/**\n * A WebSocket core provider\n *\n * @param {Object} cap Capabilities for the provider\n * @param {Function} dispatchEvent Function to dispatch events.\n * @param {String} url The Remote URL to connect with.\n * @param {String[]} protocols SubProtocols to open.\n * @param {WebSocket?} socket An alternative socket class to use.\n */\nvar WS = function (cap, dispatchEvent, url, protocols, socket) {\n  var WSImplementation = null,\n    error;\n  this.isNode = nodeStyle;\n  if (typeof socket !== 'undefined') {\n    WSImplementation = socket;\n  } else if (WSHandle !== null) {\n    WSImplementation = WSHandle;\n  } else if (typeof WebSocket !== 'undefined') {\n    WSImplementation = WebSocket;\n  } else {\n    console.error('Platform does not support WebSocket');\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    if (protocols) {\n      this.websocket = new WSImplementation(url, protocols);\n    } else {\n      this.websocket = new WSImplementation(url);\n    }\n    this.websocket.binaryType = 'arraybuffer';\n  } catch (e) {\n    error = {};\n    if (e instanceof SyntaxError) {\n      error.errcode = 'SYNTAX';\n    } else {\n      error.errcode = e.name;\n    }\n    error.message = e.message;\n    dispatchEvent('onError', error);\n    return;\n  }\n\n  if (this.isNode) {\n    this.websocket.on('message', this.onMessage.bind(this));\n    this.websocket.on('open', this.onOpen.bind(this));\n    // node.js websocket implementation not compliant\n    this.websocket.on('close', this.onClose.bind(this, {\n      code: 0,\n      reason: 'UNKNOWN',\n      wasClean: true\n    }));\n    this.websocket.on('error', this.onError.bind(this));\n  } else {\n    this.websocket.onopen = this.onOpen.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n};\n\nWS.prototype.send = function (data, continuation) {\n  var toSend = data.text || data.binary || data.buffer,\n    errcode,\n    message;\n\n  if (toSend) {\n    try {\n      // For node.js, we have to do weird buffer stuff\n      if (this.isNode && toSend instanceof ArrayBuffer) {\n        this.websocket.send(\n          new Uint8Array(toSend),\n          { binary: true },\n          this.onError.bind(this)\n        );\n      } else {\n        this.websocket.send(toSend);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        errcode = \"SYNTAX\";\n      } else {\n        errcode = \"INVALID_STATE\";\n      }\n      message = e.message;\n    }\n  } else {\n    errcode = \"BAD_SEND\";\n    message = \"No text, binary, or buffer data found.\";\n  }\n\n  if (errcode) {\n    continuation(undefined, {\n      errcode: errcode,\n      message: message\n    });\n  } else {\n    continuation();\n  }\n};\n\nWS.prototype.getReadyState = function (continuation) {\n  continuation(this.websocket.readyState);\n};\n\nWS.prototype.getBufferedAmount = function (continuation) {\n  continuation(this.websocket.bufferedAmount);\n};\n\nWS.prototype.close = function (code, reason, continuation) {\n  try {\n    if (code && reason) {\n      this.websocket.close(code, reason);\n    } else {\n      this.websocket.close();\n    }\n    continuation();\n  } catch (e) {\n    var errorCode;\n    if (e instanceof SyntaxError) {\n      errorCode = \"SYNTAX\";\n    } else {\n      errorCode = \"INVALID_ACCESS\";\n    }\n    continuation(undefined, {\n      errcode: errorCode,\n      message: e.message\n    });\n  }\n};\n\nWS.prototype.onOpen = function (event) {\n  this.dispatchEvent('onOpen');\n};\n\nWS.prototype.onMessage = function (event, flags) {\n  var data = {};\n  if (this.isNode && flags && flags.binary) {\n    data.buffer = new Uint8Array(event).buffer;\n  } else if (this.isNode) {\n    data.text = event;\n  } else if (typeof ArrayBuffer !== 'undefined' && event.data instanceof ArrayBuffer) {\n    data.buffer = event.data;\n  } else if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n    data.binary = event.data;\n  } else if (typeof event.data === 'string') {\n    data.text = event.data;\n  }\n  this.dispatchEvent('onMessage', data);\n};\n\nWS.prototype.onError = function (event) {\n  // Nothing to pass on\n  // See: http://stackoverflow.com/a/18804298/300539\n  this.dispatchEvent('onError');\n};\n\nWS.prototype.onClose = function (event) {\n  this.dispatchEvent('onClose',\n                     {code: event.code,\n                      reason: event.reason,\n                      wasClean: event.wasClean});\n};\n\nexports.provider = WS;\nexports.name = 'core.websocket';\nexports.setSocket = function (impl, isNode) {\n  WSHandle = impl;\n  nodeStyle = isNode;\n};\n","/*jshint node:true*/\nvar PromiseCompat = require('es6-promise').Promise;\nvar XhrClass = null;\n\nvar XhrProvider = function(cap, dispatchEvent) {\n  \"use strict\";\n  if (typeof window !== \"undefined\" &&\n      typeof window.XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom\n    XhrClass = window.XMLHttpRequest;\n  } else if (typeof XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom-for-firefox\n    XhrClass = XMLHttpRequest;\n  } else if (XhrClass === null) {\n    console.error(\"Platform does not support XMLHttpRequest\");\n  }\n\n  this._dispatchEvent = dispatchEvent;\n  this._xhr = new XhrClass();\n\n  setTimeout(cap.provider.onClose.bind(\n    cap.provider,\n    this,\n    this.abort.bind(this)\n  ), 0);\n\n  this._events = [\n    \"loadstart\",\n    \"progress\",\n    \"abort\",\n    \"error\",\n    \"load\",\n    \"timeout\",\n    \"loadend\",\n    \"readystatechange\"\n  ];\n  this._setupListeners();\n\n};\n\nXhrProvider.prototype.open = function(method, url, async, user, password) {\n  \"use strict\";\n  if (typeof async !== \"undefined\" && async !== true) {\n    return PromiseCompat.reject({\n      errcode: \"InvalidAccessError\",\n      message: \"async should always be set to true\"\n    });\n  }\n\n  // Force async to be true. undefined can lead to async=false in Chrome packaged apps\n  this._xhr.open(method, url, true, user, password);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.send = function(data) {\n  \"use strict\";\n  if (!(data instanceof Object)) {\n    this._xhr.send();\n  } else if (data.hasOwnProperty(\"string\")) {\n    this._xhr.send(data.string);\n  } else if (data.hasOwnProperty(\"buffer\")) {\n    this._xhr.send(data.buffer);\n  } else if (data.hasOwnProperty(\"blob\")) {\n    this._xhr.send(data.blob);\n  } else {\n    this._xhr.send();\n  }\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.abort = function() {\n  \"use strict\";\n  this._xhr.abort();\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getResponseHeader = function(header) {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getResponseHeader(header));\n};\n\nXhrProvider.prototype.getAllResponseHeaders = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getAllResponseHeaders());\n};\n\nXhrProvider.prototype.setRequestHeader = function(header, value) {\n  \"use strict\";\n  this._xhr.setRequestHeader(header, value);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.overrideMimeType = function(mime) {\n  \"use strict\";\n  this._xhr.overrideMimeType(mime);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getReadyState = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.readyState);\n};\n\nXhrProvider.prototype.getResponse = function() {\n  \"use strict\";\n  if (this._xhr.response === null) {\n    return PromiseCompat.resolve(null);\n  } else if (this._xhr.responseType === \"text\" || this._xhr.responseType === \"\") {\n    return PromiseCompat.resolve({ string: this._xhr.response });\n  } else if (this._xhr.responseType === \"arraybuffer\") {\n    return PromiseCompat.resolve({ buffer: this._xhr.response });\n  } else if (this._xhr.responseType === \"json\") {\n    return PromiseCompat.resolve({ object: this._xhr.response });\n  }\n\n  return PromiseCompat.reject(\"core.xhr cannot determine type of response\");\n};\n\nXhrProvider.prototype.getResponseText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseText);\n};\n\nXhrProvider.prototype.getResponseURL = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseURL);\n};\n\nXhrProvider.prototype.getResponseType = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseType);\n};\n\nXhrProvider.prototype.setResponseType = function(type) {\n  \"use strict\";\n  this._xhr.responseType = type;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getStatus = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.status);\n};\n\nXhrProvider.prototype.getStatusText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.statusText);\n};\n\nXhrProvider.prototype.getTimeout = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.timeout);\n};\n\nXhrProvider.prototype.setTimeout = function(timeout) {\n  \"use strict\";\n  this._xhr.timeout = timeout;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getWithCredentials = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.withCredentials);\n};\n\nXhrProvider.prototype.setWithCredentials = function(wc) {\n  \"use strict\";\n  this._xhr.withCredentials = wc;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype._setupListeners = function() {\n  \"use strict\";\n  // Download events\n  this._events.forEach(function (eventName) {\n    this._xhr.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"on\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n\n  // Upload events\n  this._events.forEach(function (eventName) {\n    this._xhr.upload.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"onupload\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n};\n\nexports.name = \"core.xhr\";\nexports.provider = XhrProvider;\nexports.style = \"providePromises\";\nexports.flags = { provider: true };\nexports.setImpl = function(impl) {\n  \"use strict\";\n  XhrClass = impl;\n};\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar loadedOnStartup = false;\n\nvar TIMEOUT = 5000;\n\n/**\n * If there is redirection back to the page, and oAuthRedirectID is set,\n * then report the auth and close the window.\n */\nif (typeof window !== 'undefined' && window && window.location &&\n    window.addEventListener) {\n  window.addEventListener('load', function () {\n    \"use strict\";\n    loadedOnStartup = true;\n  }, true);\n\n  if (window.localStorage &&\n      window.location.href.indexOf(oAuthRedirectId) > 0) {\n    // This will trigger a 'storage' event on the window. See storageListener\n    window.localStorage.setItem(oAuthRedirectId, new Date());\n    window.close();\n  }\n}\n\nvar LocalPageAuth = function() {\n  \"use strict\";\n  this.listeners = {};\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nLocalPageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof window !== 'undefined' && window && loadedOnStartup) {\n    var here = window.location.protocol + \"//\" + window.location.host +\n        window.location.pathname;\n    if (redirectURIs.indexOf(here) > -1) {\n      continuation({\n        redirect: here,\n        state: oAuthRedirectId + Math.random()\n      });\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nLocalPageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var listener = this.storageListener.bind(this, continuation, stateObj);\n  this.listeners[stateObj.state] = listener;\n  window.addEventListener(\"storage\", listener, false);\n  // Start 'er up\n  window.open(authUrl);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (this.listeners[stateObj.state]) {\n        // Listener has not been deleted, indicating oauth has completed.\n        window.removeEventListener(\n            \"storage\", this.listeners[stateObj.state], false);\n        delete this.listeners[stateObj.state];\n        continuation(undefined, 'Error launching auth flow');\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * Handler for storage events, which relays them to waiting clients.\n * For the schema of the storage msg, see:\n * http://tutorials.jenkov.com/html5/local-storage.html#storage-events\n * @param {Function} continuation function to call with result\n * @param {Object.<string, string>} stateObj the return value from initiateOAuth\n\n * @param {Object} msg storage event\n */\nLocalPageAuth.prototype.storageListener = function(continuation, stateObj, msg) {\n  'use strict';\n  if (msg.url.indexOf(stateObj.state) > -1) {\n    window.removeEventListener(\"storage\", this.listeners[stateObj.state], false);\n    delete this.listeners[stateObj.state];\n    continuation(msg.url);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = LocalPageAuth;\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar TIMEOUT = 5000;\n\nfunction RemotePageAuth() {\n  \"use strict\";\n  this.listeners = {};\n}\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nRemotePageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof global !== 'undefined' && global && global.document) {\n    for (var i=0; i<redirectURIs.length; i++) {\n      // TODO: remove restriction on URL pattern match.\n      if ((redirectURIs[i].indexOf('http://') === 0 ||\n          redirectURIs[i].indexOf('https://') === 0) &&\n          redirectURIs[i].indexOf('oauth-relay.html') > 0) {\n        continuation({\n          redirect: redirectURIs[i],\n          state: oAuthRedirectId + Math.random()\n        });\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nRemotePageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var frame = global.document.createElement('iframe');\n  frame.src = stateObj.redirect;\n  frame.style.display = 'none';\n\n  global.document.body.appendChild(frame);\n  frame.addEventListener('load', function () {\n    this.listeners[stateObj.state] = continuation;\n    window.open(authUrl);\n\n    frame.contentWindow.postMessage(stateObj.state, '*');\n  }.bind(this));\n\n  var hasCredentials = false;\n  window.addEventListener('message', function (frame, msg) {\n    if (msg.data && msg.data.key && msg.data.url && this.listeners[msg.data.key]) {\n      hasCredentials = true;\n      this.listeners[msg.data.key](msg.data.url);\n      delete this.listeners[msg.data.key];\n      try {\n        document.body.removeChild(frame);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }.bind(this, frame), false);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (hasCredentials === false) {\n        continuation(undefined, 'Error launching auth flow');\n        delete this.listeners[stateObj.state];\n        try {\n          document.body.removeChild(frame);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = RemotePageAuth;\n","/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\n/**\n * The API registry for freedom.js.  Used to look up requested APIs,\n * and provides a bridge for core APIs to act like normal APIs.\n * @Class API\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Api = function(debug) {\n  this.debug = debug;\n  this.apis = {};\n  this.providers = {};\n  this.waiters = {};\n};\n\n/**\n * Get an API.\n * @method get\n * @param {String} api The API name to get.\n * @returns {{name:String, definition:API}} The API if registered.\n */\nApi.prototype.get = function(api) {\n  if (!this.apis[api]) {\n    return false;\n  }\n  return {\n    name: api,\n    definition: this.apis[api]\n  };\n};\n\n/**\n * Set an API to a definition.\n * @method set\n * @param {String} name The API name.\n * @param {API} definition The JSON object defining the API.\n */\nApi.prototype.set = function(name, definition) {\n  this.apis[name] = definition;\n};\n\n/**\n * Register a core API provider.\n * @method register\n * @param {String} name the API name.\n * @param {Function} constructor the function to create a provider for the API.\n * @param {String?} style The style the provider is written in. Valid styles\n *   are documented in fdom.port.Provider.prototype.getInterface. Defaults to\n *   provideAsynchronous\n * @param {Object?} flags Prefixed arguments needed by the core provider.\n *   valid keys are 'module', 'provider', and 'config'.\n */\nApi.prototype.register = function(name, constructor, style, flags) {\n  var i,\n    args;\n\n  this.providers[name] = {\n    constructor: constructor,\n    style: style || 'provideAsynchronous',\n    flags: flags || {}\n  };\n\n  if (this.waiters[name]) {\n    for (i = 0; i < this.waiters[name].length; i += 1) {\n      args = {};\n      if (flags.module) {\n        args.module = this.waiters[name][i].from;\n      }\n      if (flags.config) {\n        args.config = this.waiters[name][i].from.config;\n      }\n      this.waiters[name][i].resolve({\n        args: args,\n        inst: constructor.bind({}, args)\n      });\n    }\n    delete this.waiters[name];\n  }\n};\n\n/**\n * Get a core API connected to a given FreeDOM module.\n * @method getCore\n * @param {String} name the API to retrieve.\n * @param {Module} from The instantiating App.\n * @returns {Promise} A promise of a fdom.App look-alike (and argument object),\n * matching a local API definition.\n */\nApi.prototype.getCore = function(name, from) {\n  return new PromiseCompat(function(resolve, reject) {\n    if (this.apis[name]) {\n      if (this.providers[name]) {\n        var args = {};\n        if (this.providers[name].flags.module) {\n          args.module = from;\n        }\n        if (this.providers[name].flags.config) {\n          args.config = from.config;\n        }\n        resolve({\n          args: args,\n          inst: this.providers[name].constructor.bind({}, args)\n        });\n      } else {\n        if (!this.waiters[name]) {\n          this.waiters[name] = [];\n        }\n        this.waiters[name].push({\n          resolve: resolve,\n          reject: reject,\n          from: from\n        });\n      }\n    } else {\n      this.debug.warn('Api.getCore asked for unknown core: ' + name);\n      reject(null);\n    }\n  }.bind(this));\n};\n\n/**\n * Configure a {Provider} to provide a named core api on behalf of a\n * given port.\n * @param {String} name The name of the provider\n * @param {Provider} provider The provider that will provide the named api\n * @param {Module} from The module requesting the core provider.\n */\nApi.prototype.provideCore = function (name, provider, from) {\n  return this.getCore(name, from).then(function (core) {\n    var flags = this.providers[name].flags,\n      iface = provider.getProxyInterface();\n    if (flags.provider) {\n      core.args.provider = iface;\n    }\n    iface()[this.providers[name].style](core.inst);\n  }.bind(this), function (err) {\n    this.debug.error('Could not provide core: ', err);\n  }.bind(this));\n};\n\n/**\n * Shutdown the API registry, and reject any pending waiters.\n */\nApi.prototype.cleanup = function () {\n  var prop,\n    doReject = function (waiter) {\n      waiter.reject();\n    };\n  for (prop in this.waiters) {\n    if (this.waiters.hasOwnProperty(prop)) {\n      this.waiters[prop].forEach(doReject);\n    }\n  }\n  delete this.waiters;\n};\n\n/**\n * Defines the apis module and provider registry.\n */\nmodule.exports = Api;\n","/*jslint indent:2,node:true */\n\nvar Bundle = function () {\n  'use strict';\n  this.interfaces = require('../dist/bundle.compiled');\n};\n\n/**\n * Populate an API registry with provided providers, and with known API\n * definitions.\n * @static\n * @method register\n * @param {{name: string, provider: Function, style?: string}[]} providers\n *   The core providers made available to this freedom.js instance.\n * @param {Api} registry The API registry to populate.\n */\nexports.register = function (providers, registry) {\n  'use strict';\n  var bundle = new Bundle();\n  bundle.interfaces.forEach(function (api) {\n    if (api && api.name && api.api) {\n      registry.set(api.name, api.api);\n    }\n  });\n\n  providers.forEach(function (provider) {\n    if (provider.name) {\n      registry.register(provider.name,\n                        provider.provider,\n                        provider.style,\n                        provider.flags);\n    }\n  });\n};\n","/*globals Blob, ArrayBuffer, DataView */\n/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable api.\n * @class Consumer\n * @implements Port\n * @uses handleEvents\n * @param {Object} interfaceCls The api interface exposed by this consumer.\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Consumer = function (interfaceCls, debug) {\n  this.id = Consumer.nextId();\n  this.interfaceCls = interfaceCls;\n  this.debug = debug;\n  util.handleEvents(this);\n\n  this.ifaces = {};\n  this.closeHandlers = {};\n  this.errorHandlers = {};\n  this.emits = {};\n};\n\n/**\n * Receive incoming messages for this consumer.\n * @method onMessage\n * @param {String} source The source of the message.\n * @param {Object} message The received message.\n */\nConsumer.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.emitChannel = message.channel;\n    this.emit(this.emitChannel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    delete this.controlChannel;\n    this.doClose();\n  } else {\n    if (!this.emitChannel && message.channel) {\n      this.emitChannel = message.channel;\n      this.emit('start');\n      return;\n    }\n    if (message.type === 'close' && message.to) {\n      this.teardown(message.to);\n      return;\n    }\n    if (message.type === 'error') {\n      this.error(message.to, message.message);\n      return;\n    }\n    if (message.to) {\n      if (this.emits[message.to]) {\n        this.emits[message.to]('message', message.message);\n      } else {\n        this.debug.warn('Could not deliver message, no such interface: ' + message.to);\n      }\n    } else {\n      var msg = message.message;\n      util.eachProp(this.emits, function (iface) {\n        iface('message', message.message);\n      });\n    }\n  }\n};\n\n/**\n * Create a consumer.Interface associated with this consumer.\n * An interface is returned, which is supplied with important control of the\n * api via constructor arguments: (bound below in getInterfaceConstructor)\n *\n * onMsg: function(binder) sets the function to call when messages for this\n *    interface arrive on the channel,\n * emit: function(msg) allows this interface to emit messages,\n * id: string is the Identifier for this interface.\n * @method getInterface\n */\nConsumer.prototype.getInterface = function () {\n  var Iface = this.getInterfaceConstructor(),\n    args = Array.prototype.slice.call(arguments, 0);\n  if (args.length) {\n    Iface = Iface.bind.apply(Iface, [Iface].concat(args));\n  }\n  return new Iface();\n};\n\n/**\n * Attach an 'onEvent' listener to an interface, allowing external consumers\n * to either listen to channel state, or register callbacks on lifetime events\n * of individual instances of the interface.\n * @method getListener\n * @parma {String} name The event to listen to.\n * @private\n */\nConsumer.prototype.getListener = function (name) {\n  return function (instance, handler) {\n    // Listen to the channel directly.\n    if (typeof instance === 'function' && handler === undefined) {\n      this.once(name, instance);\n      return;\n    }\n\n    // Listen to a specific instance.\n    var handlers = name + 'Handlers';\n    util.eachProp(this.ifaces, function (candidate, id) {\n      if (candidate === instance) {\n        if (this[handlers][id]) {\n          this[handlers][id].push(handler);\n        } else {\n          this[handlers][id] = [handler];\n        }\n        return true;\n      }\n    }.bind(this));\n  }.bind(this);\n};\n\n/**\n * Create a function that can be used to get interfaces from this api consumer\n * from a user-visible point.\n * @method getProxyInterface\n */\nConsumer.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    if (args.length > 0) {\n      return p.getInterface.apply(p, args);\n    } else {\n      return p.getInterface();\n    }\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (candidate, id) {\n        if (candidate === iface) {\n          this.teardown(id);\n          this.emit(this.emitChannel, {\n            type: 'close',\n            to: id\n          });\n          return true;\n        }\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.doClose();\n    }\n  }.bind(this);\n\n  func.onClose = this.getListener('close');\n  func.onError = this.getListener('error');\n\n  return func;\n};\n\n/**\n * Provides a bound class for creating a consumer.Interface associated\n * with this api. This partial level of construction can be used\n * to allow the consumer to be used as a provider for another API.\n * @method getInterfaceConstructor\n * @private\n */\nConsumer.prototype.getInterfaceConstructor = function () {\n  var id = Consumer.nextId();\n  return this.interfaceCls.bind(\n    {},\n    function (id, obj, binder) {\n      this.ifaces[id] = obj;\n      this.emits[id] = binder;\n    }.bind(this, id),\n    this.doEmit.bind(this, id),\n    this.debug\n  );\n};\n\n/**\n * Emit a message on the channel once setup is complete.\n * @method doEmit\n * @private\n * @param {String} to The ID of the flow sending the message.\n * @param {Object} msg The message to emit\n * @param {Boolean} all Send message to all recipients.\n */\nConsumer.prototype.doEmit = function (to, msg, all) {\n  if (all) {\n    to = false;\n  }\n  if (this.emitChannel) {\n    this.emit(this.emitChannel, {to: to, type: 'message', message: msg});\n  } else {\n    this.once('start', this.doEmit.bind(this, to, msg));\n  }\n};\n\n/**\n * Teardown a single interface of this api.\n * @method teardown\n * @param {String} id The id of the interface to tear down.\n */\nConsumer.prototype.teardown = function (id) {\n  if (this.emits[id]) {\n    this.emits[id]('close');\n  }\n  delete this.emits[id];\n  if (this.closeHandlers[id]) {\n    util.eachProp(this.closeHandlers[id], function (prop) {\n      prop();\n    });\n  }\n  delete this.ifaces[id];\n  delete this.closeHandlers[id];\n  delete this.errorHandlers[id];\n};\n\n/**\n * Handle a message error reported to this api.\n * @method error\n * @param {String?} id The id of the interface where the error occured.\n * @param {Object} message The message which failed, if relevant.\n */\nConsumer.prototype.error = function (id, message) {\n  if (id && this.errorHandlers[id]) {\n    util.eachProp(this.errorHandlers[id], function (prop) {\n      prop(message);\n    });\n  } else if (!id) {\n    this.emit('error', message);\n  }\n};\n\n\n/**\n * Close / teardown the flow this api terminates.\n * @method doClose\n */\nConsumer.prototype.doClose = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Channel Closing',\n      request: 'close'\n    });\n  }\n\n  util.eachProp(this.emits, function (emit, id) {\n    this.teardown(id);\n  }.bind(this));\n\n  this.emit('close');\n  this.off();\n\n  this.emitChannel = null;\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return The description of this port.\n */\nConsumer.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Consumer \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Consumer]\";\n  }\n};\n\n/**\n * Get the next ID for an api channel.\n * @method nextId\n * @static\n * @private\n */\nConsumer.nextId = function () {\n  if (!Consumer.id) {\n    Consumer.id = 1;\n  }\n  return (Consumer.id += 1);\n};\n\n/**\n * Convert a structured data structure into a message stream conforming to\n * a template and an array of binary data elements.\n * @static\n * @method messageToPortable\n * @param {Object} template The template to conform to\n * @param {Object} value The instance of the data structure to confrom\n * @param {Debug} debug A debugger for errors.\n * @return {{text: Object, binary: Array}} Separated data streams.\n */\nConsumer.messageToPortable = function (template, value, debug) {\n  var externals = [],\n    message = Consumer.conform(template, value, externals, true, debug);\n  return {\n    text: message,\n    binary: externals\n  };\n};\n\n/**\n * Convert Structured Data streams into a data structure conforming to a\n * template.\n * @static\n * @method portableToMessage\n * @param {Object} template The template to conform to\n * @param {{text: Object, binary: Array}} streams The streams to conform\n * @param {Debug} debug A debugger for errors.\n * @return {Object} The data structure matching the template.\n */\nConsumer.portableToMessage = function (template, streams, debug) {\n  return Consumer.conform(template, streams.text, streams.binary, false, debug);\n};\n\n/**\n * Force a collection of values to look like the types and length of an API\n * template.\n * @static\n * @method conform\n * @param {Object} template The template to conform to\n * @param {Object} from The value to conform\n * @param {Array} externals Listing of binary elements in the template\n * @param {Boolean} Whether to to separate or combine streams.\n * @aparam {Debug} debug A debugger for errors.\n */\nConsumer.conform = function (template, from, externals, separate, debug) {\n  /* jshint -W086 */\n  if (typeof (from) === 'function' && template !== 'proxy') {\n    //from = undefined;\n    //throw \"Trying to conform a function\";\n    debug.error(\"Message discarded as functions can't cross modules!\");\n    return undefined;\n  } else if (typeof (from) === 'undefined') {\n    return undefined;\n  } else if (from === null) {\n    return null;\n  } else if (template === undefined) {\n    debug.error(\"Message discarded for not matching declared type!\", from);\n    return undefined;\n  }\n\n  switch (template) {\n  case 'string':\n    return String('') + from;\n  case 'number':\n    return Number(1) * from;\n  case 'boolean':\n    return Boolean(from === true);\n  case 'object':\n    // TODO(willscott): Allow removal if sandboxing enforces this.\n    if (typeof from === 'undefined') {\n      return undefined;\n    } else {\n      return JSON.parse(JSON.stringify(from));\n    }\n  case 'blob':\n    if (separate) {\n      if (from instanceof Blob) {\n        externals.push(from);\n        return externals.length - 1;\n      } else {\n        debug.error('conform expecting Blob, but saw ' + (typeof from));\n        externals.push(new Blob([]));\n        return externals.length - 1;\n      }\n    } else {\n      return externals[from];\n    }\n  case 'buffer':\n    if (separate) {\n      externals.push(Consumer.makeArrayBuffer(from, debug));\n      return externals.length - 1;\n    } else {\n      return Consumer.makeArrayBuffer(externals[from], debug);\n    }\n  case 'proxy':\n    return from;\n  }\n  var val, i;\n  if (Array.isArray(template) && from !== undefined) {\n    val = [];\n    i = 0;\n    if (template.length === 2 && template[0] === 'array') {\n      //console.log(\"template is array, value is \" + JSON.stringify(value));\n      for (i = 0; i < from.length; i += 1) {\n        val.push(Consumer.conform(template[1], from[i], externals,\n                                  separate, debug));\n      }\n    } else {\n      for (i = 0; i < template.length; i += 1) {\n        if (from[i] !== undefined) {\n          val.push(Consumer.conform(template[i], from[i], externals,\n                                    separate, debug));\n        } else {\n          val.push(undefined);\n        }\n      }\n    }\n    return val;\n  } else if (typeof template === 'object' && from !== undefined) {\n    val = {};\n    util.eachProp(template, function (prop, name) {\n      if (from[name] !== undefined) {\n        val[name] = Consumer.conform(prop, from[name], externals, separate,\n                                     debug);\n      }\n    });\n    return val;\n  }\n  debug.error('Unknown template provided: ' + template);\n};\n\n/**\n * Make a thing into an Array Buffer\n * @static\n * @method makeArrayBuffer\n * @param {Object} thing\n * @param {Debug} debug A debugger in case of errors.\n * @return {ArrayBuffer} An Array Buffer\n */\nConsumer.makeArrayBuffer = function (thing, debug) {\n  if (!thing) {\n    return new ArrayBuffer(0);\n  }\n\n  if (thing instanceof ArrayBuffer) {\n    return thing;\n  } else if (thing.constructor.name === \"ArrayBuffer\" &&\n      typeof thing.prototype === \"undefined\") {\n    // Workaround for webkit origin ownership issue.\n    // https://github.com/UWNetworksLab/freedom/issues/28\n    return new DataView(thing).buffer;\n  } else {\n    debug.error('expecting ArrayBuffer, but saw ' +\n        (typeof thing) + ': ' + JSON.stringify(thing));\n    return new ArrayBuffer(0);\n  }\n};\n\n/**\n * Recursively traverse a [nested] object and freeze its keys from being\n * writable. Note, the result can have new keys added to it, but existing ones\n * cannot be  overwritten. Doesn't do anything for arrays or other collections.\n *\n * @method recursiveFreezeObject\n * @static\n * @param {Object} obj - object to be frozen\n * @return {Object} obj\n **/\nConsumer.recursiveFreezeObject = function (obj) {\n  var k, ret = {};\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      Object.defineProperty(ret, k, {\n        value: Consumer.recursiveFreezeObject(obj[k]),\n        writable: false,\n        enumerable: true\n      });\n    }\n  }\n  return ret;\n};\n\nmodule.exports = Consumer;\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom entry point for debugging.\n * @uses handleEvents\n * @implements Port\n * @constructor\n */\nvar Debug = function (logger) {\n  this.id = 'debug';\n  this.emitChannel = false;\n  this.config = false;\n  util.handleEvents(this);\n};\n\n/**\n * The supported log levels for debugging.\n * @static\n */\nDebug.LEVELS = ['debug', 'info', 'log', 'warn', 'error'];\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the textual description.\n */\nDebug.prototype.toString = function () {\n  return '[Console]';\n};\n\n/**\n * Register a logger for outputting debugging messages.\n * @method setLogger\n * @param {Console} logger The logger to register\n */\nDebug.prototype.setLogger = function (logger) {\n  if (this.logger) {\n    this.info('Replacing Logger.');\n  }\n  this.logger = logger;\n  this.emit('logger');\n};\n\n/**\n * Handler for receiving messages sent to the debug port.\n * These messages are used to retreive config for exposing console.\n * @method onMessage\n * @param {String} source the source identifier for the message.\n * @param {Object} message the received message.\n */\nDebug.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.channel && !this.emitChannel) {\n    this.emitChannel = message.channel;\n    this.config = message.config;\n    if (!this.config.global.console) {\n      if (typeof console !== 'undefined') {\n        this.config.global.console = console;\n      } else {\n        this.config.global.console = this.getLogger('Console');\n      }\n    }\n    this.emit('ready');\n  }\n};\n\n/**\n * Dispatch a debug message with arbitrary severity.\n * All debug messages are routed through the manager, to allow for delegation.\n * @method format\n * @param {String} severity the severity of the message.\n * @param {String} source The location of message.\n * @param {String[]} args The contents of the message.\n * @private\n */\nDebug.prototype.format = function (severity, source, args) {\n  var i, alist = [], argarr;\n  if (typeof args === \"string\" && source) {\n    try {\n      argarr = JSON.parse(args);\n      if (argarr instanceof Array) {\n        args = argarr;\n      }\n    } catch (e) {\n      // pass.\n    }\n  }\n\n  if (typeof args === \"string\") {\n    alist.push(args);\n  } else {\n    for (i = 0; i < args.length; i += 1) {\n      alist.push(args[i]);\n    }\n  }\n  if (!this.emitChannel) {\n    this.on('ready', this.format.bind(this, severity, source, alist));\n    return;\n  }\n  this.emit(this.emitChannel, {\n    severity: severity,\n    source: source,\n    quiet: true,\n    request: 'debug',\n    msg: JSON.stringify(alist)\n  });\n};\n\n/**\n * Print received messages on the console.\n * This is called by the manager in response to an emission from format.\n * @method print\n * @param {Object} message The message emitted by {@see format} to print.\n */\nDebug.prototype.print = function (message) {\n  if (!this.logger) {\n    this.once('logger', this.print.bind(this, message));\n    return;\n  }\n\n  var args, arr = [], i = 0;\n  args = JSON.parse(message.msg);\n  if (typeof args === \"string\") {\n    arr.push(args);\n  } else {\n    while (args[i] !== undefined) {\n      arr.push(args[i]);\n      i += 1;\n    }\n  }\n  this.logger[message.severity].call(this.logger, message.source, arr, function () {});\n};\n\n/**\n * Print a log message to the console.\n * @method log\n */\nDebug.prototype.log = function () {\n  this.format('log', undefined, arguments);\n};\n\n/**\n * Print an info message to the console.\n * @method log\n */\nDebug.prototype.info = function () {\n  this.format('info', undefined, arguments);\n};\n\n/**\n * Print a debug message to the console.\n * @method log\n */\nDebug.prototype.debug = function () {\n  this.format('debug', undefined, arguments);\n};\n\n/**\n * Print a warning message to the console.\n * @method warn\n */\nDebug.prototype.warn = function () {\n  this.format('warn', undefined, arguments);\n};\n\n/**\n * Print an error message to the console.\n * @method error\n */\nDebug.prototype.error = function () {\n  this.format('error', undefined, arguments);\n};\n\n/**\n * Get a logger that logs messages prefixed by a given name.\n * @method getLogger\n * @param {String} name The prefix for logged messages.\n * @returns {Console} A console-like object.\n */\nDebug.prototype.getLogger = function (name) {\n  var log = function (severity, source) {\n    var args = Array.prototype.splice.call(arguments, 2);\n    this.format(severity, source, args);\n  },\n    logger = {\n      freedom: true\n    };\n  Debug.LEVELS.forEach(function (level) {\n    logger[level] = log.bind(this, level, name);\n  }.bind(this));\n  return logger;\n};\n\n/**\n * Create a synchronous 'getLogger' method that binds around an asynchronous\n * logger by creating a buffer until the asynchronous logger is resolved.\n * @see {ModuleInternal.loadLinks} for where this method is bound to the created\n *     external interface.\n * @method getLoggingShim\n * @param {Function} asyncMethod The wrapper to 'getLogger'\n */\nDebug.prototype.getLoggingShim = function (asyncMethod) {\n  return function getLogggerSync(name) {\n    var toResolve = asyncMethod(name),\n      buffer = [],\n      methods = Debug.LEVELS,\n      backing = null,\n      ret = {};\n    toResolve.then(function (logger) {\n      backing = logger;\n      buffer.forEach(function (item) {\n        backing[item[0]].apply(backing, item[1]);\n      });\n    });\n    methods.forEach(function (mthd) {\n      ret[mthd] = function() {\n        var args = Array.prototype.splice.call(arguments, 0);\n        if (backing) {\n          backing[this].apply(backing, args);\n        } else {\n          buffer.push([this, args]);\n        }\n      }.bind(mthd);\n    });\n    return ret;\n  };\n};\n\nmodule.exports = Debug;\n","/*jslint indent:2,node:true */\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\nvar Api = require('./api');\r\nvar Debug = require('./debug');\r\nvar Hub = require('./hub');\r\nvar Manager = require('./manager');\r\nvar Policy = require('./policy');\r\nvar ProxyBinder = require('./proxybinder');\r\nvar Resource = require('./resource');\r\nvar util = require('./util');\r\nvar Bundle = require('./bundle');\r\n\r\nvar freedomGlobal;\r\nvar getGlobal = function () {\r\n  'use strict';\r\n  \r\n  // Node.js\r\n  if (typeof global !== 'undefined' && global.prototype === undefined) {\r\n    freedomGlobal = global;\r\n  // Browsers\r\n  } else {\r\n    setTimeout(function () {\r\n      freedomGlobal = this;\r\n    }, 0);\r\n  }\r\n};\r\ngetGlobal();\r\n\r\n/**\r\n * Create a new freedom context.\r\n * @param {Object} context Information about the local context.\r\n * @see {util/workerEntry.js}\r\n * @param {String} manifest The manifest to load.\r\n * @param {Object} config Configuration keys set by the user.\r\n * @returns {Promise} A promise for the module defined in the manifest.\r\n */\r\nvar setup = function (context, manifest, config) {\r\n  'use strict';\r\n  var debug = new Debug(),\r\n    hub = new Hub(debug),\r\n    resource = new Resource(debug),\r\n    api = new Api(debug),\r\n    manager = new Manager(hub, resource, api),\r\n    binder = new ProxyBinder(manager),\r\n    policy,\r\n    site_cfg = {\r\n      'debug': 'log',\r\n      'manifest': manifest,\r\n      'moduleContext': (!context || typeof (context.isModule) === \"undefined\") ?\r\n          util.isModuleContext() :\r\n          context.isModule\r\n    },\r\n    link,\r\n    Port,\r\n    cleanup = function () {\r\n      api.cleanup();\r\n      manager.destroy();\r\n    };\r\n\r\n  if (config) {\r\n    util.mixin(site_cfg, config, true);\r\n  }\r\n  site_cfg.global = freedomGlobal;\r\n  if (context) {\r\n    util.mixin(site_cfg, context, true);\r\n  }\r\n\r\n  // Register user-supplied extensions.\r\n  // For example the 'core.oauth' provider defines a register function,\r\n  // which enables site_cfg.oauth to be registered with it.\r\n  context.providers.forEach(function (provider) {\r\n    var name;\r\n    if (provider.name.indexOf('core.') === 0 &&\r\n        typeof provider.register === 'function') {\r\n      name = provider.name.substr(5);\r\n      // Invert priority and prefer user config over local context for these.\r\n      if (config && config[name]) {\r\n        provider.register(config[name]);\r\n      } else if (site_cfg[name]) {\r\n        provider.register(site_cfg[name]);\r\n      } else {\r\n        provider.register(undefined);\r\n      }\r\n    }\r\n  });\r\n  \r\n  Bundle.register(context.providers, api);\r\n  resource.register(context.resolvers || []);\r\n\r\n  return new PromiseCompat(function (resolve, reject) {\r\n    if (site_cfg.moduleContext) {\r\n      Port = site_cfg.portType;\r\n      link = new Port('Outbound', resource);\r\n      manager.setup(link);\r\n\r\n      // Delay debug messages until delegation to the parent context is setup.\r\n      manager.once('delegate', manager.setup.bind(manager, debug));\r\n    } else {\r\n      manager.setup(debug);\r\n      policy = new Policy(manager, resource, site_cfg);\r\n\r\n      // Define how to load a root module.\r\n      var fallbackLogger, getIface;\r\n      fallbackLogger = function (message) {\r\n        api.getCore('core.console', {\r\n          config: site_cfg\r\n        }).then(function (provider) {\r\n          var logger = new provider.inst();\r\n          debug.setLogger(logger);\r\n          if (message) {\r\n            debug.error(message);\r\n          }\r\n        });\r\n      };\r\n      getIface = function (manifest) {\r\n        return resource.get(site_cfg.location, manifest).then(\r\n          function (canonical_manifest) {\r\n            return policy.get([], canonical_manifest);\r\n          }\r\n        ).then(function (instance) {\r\n          manager.setup(instance);\r\n          return binder.bindDefault(instance, api, instance.manifest);\r\n        });\r\n      };\r\n\r\n      // Load appropriate Logger.\r\n      if (site_cfg.logger) {\r\n        getIface(site_cfg.logger).then(function (iface) {\r\n          if (iface.external.api !== 'console') {\r\n            fallbackLogger(\"Unwilling to use logger with unknown API:\",\r\n              iface.external.api);\r\n          } else {\r\n            debug.setLogger(iface.external());\r\n          }\r\n        }, fallbackLogger);\r\n      } else {\r\n        fallbackLogger();\r\n      }\r\n\r\n      // Load root module.\r\n      getIface(site_cfg.manifest).then(function (iface) {\r\n        iface.port.once('close', cleanup);\r\n        return iface.external;\r\n      }, function (err) {\r\n        debug.error('Failed to retrieve manifest: ' + err);\r\n        throw err;\r\n      }).then(resolve, reject);\r\n    }\r\n\r\n    hub.emit('config', site_cfg);\r\n  });\r\n};\r\n\r\nmodule.exports = setup;\r\n","/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('./util');\r\n\r\n/**\r\n * Defines fdom.Hub, the core message hub between freedom modules.\r\n * Incomming messages from apps are sent to hub.onMessage()\r\n * @class Hub\r\n * @param {Debug} debug Logger for debugging.\r\n * @constructor\r\n */\r\nvar Hub = function (debug) {\r\n  this.debug = debug;\r\n  this.config = {};\r\n  this.apps = {};\r\n  this.routes = {};\r\n\r\n  util.handleEvents(this);\r\n  this.on('config', function (config) {\r\n    util.mixin(this.config, config);\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * Handle an incoming message from a freedom app.\r\n * @method onMessage\r\n * @param {String} source The identifiying source of the message.\r\n * @param {Object} message The sent message.\r\n */\r\nHub.prototype.onMessage = function (source, message) {\r\n  var destination = this.routes[source], type;\r\n  if (!destination || !destination.app) {\r\n    this.debug.warn(\"Message dropped from unregistered source \" + source);\r\n    return;\r\n  }\r\n\r\n  if (!this.apps[destination.app]) {\r\n    this.debug.warn(\"Message dropped to destination \" + destination.app);\r\n    return;\r\n  }\r\n\r\n  // The firehose tracing all internal freedom.js messages.\r\n  if (!message.quiet && !destination.quiet && this.config && this.config.trace) {\r\n    type = message.type;\r\n    if (message.type === 'message' && message.message &&\r\n        message.message.action === 'method') {\r\n      type = 'method.' + message.message.type;\r\n    } else if (message.type === 'method' && message.message &&\r\n        message.message.type === 'method') {\r\n      type = 'return.' + message.message.name;\r\n    } else if (message.type === 'message' && message.message &&\r\n        message.message.type === 'event') {\r\n      type = 'event.' + message.message.name;\r\n    }\r\n    this.debug.debug(this.apps[destination.source].toString() +\r\n        \" -\" + type + \"-> \" +\r\n        this.apps[destination.app].toString() + \".\" + destination.flow);\r\n  }\r\n\r\n  this.apps[destination.app].onMessage(destination.flow, message);\r\n};\r\n\r\n/**\r\n * Get the local destination port of a flow.\r\n * @method getDestination\r\n * @param {String} source The flow to retrieve.\r\n * @return {Port} The destination port.\r\n */\r\nHub.prototype.getDestination = function (source) {\r\n  var destination = this.routes[source];\r\n  if (!destination) {\r\n    return null;\r\n  }\r\n  return this.apps[destination.app];\r\n};\r\n\r\n/**\r\n * Get the local source port of a flow.\r\n * @method getSource\r\n * @param {Port} source The flow identifier to retrieve.\r\n * @return {Port} The source port.\r\n */\r\nHub.prototype.getSource = function (source) {\r\n  if (!source) {\r\n    return false;\r\n  }\r\n  if (!this.apps[source.id]) {\r\n    this.debug.warn(\"No registered source '\" + source.id + \"'\");\r\n    return false;\r\n  }\r\n  return this.apps[source.id];\r\n};\r\n\r\n/**\r\n * Register a destination for messages with this hub.\r\n * @method register\r\n * @param {Port} app The Port to register.\r\n * @param {Boolean} [force] Whether to override an existing port.\r\n * @return {Boolean} Whether the app was registered.\r\n */\r\nHub.prototype.register = function (app, force) {\r\n  if (!this.apps[app.id] || force) {\r\n    this.apps[app.id] = app;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Deregister a destination for messages with the hub.\r\n * Note: does not remove associated routes. As such, deregistering will\r\n * prevent the installation of new routes, but will not distrupt existing\r\n * hub routes.\r\n * @method deregister\r\n * @param {Port} app The Port to deregister\r\n * @return {Boolean} Whether the app was deregistered.\r\n */\r\nHub.prototype.deregister = function (app) {\r\n  if (!this.apps[app.id]) {\r\n    return false;\r\n  }\r\n  delete this.apps[app.id];\r\n  return true;\r\n};\r\n\r\n/**\r\n * Install a new route in the hub.\r\n * @method install\r\n * @param {Port} source The source of the route.\r\n * @param {Port} destination The destination of the route.\r\n * @param {String} flow The flow where the destination will receive messages.\r\n * @param {Boolean} quiet Whether messages on this route should be suppressed.\r\n * @return {String} A routing source identifier for sending messages.\r\n */\r\nHub.prototype.install = function (source, destination, flow, quiet) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n  if (!destination) {\r\n    this.debug.warn(\"Unwilling to generate blackhole flow from \" + source.id);\r\n    return;\r\n  }\r\n\r\n  var route = this.generateRoute();\r\n  this.routes[route] = {\r\n    app: destination,\r\n    flow: flow,\r\n    source: source.id,\r\n    quiet: quiet\r\n  };\r\n  if (typeof source.on === 'function') {\r\n    source.on(route, this.onMessage.bind(this, route));\r\n  }\r\n\r\n  return route;\r\n};\r\n\r\n/**\r\n * Uninstall a hub route.\r\n * @method uninstall\r\n * @param {Port} source The source of the route.\r\n * @param {String} flow The route to uninstall.\r\n * @return {Boolean} Whether the route was able to be uninstalled.\r\n */\r\nHub.prototype.uninstall = function (source, flow) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n\r\n  var route = this.routes[flow];\r\n  if (!route) {\r\n    return false;\r\n  } else if (route.source !== source.id) {\r\n    this.debug.warn(\"Flow \" + flow + \" does not belong to port \" + source.id);\r\n    return false;\r\n  }\r\n\r\n  delete this.routes[flow];\r\n  if (typeof source.off === 'function') {\r\n    source.off(route);\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Remove all listeners and notify all connected destinations of their removal.\r\n * @method teardown\r\n */\r\nHub.prototype.teardown = function () {\r\n  util.eachProp(this.apps, function (source) {\r\n    if (typeof source.off === 'function') {\r\n      source.off();\r\n    }\r\n  });\r\n  this.apps = {};\r\n  this.routes = {};\r\n};\r\n\r\n/**\r\n * Generate a unique routing identifier.\r\n * @method generateRoute\r\n * @return {String} a routing source identifier.\r\n * @private\r\n */\r\nHub.prototype.generateRoute = function () {\r\n  return util.getId();\r\n};\r\n\r\nmodule.exports = Hub;\r\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A link connects two freedom hubs. This is an abstract class\n * providing common functionality of translating control channels,\n * and integrating config information.\n * @class Link\n * @implements Port\n * @constructor\n */\nvar Link = function (name, resource) {\n  this.id = 'Link' + Math.random();\n  this.name = name;\n  this.resource = resource;\n  this.config = {};\n  this.src = null;\n\n  util.handleEvents(this);\n  util.mixin(this, Link.prototype);\n};\n\n/**\n * Receive messages from the hub to this port.\n * Manages startup, and passes others to 'deliverMessage' implemented\n * in derived classes.\n * @method onMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nLink.prototype.onMessage = function (flow, message) {\n  if (flow === 'control' && !this.controlChannel) {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.start();\n    }\n  } else {\n    this.deliverMessage(flow, message);\n  }\n};\n\n/**\n * Register a handler to alert of errors on this port.\n * @method addErrorHandler\n * @param {Function} handler Method to call with errors.\n */\nLink.prototype.addErrorHandler = function (handler) {\n  this.onError = handler;\n};\n\n/**\n * Report an error on this link.\n * @method onerror\n * @param {Error} err The error that occurred.\n */\nLink.prototype.onError = function (err) {\n  //Filled in by addErrorHandler\n};\n\n/**\n * Emit messages to the the hub, mapping control channels.\n * @method emitMessage\n * @param {String} flow the flow to emit the message on.\n * @param {Object} messgae The message to emit.\n */\nLink.prototype.emitMessage = function (flow, message) {\n  if (flow === 'control' && this.controlChannel) {\n    flow = this.controlChannel;\n  }\n  this.emit(flow, message);\n};\n\nmodule.exports = Link;\n","/*globals Worker */\n/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar Link = require('../link');\n\n/**\n * A port providing message transport between two freedom contexts via Worker.\n * @class Worker\n * @extends Link\n * @uses handleEvents\n * @constructor\n */\nvar WorkerLink = function(id, resource) {\n  Link.call(this, id, resource);\n  if (id) {\n    this.id = id;\n  }\n};\n\n/**\n * Start this port by listening or creating a worker.\n * @method start\n * @private\n */\nWorkerLink.prototype.start = function() {\n  if (this.config.moduleContext) {\n    this.setupListener();\n  } else {\n    this.setupWorker();\n  }\n};\n\n/**\n * Stop this port by destroying the worker.\n * @method stop\n * @private\n */\nWorkerLink.prototype.stop = function() {\n  // Function is determined by setupListener or setupFrame as appropriate.\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nWorkerLink.prototype.toString = function() {\n  return \"[Worker \" + this.id + \"]\";\n};\n\n/**\n * Set up a global listener to handle incoming messages to this\n * freedom.js context.\n * @method setupListener\n */\nWorkerLink.prototype.setupListener = function() {\n  var onMsg = function(msg) {\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this);\n  this.obj = this.config.global;\n  this.obj.addEventListener('message', onMsg, true);\n  this.stop = function() {\n    this.obj.removeEventListener('message', onMsg, true);\n    delete this.obj;\n  };\n  this.emit('started');\n  this.obj.postMessage(\"Ready For Messages\");\n};\n\n/**\n * Set up a worker with an isolated freedom.js context inside.\n * @method setupWorker\n */\nWorkerLink.prototype.setupWorker = function() {\n  var worker,\n    blob,\n    self = this;\n  worker = new Worker(this.config.source + '#' + this.id);\n\n  worker.addEventListener('error', function(err) {\n    this.onError(err);\n  }.bind(this), true);\n  worker.addEventListener('message', function(worker, msg) {\n    if (!this.obj) {\n      this.obj = worker;\n      this.emit('started');\n      return;\n    }\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this, worker), true);\n  this.stop = function() {\n    worker.terminate();\n    if (this.obj) {\n      delete this.obj;\n    }\n  };\n};\n\n/**\n * Receive messages from the hub to this port.\n * Received messages will be emitted from the other side of the port.\n * @method deliverMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nWorkerLink.prototype.deliverMessage = function(flow, message) {\n  if (flow === 'control' && message.type === 'close' &&\n      message.channel === 'control') {\n    this.stop();\n  } else {\n    if (this.obj) {\n      this.obj.postMessage({\n        flow: flow,\n        message: message\n      });\n    } else {\n      this.once('started', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\nmodule.exports = WorkerLink;\n\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar ModuleInternal = require('./moduleinternal');\n\n/**\n * A freedom port which manages the control plane of of changing hub routes.\n * @class Manager\n * @implements Port\n * @param {Hub} hub The routing hub to control.\n * @param {Resource} resource The resource manager for the runtime.\n * @param {Api} api The API manager for the runtime.\n * @constructor\n */\nvar Manager = function (hub, resource, api) {\n  this.id = 'control';\n  this.config = {};\n  this.controlFlows = {};\n  this.dataFlows = {};\n  this.dataFlows[this.id] = [];\n  this.reverseFlowMap = {};\n\n  this.debug = hub.debug;\n  this.hub = hub;\n  this.resource = resource;\n  this.api = api;\n\n  this.delegate = null;\n  this.toDelegate = {};\n\n  this.hub.on('config', function (config) {\n    util.mixin(this.config, config);\n    this.emit('config');\n  }.bind(this));\n\n  util.handleEvents(this);\n  this.hub.register(this);\n};\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nManager.prototype.toString = function () {\n  return \"[Local Controller]\";\n};\n\n/**\n * Process messages sent to this port.\n * The manager, or 'control' destination handles several types of messages,\n * identified by the request property.  The actions are:\n * 1. debug. Prints the message to the console.\n * 2. link. Creates a link between the source and a provided destination port.\n * 3. environment. Instantiate a module environment defined in ModuleInternal.\n * 4. delegate. Routes a defined set of control messages to another location.\n * 5. resource. Registers the source as a resource resolver.\n * 6. core. Generates a core provider for the requester.\n * 7. close. Tears down routes involing the requesting port.\n * 8. unlink. Tears down a route from the requesting port.\n * @method onMessage\n * @param {String} flow The source identifier of the message.\n * @param {Object} message The received message.\n */\nManager.prototype.onMessage = function (flow, message) {\n  var reverseFlow = this.controlFlows[flow], origin;\n  if (!reverseFlow) {\n    this.debug.warn(\"Unknown message source: \" + flow);\n    return;\n  }\n  origin = this.hub.getDestination(reverseFlow);\n\n  if (this.delegate && reverseFlow !== this.delegate &&\n      this.toDelegate[flow]) {\n    // Ship off to the delegee\n    this.emit(this.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      quiet: true,\n      flow: flow,\n      message: message\n    });\n    return;\n  }\n\n  if (message.request === 'debug') {\n    this.debug.print(message);\n    return;\n  }\n\n  if (message.request === 'link') {\n    this.createLink(origin, message.name, message.to, message.overrideDest);\n  } else if (message.request === 'environment') {\n    this.createLink(origin, message.name, new ModuleInternal(this));\n  } else if (message.request === 'delegate') {\n    // Initate Delegation.\n    if (this.delegate === null) {\n      this.delegate = reverseFlow;\n    }\n    this.toDelegate[message.flow] = true;\n    this.emit('delegate');\n  } else if (message.request === 'resource') {\n    this.resource.addResolver(message.args[0]);\n    this.resource.addRetriever(message.service, message.args[1]);\n  } else if (message.request === 'core') {\n    if (this.core && reverseFlow === this.delegate) {\n      (new this.core()).onMessage(origin, message.message);\n      return;\n    }\n    this.getCore(function (to, core) {\n      this.hub.onMessage(to, {\n        type: 'core',\n        core: core\n      });\n    }.bind(this, reverseFlow));\n  } else if (message.request === 'close') {\n    this.destroy(origin);\n  } else if (message.request === 'unlink') {\n    this.removeLink(origin, message.to);\n  } else {\n    this.debug.warn(\"Unknown control request: \" + message.request);\n    this.debug.log(JSON.stringify(message));\n    return;\n  }\n};\n\n/**\n * Get the port messages will be routed to given its id.\n * @method getPort\n * @param {String} portId The ID of the port.\n * @returns {fdom.Port} The port with that ID.\n */\nManager.prototype.getPort = function (portId) {\n  return this.hub.getDestination(this.controlFlows[portId]);\n};\n\n/**\n * Set up a port with the hub.\n * @method setup\n * @param {Port} port The port to register.\n */\nManager.prototype.setup = function (port) {\n  if (!port.id) {\n    this.debug.warn(\"Refusing to setup unidentified port \");\n    return false;\n  }\n\n  if (this.controlFlows[port.id]) {\n    this.debug.warn(\"Refusing to re-initialize port \" + port.id);\n    return false;\n  }\n\n  if (!this.config.global) {\n    this.once('config', this.setup.bind(this, port));\n    return;\n  }\n\n  this.hub.register(port);\n  var flow = this.hub.install(this, port.id, \"control\"),\n    reverse = this.hub.install(port, this.id, port.id);\n  this.controlFlows[port.id] = flow;\n  this.dataFlows[port.id] = [reverse];\n  this.reverseFlowMap[flow] = reverse;\n  this.reverseFlowMap[reverse] = flow;\n\n  if (port.lineage) {\n    this.emit('moduleAdd', {id: port.id, lineage: port.lineage});\n  }\n\n  this.hub.onMessage(flow, {\n    type: 'setup',\n    channel: reverse,\n    config: this.config\n  });\n\n  return true;\n};\n\n/**\n * Tear down a port on the hub, or the full local hub.\n * @method destroy\n * @apram {Port?} port The port to unregister.\n */\nManager.prototype.destroy = function (port) {\n  if (!port) {\n    // Tear down everything!\n    util.eachProp(this.controlFlows, function (flow) {\n      this.hub.onMessage(flow, {\n        type: 'close'\n      });\n    }.bind(this));\n    this.hub.teardown();\n    return;\n  }\n\n  if (!port.id) {\n    this.debug.warn(\"Unable to tear down unidentified port\");\n    return false;\n  }\n\n  if (port.lineage) {\n    this.emit('moduleRemove', {id: port.id, lineage: port.lineage});\n  }\n\n  // Remove the port.\n  delete this.controlFlows[port.id];\n\n  // Remove associated links.\n  var i;\n  for (i = this.dataFlows[port.id].length - 1; i >= 0; i -= 1) {\n    this.removeLink(port, this.dataFlows[port.id][i]);\n  }\n\n  // Remove the port.\n  delete this.dataFlows[port.id];\n  this.hub.deregister(port);\n};\n\n/**\n * Create a link between two ports.  Links are created in both directions,\n * and a message with those capabilities is sent to the source port.\n * @method createLink\n * @param {Port} port The source port.\n * @param {String} name The flow for messages from destination to port.\n * @param {Port} destination The destination port.\n * @param {String} [destName] The flow name for messages to the destination.\n * @param {Boolean} [toDest] Tell the destination about the link.\n */\nManager.prototype.createLink = function (port, name, destination, destName,\n                                         toDest) {\n  if (!this.config.global) {\n    this.once('config',\n      this.createLink.bind(this, port, name, destination, destName));\n    return;\n  }\n\n  if (!this.controlFlows[port.id]) {\n    this.debug.warn('Unwilling to link from non-registered source.');\n    return;\n  }\n\n  if (!this.controlFlows[destination.id]) {\n    if (this.setup(destination) === false) {\n      this.debug.warn('Could not find or setup destination.');\n      return;\n    }\n  }\n  var quiet = destination.quiet || false,\n    outgoingName = destName || 'default',\n    outgoing = this.hub.install(port, destination.id, outgoingName, quiet),\n    reverse;\n\n  // Recover the port so that listeners are installed.\n  destination = this.hub.getDestination(outgoing);\n  reverse = this.hub.install(destination, port.id, name, quiet);\n\n  this.reverseFlowMap[outgoing] = reverse;\n  this.dataFlows[port.id].push(outgoing);\n  this.reverseFlowMap[reverse] = outgoing;\n  this.dataFlows[destination.id].push(reverse);\n\n  if (toDest) {\n    this.hub.onMessage(this.controlFlows[destination.id], {\n      type: 'createLink',\n      name: outgoingName,\n      channel: reverse,\n      reverse: outgoing\n    });\n  } else {\n    this.hub.onMessage(this.controlFlows[port.id], {\n      name: name,\n      type: 'createLink',\n      channel: outgoing,\n      reverse: reverse\n    });\n  }\n};\n\n/**\n * Remove a link between to ports. The reverse link will also be removed.\n * @method removeLink\n * @param {Port} port The source port.\n * @param {String} name The flow to be removed.\n */\nManager.prototype.removeLink = function (port, name) {\n  var reverse = this.hub.getDestination(name),\n    rflow = this.reverseFlowMap[name],\n    i;\n\n  if (!reverse || !rflow) {\n    this.debug.warn(\"Could not find metadata to remove flow: \" + name);\n    return;\n  }\n\n  if (this.hub.getDestination(rflow).id !== port.id) {\n    this.debug.warn(\"Source port does not own flow \" + name);\n    return;\n  }\n\n  // Notify ports that a channel is closing.\n  i = this.controlFlows[port.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: name\n    });\n  }\n  i = this.controlFlows[reverse.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: rflow\n    });\n  }\n\n  // Uninstall the channel.\n  this.hub.uninstall(port, name);\n  this.hub.uninstall(reverse, rflow);\n\n  delete this.reverseFlowMap[name];\n  delete this.reverseFlowMap[rflow];\n  this.forgetFlow(reverse.id, rflow);\n  this.forgetFlow(port.id, name);\n};\n\n/**\n * Forget the flow from id with a given name.\n * @method forgetFlow\n * @private\n * @param {String} id The port ID of the source.\n * @param {String} name The flow name.\n */\nManager.prototype.forgetFlow = function (id, name) {\n  var i;\n  if (this.dataFlows[id]) {\n    for (i = 0; i < this.dataFlows[id].length; i += 1) {\n      if (this.dataFlows[id][i] === name) {\n        this.dataFlows[id].splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Get the core freedom.js API active on the current hub.\n * @method getCore\n * @private\n * @param {Function} cb Callback to fire with the core object.\n */\nManager.prototype.getCore = function (cb) {\n  if (this.core) {\n    cb(this.core);\n  } else {\n    this.api.getCore('core', this).then(function (core) {\n      this.core = core.inst;\n      cb(this.core);\n    }.bind(this), function () {\n      cb(undefined);\n    });\n  }\n};\n\nmodule.exports = Manager;\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar Provider = require('./provider');\n\n/**\n * The external Port face of a module on a hub.\n * @class Module\n * @extends Port\n * @param {String} manifestURL The manifest this module loads.\n * @param {String[]} creator The lineage of creation for this module.\n * @param {Policy} Policy The policy loader for dependencies.\n * @constructor\n */\nvar Module = function (manifestURL, manifest, creator, policy) {\n  this.api = policy.api;\n  this.policy = policy;\n  this.resource = policy.resource;\n  this.debug = policy.debug;\n\n  this.config = {};\n\n  this.id = manifestURL + Math.random();\n  this.manifestId = manifestURL;\n  this.manifest = manifest;\n  this.lineage = [this.manifestId].concat(creator);\n\n  this.quiet = this.manifest.quiet || false;\n\n  this.externalPortMap = {};\n  this.internalPortMap = {};\n  this.dependantChannels = [];\n  // Map from dependency names to target URLs, from this module's manifest.\n  this.dependencyUrls = {};\n  // Map from depenency names to arrays of pending messages.  Once a\n  // dependency is fully started, the pending messages will be drained and its\n  // entry in this map will be deleted.\n  this.pendingMessages = {};\n  this.started = false;\n  this.failed = false;\n\n  util.handleEvents(this);\n};\n\n/**\n * Receive a message for the Module.\n * @method onMessage\n * @param {String} flow The origin of the message.\n * @param {Object} message The message received.\n */\nModule.prototype.onMessage = function (flow, message) {\n  if (this.failed && message.to) {\n    // We've attempted to load the module and failed, so short-circuit any\n    // messages bound for the provider, and respond with an error reply instead.\n    // This error is handled in Consumer, resulting in triggering the\n    // freedom['moduleName'].onError listeners.\n    this.emit(this.externalPortMap[flow], {\n      type: 'error',\n    });\n    return;\n  }\n  if (flow === 'control') {\n    if (message.type === 'setup') {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.emit(this.controlChannel, {\n        type: 'Core Provider',\n        request: 'core'\n      });\n      this.start();\n      return;\n    } else if (message.type === 'createLink' && message.channel) {\n      this.debug.debug(this + 'got create link for ' + message.name);\n      this.externalPortMap[message.name] = message.channel;\n      if (this.internalPortMap[message.name] === undefined) {\n        this.internalPortMap[message.name] = false;\n      }\n      var msg = {\n        type: 'default channel announcement',\n        channel: message.reverse\n      };\n      if (this.manifest.dependencies &&\n          this.manifest.dependencies[message.name]) {\n        msg.api = this.manifest.dependencies[message.name].api;\n      }\n      this.emit(message.channel, msg);\n      this.drainPendingMessages(message.name);\n      return;\n    } else if (message.core) {\n      this.core = new message.core();\n      this.emit('core', message.core);\n      return;\n    } else if (message.type === 'close') {\n      // Closing channel.\n      if (!message.channel || message.channel === 'control') {\n        this.stop();\n      }\n      this.deregisterFlow(message.channel, false);\n    } else {\n      this.port.onMessage(flow, message);\n    }\n  } else {\n    if ((this.externalPortMap[flow] === false ||\n        !this.externalPortMap[flow]) && message.channel) {\n      this.debug.debug(this + 'handling channel announcement for ' + flow);\n      this.externalPortMap[flow] = message.channel;\n      if (this.internalPortMap[flow] === undefined) {\n        this.internalPortMap[flow] = false;\n\n        // New incoming connection attempts should get routed to modInternal.\n        if (this.manifest.provides && this.modInternal) {\n          this.port.onMessage(this.modInternal, {\n            type: 'Connection',\n            channel: flow,\n            api: message.api\n          });\n        } else if (this.manifest.provides) {\n          this.once('modInternal', function (flow, api) {\n            this.port.onMessage(this.modInternal, {\n              type: 'Connection',\n              channel: flow,\n              api: api\n            });\n          }.bind(this, flow, message.api));\n        // First connection retains legacy mapping as 'default'.\n        } else if (!this.externalPortMap['default'] && message.channel) {\n          this.externalPortMap['default'] = message.channel;\n          this.once('internalChannelReady', function (flow) {\n            this.internalPortMap[flow] = this.internalPortMap['default'];\n          }.bind(this, flow));\n        }\n      }\n      this.drainPendingMessages(message.name);\n      return;\n    } else if (!this.started) {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    } else {\n      if (this.internalPortMap[flow] === false) {\n        console.warn('waiting on internal channel for msg');\n        this.once('internalChannelReady', this.onMessage.bind(this, flow, message));\n      } else if (!this.internalPortMap[flow]) {\n        this.debug.error('Unexpected message from ' + flow);\n        return;\n      } else {\n        this.port.onMessage(this.internalPortMap[flow], message);\n      }\n    }\n  }\n};\n\n/**\n * Store a pending message for a flow that isn't ready yet.  The message will\n * be sent in-order by drainPendingMessages when the flow becomes ready.  This\n * is used to ensure messages are not lost while the target module is loading.\n * @method addPendingMessage\n * @param {String} name The flow to store a message for.\n * @param {Object} message The message to store.\n * @private\n */\nModule.prototype.addPendingMessage = function (name, message) {\n  if (!this.pendingMessages[name]) {\n    this.pendingMessages[name] = [];\n  }\n  this.pendingMessages[name].push(message);\n};\n\n/**\n * Send all pending messages for a flow that is now ready.  The messages will\n * be sent in-order.  This is used to ensure messages are not lost while the\n * target module is loading.\n * @method addPendingMessage\n * @param {String} name The flow to send pending messages.\n * @private\n */\nModule.prototype.drainPendingMessages = function (name) {\n  if (!this.pendingMessages[name]) {\n    return;\n  }\n  this.pendingMessages[name].forEach(\n      this.emit.bind(this, this.externalPortMap[name]));\n  delete this.pendingMessages[name];\n};\n\n/**\n * Clean up after a flow which is no longer used / needed.\n * @method deregisterFLow\n * @param {String} flow The flow to remove mappings for.\n * @param {Boolean} internal If the flow name is the internal identifier.\n * @returns {Boolean} Whether the flow was successfully deregistered.\n * @private\n */\nModule.prototype.deregisterFlow = function (flow, internal) {\n  var key,\n    map = internal ? this.internalPortMap : this.externalPortMap;\n  // TODO: this is inefficient, but seems less confusing than a 3rd\n  // reverse lookup map.\n  for (key in map) {\n    if (map[key] === flow) {\n      if (internal) {\n        this.emit(this.controlChannel, {\n          type: 'Channel Teardown',\n          request: 'unlink',\n          to: this.externalPortMap[key]\n        });\n      } else if (this.port) {\n        this.port.onMessage('control', {\n          type: 'close',\n          channel: this.internalPortMap[key]\n        });\n      }\n      delete this.externalPortMap[key];\n      delete this.internalPortMap[key];\n\n      // When there are still non-dependant channels, keep running\n      for (key in this.externalPortMap) {\n        if (this.externalPortMap.hasOwnProperty(key)) {\n          if (this.dependantChannels.indexOf(key) < 0) {\n            return true;\n          }\n        }\n      }\n      // Otherwise shut down the module.\n      this.stop();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Attempt to start the module once the remote freedom context\n * exists.\n * @method start\n * @private\n */\nModule.prototype.start = function () {\n  var Port;\n  if (this.started || this.port) {\n    return false;\n  }\n  if (this.controlChannel) {\n    this.loadLinks();\n    Port = this.config.portType;\n    this.port = new Port(this.manifest.name, this.resource);\n    // Listen to all port messages.\n    this.port.on(this.emitMessage.bind(this));\n    this.port.addErrorHandler(function (err) {\n      this.debug.warn('Module Failed', err);\n      this.failed = true;\n      this.emit(this.controlChannel, {\n        request: 'close'\n      });\n    }.bind(this));\n    // Tell the local port to ask us for help.\n    this.port.onMessage('control', {\n      channel: 'control',\n      config: this.config\n    });\n\n    // Tell the remote location to delegate debugging.\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'debug'\n    });\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'core'\n    });\n\n    // Tell the container to instantiate the counterpart to this external view.\n    this.port.onMessage('control', {\n      type: 'Environment Configuration',\n      request: 'environment',\n      name: 'ModInternal'\n    });\n  }\n};\n\n/**\n * Stop the module when it is no longer needed, and tear-down state.\n * @method stop\n * @private\n */\nModule.prototype.stop = function () {\n  if (!this.started) {\n    return;\n  }\n  this.emit('close');\n  if (this.port) {\n    this.port.off();\n    this.port.onMessage('control', {\n      type: 'close',\n      channel: 'control'\n    });\n    this.port.stop();\n    delete this.port;\n  }\n  delete this.policy;\n  this.started = false;\n};\n\n/**\n * Textual Description of the Port\n * @method toString\n * @return {String} The description of this Port.\n */\nModule.prototype.toString = function () {\n  return \"[Module \" + this.manifest.name + \"]\";\n};\n\n/**\n * Intercept messages as they arrive from the module,\n * mapping them between internal and external flow names.\n * @method emitMessage\n * @param {String} name The destination the module wants to send to.\n * @param {Object} message The message to send.\n * @private\n */\nModule.prototype.emitMessage = function (name, message) {\n  if (this.internalPortMap[name] === false && message.channel) {\n    this.internalPortMap[name] = message.channel;\n    this.emit('internalChannelReady');\n    return;\n  }\n  // Terminate debug redirection requested in start().\n  if (name === 'control') {\n    if (message.flow === 'debug' && message.message) {\n      this.debug.format(message.message.severity,\n          message.message.source || this.toString(),\n          message.message.msg);\n    } else if (message.flow === 'core' && message.message) {\n      if (!this.core) {\n        this.once('core', this.emitMessage.bind(this, name, message));\n        return;\n      }\n      if (message.message.type === 'register' ||\n          message.message.type === 'require') {\n        message.message.reply = this.port.onMessage.bind(this.port, 'control');\n        this.externalPortMap[message.message.id] = false;\n      }\n      this.core.onMessage(this, message.message);\n    } else if (message.name === 'ModInternal' && !this.modInternal) {\n      this.modInternal = message.channel;\n      this.port.onMessage(this.modInternal, {\n        type: 'Initialization',\n        id: this.manifestId,\n        appId: this.id,\n        manifest: this.manifest,\n        lineage: this.lineage,\n        channel: message.reverse\n      });\n      this.emit('modInternal');\n    } else if (message.type === 'createLink') {\n      this.internalPortMap[message.name] = message.channel;\n      this.port.onMessage(message.channel, {\n        type: 'channel announcement',\n        channel: message.reverse\n      });\n      this.emit('internalChannelReady');\n    } else if (message.type === 'close') {\n      this.deregisterFlow(message.channel, true);\n    }\n  } else if (name === 'ModInternal' && message.type === 'ready' && !this.started) {\n    this.started = true;\n    this.emit('start');\n  } else if (name === 'ModInternal' && message.type === 'resolve') {\n    this.resource.get(this.manifestId, message.data).then(function (id, data) {\n      this.port.onMessage(this.modInternal, {\n        type: 'resolve.response',\n        id: id,\n        data: data\n      });\n    }.bind(this, message.id), function () {\n      this.debug.warn('Error Resolving URL for Module.');\n    }.bind(this));\n  } else if (name === 'ModInternal' && message.type === 'error') {\n    this.failed = true;\n    // The start event ensures that we process any pending messages, in case\n    // one of them requires a short-circuit error response.\n    this.emit('start');\n  } else if (!this.externalPortMap[name]) {\n    // Store this message until we have a port for that name.\n    this.addPendingMessage(name, message);\n    // Start asynchronous loading of the target module if it's a dependency\n    // and loading hasn't started.\n    if (name in this.dependencyUrls &&\n        this.dependantChannels.indexOf(name) === -1) {\n      this.require(name, this.dependencyUrls[name]);\n    }\n  } else {\n    this.emit(this.externalPortMap[name], message);\n  }\n  return false;\n};\n\n/**\n * Create a dynamic dependency on another module.\n * @method require\n * @param {String} name The name of the dependency.\n * @param {String} manifest The URL of the dependency to add.\n */\nModule.prototype.require = function (name, manifest) {\n  this.dependantChannels.push(name);\n  this.addDependency(manifest, name).catch(function (err) {\n    this.port.onMessage(this.modInternal, {\n      type: 'require.failure',\n      id: name,\n      error: err.message\n    });\n  }.bind(this));\n};\n\n/**\n * Add a dependency to the module's dependency tree\n * @method addDependency\n * @param {String} url The manifest URL of the dependency\n * @param {String} name The exposed name of the module.\n * @returns {Module} The created dependent module.\n * @private\n */\nModule.prototype.addDependency = function (url, name) {\n  return this.resource.get(this.manifestId, url)\n    .then(function (url) {\n      return this.policy.get(this.lineage, url);\n    }.bind(this))\n    .then(function (dep) {\n      this.updateEnv(name, dep.manifest);\n      this.emit(this.controlChannel, {\n        type: 'Link to ' + name,\n        request: 'link',\n        name: name,\n        overrideDest: name + '.' + this.id,\n        to: dep\n      });\n      return dep;\n    }.bind(this))\n    .catch(function (err) {\n      this.debug.warn(this.toString() + ' failed to load dep: ', name, err);\n      throw err;\n    }.bind(this));\n};\n\n/**\n * Request the external routes used by this module.\n * @method loadLinks\n * @private\n */\nModule.prototype.loadLinks = function () {\n  var i, channels = ['default'], name, dep;\n\n  if (this.manifest.permissions) {\n    for (i = 0; i < this.manifest.permissions.length; i += 1) {\n      name = this.manifest.permissions[i];\n      if (channels.indexOf(name) < 0 && name.indexOf('core.') === 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n        dep = new Provider(this.api.get(name).definition, this.debug);\n        this.api.provideCore(name, dep, this);\n\n        this.emit(this.controlChannel, {\n          type: 'Core Link to ' + name,\n          request: 'link',\n          name: name,\n          to: dep\n        });\n      }\n    }\n  }\n  if (this.manifest.dependencies) {\n    util.eachProp(this.manifest.dependencies, function (desc, name) {\n      if (channels.indexOf(name) < 0) {\n        channels.push(name);\n      }\n      this.dependencyUrls[name] = desc.url;\n      // Turn the relative URL of the dependency's manifest into an absolute\n      // URL, load it, and send a message to the module informing it of the\n      // dependency's API.  Once the module has received all of these updates,\n      // it will emit a 'start' message.\n      this.resource.get(this.manifestId, desc.url)\n          .then(this.policy.loadManifest.bind(this.policy))\n          .then(this.updateEnv.bind(this, name));\n    }.bind(this));\n  }\n  // Note that messages can be synchronous, so some ports may already be bound.\n  for (i = 0; i < channels.length; i += 1) {\n    this.externalPortMap[channels[i]] = this.externalPortMap[channels[i]] || false;\n    this.internalPortMap[channels[i]] = false;\n  }\n};\n\n/**\n * Update the module environment with information about a dependent manifest.\n * @method updateEnv\n * @param {String} dep The dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModule.prototype.updateEnv = function (dep, manifest) {\n  if (!manifest) {\n    return;\n  }\n  if (!this.modInternal) {\n    this.once('modInternal', this.updateEnv.bind(this, dep, manifest));\n    return;\n  }\n\n  var metadata;\n\n  // Decide if/what other properties should be exported.\n  // Keep in sync with ModuleInternal.updateEnv\n  metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description,\n    api: manifest.api\n  };\n\n  this.port.onMessage(this.modInternal, {\n    type: 'manifest',\n    name: dep,\n    manifest: metadata\n  });\n};\n\nmodule.exports = Module;\n","/*jslint indent:2, node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar Provider = require('./provider');\nvar ProxyBinder = require('./proxybinder');\nvar util = require('./util');\n\n/**\n * The internal logic for module setup, which makes sure the public\n * facing exports have appropriate properties, and load user scripts.\n * @class ModuleInternal\n * @extends Port\n * @param {Port} manager The manager in this module to use for routing setup.\n * @constructor\n */\nvar ModuleInternal = function (manager) {\n  this.config = {};\n  this.manager = manager;\n  this.debug = manager.debug;\n  this.binder = new ProxyBinder(this.manager);\n  this.api = this.manager.api;\n  this.manifests = {};\n  this.providers = {};\n\n  this.id = 'ModuleInternal';\n  this.pendingPorts = 0;\n  this.requests = {};\n  this.unboundPorts = {};\n\n  util.handleEvents(this);\n};\n\n/**\n * Message handler for this port.\n * This port only handles two messages:\n * The first is its setup from the manager, which it uses for configuration.\n * The second is from the module controller (fdom.port.Module), which provides\n * the manifest info for the module.\n * @method onMessage\n * @param {String} flow The detination of the message.\n * @param {Object} message The message.\n */\nModuleInternal.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n    }\n  } else if (flow === 'default' && !this.appId) {\n    // Recover the ID of this module:\n    this.port = this.manager.hub.getDestination(message.channel);\n    this.externalChannel = message.channel;\n    this.appId = message.appId;\n    this.lineage = message.lineage;\n\n    var objects = this.mapProxies(message.manifest);\n\n    this.generateEnv(message.manifest, objects).then(function () {\n      return this.loadLinks(objects);\n    }.bind(this)).then(this.loadScripts.bind(this, message.id,\n        message.manifest.app.script)).then(null, function (err) {\n      this.debug.error('Could not set up module ' + this.appId + ': ', err);\n    }.bind(this));\n  } else if (flow === 'default' && message.type === 'resolve.response' &&\n             this.requests[message.id]) {\n    this.requests[message.id](message.data);\n    delete this.requests[message.id];\n  } else if (flow === 'default' && message.type === 'require.failure' &&\n             this.unboundPorts[message.id]) {\n    this.unboundPorts[message.id].callback(undefined, message.error);\n    delete this.unboundPorts[message.id];\n  } else if (flow === 'default' && message.type === 'manifest') {\n    this.emit('manifest', message);\n    this.updateManifest(message.name, message.manifest);\n  } else if (flow === 'default' && message.type === 'Connection') {\n    // Multiple connections can be made to the default provider.\n    if (message.api && this.providers[message.api]) {\n      this.manager.createLink(this.providers[message.api], message.channel,\n                             this.port, message.channel);\n    } else if (this.defaultPort &&\n               (message.api === this.defaultPort.api || !message.api)) {\n      this.manager.createLink(this.defaultPort, message.channel,\n                              this.port, message.channel);\n    } else {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\n/**\n * Get a textual description of this Port.\n * @method toString\n * @return {String} a description of this Port.\n */\nModuleInternal.prototype.toString = function () {\n  return \"[Environment Helper]\";\n};\n\n/**\n * Generate an externaly visisble namespace\n * @method generateEnv\n * @param {Object} manifest The manifest of the module.\n * @param {Object[]} items Other interfaces to load.\n * @returns {Promise} A promise when the external namespace is visible.\n * @private\n */\nModuleInternal.prototype.generateEnv = function (manifest, items) {\n  return this.binder.bindDefault(this.port, this.api, manifest, true).then(\n    function (binding) {\n      var i = 0;\n      binding.port.api = binding.external.api;\n      this.defaultPort = binding.port;\n      if (binding.external.api) {\n        for (i = 0; i < items.length; i += 1) {\n          if (items[i].name === binding.external.api && items[i].def.provides) {\n            items.splice(i, 1);\n            break;\n          }\n        }\n      }\n      this.config.global.freedom = binding.external;\n    }.bind(this)\n  );\n};\n\n/**\n * Register an unused channel ID for callback, and once information\n * about the channel is known, call the handler with that information.\n * @method registerId\n * @param {String} api The preferred API to use for the new channel.\n * @param {Function} callback Function to call once channel ready\n * @returns {String} The allocated channel name.\n */\nModuleInternal.prototype.registerId = function (api, callback) {\n  var id = util.getId();\n  this.unboundPorts[id] = {\n    name: api,\n    callback: callback\n  };\n  return id;\n};\n\n/**\n * Attach a proxy to the externally visible namespace.\n * @method attach\n * @param {String} name The name of the proxy.\n * @param {Boolean} provides If this proxy is a provider.\n * @param {ProxyInterface} proxy The proxy to attach.\n * @param {String} api The API the proxy implements.\n * @private.\n */\nModuleInternal.prototype.attach = function (name, provides, proxy) {\n  var exp = this.config.global.freedom;\n\n  if (provides) {\n    this.providers[name] = proxy.port;\n  }\n\n  if (!exp[name]) {\n    exp[name] = proxy.external;\n    if (this.manifests[name]) {\n      exp[name].manifest = this.manifests[name];\n    }\n  }\n\n  this.pendingPorts -= 1;\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return exp[name];\n};\n\n/**\n * Request a set of proxy interfaces, and bind them to the external\n * namespace.\n * @method loadLinks\n * @param {Object[]} items Descriptors of the proxy ports to load.\n * @private\n * @returns {Promise} Promise for when all links are loaded.\n */\n//TODO(willscott): promise should be chained, rather than going through events.\nModuleInternal.prototype.loadLinks = function (items) {\n  var i, proxy, provider, core,\n    manifestPredicate = function (name, flow, msg) {\n      return flow === 'manifest' && msg.name === name;\n    },\n    onManifest = function (item, msg) {\n      var definition = {\n        name: item.api\n      };\n      if (!msg.manifest.api || !msg.manifest.api[item.api]) {\n        definition.definition = null;\n      } else {\n        definition.definition = msg.manifest.api[item.api];\n      }\n      this.binder.getExternal(this.port, item.name, definition).then(\n        this.attach.bind(this, item.name, false)\n      );\n    }.bind(this),\n    promise = new PromiseCompat(function (resolve, reject) {\n      this.once('start', resolve);\n    }.bind(this));\n\n  for (i = 0; i < items.length; i += 1) {\n    if (items[i].api && !items[i].def) {\n      if (this.manifests[items[i].name]) {\n        onManifest(items[i], {\n          manifest: this.manifests[items[i].name]\n        });\n      } else {\n        this.once(manifestPredicate.bind({}, items[i].name),\n                  onManifest.bind(this, items[i]));\n      }\n    } else {\n      this.binder.getExternal(this.port, items[i].name, items[i].def).then(\n        this.attach.bind(this, items[i].name, items[i].def &&\n                         items[i].def.provides)\n      );\n    }\n    this.pendingPorts += 1;\n  }\n\n  // Allow resolution of files by parent.\n  this.manager.resource.addResolver(function (manifest, url, resolve) {\n    var id = util.getId();\n    this.requests[id] = resolve;\n    this.emit(this.externalChannel, {\n      type: 'resolve',\n      id: id,\n      data: url\n    });\n    return true;\n  }.bind(this));\n\n  // Attach Core.\n  this.pendingPorts += 1;\n\n  core = this.api.get('core').definition;\n  provider = new Provider(core, this.debug);\n  this.manager.getCore(function (CoreProv) {\n    new CoreProv(this.manager).setId(this.lineage, this);\n    provider.getInterface().provideAsynchronous(CoreProv);\n  }.bind(this));\n\n  this.emit(this.controlChannel, {\n    type: 'Link to core',\n    request: 'link',\n    name: 'core',\n    to: provider\n  });\n\n  this.binder.getExternal(provider, 'default', {\n    name: 'core',\n    definition: core\n  }).then(function (core) {\n    core.external.getLoggerSync = this.debug.getLoggingShim(\n        core.external().getLogger);\n    this.attach('core', false, core);\n  }.bind(this));\n\n\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return promise;\n};\n\n/**\n * Update the exported manifest of a dependency.\n * Sets it internally if not yet exported, or attaches the property if it\n * is loaded after the module has started (we don't delay start to retreive\n * the manifest of the dependency.)\n * @method updateManifest\n * @param {String} name The Dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModuleInternal.prototype.updateManifest = function (name, manifest) {\n  var exp = this.config.global.freedom;\n\n  if (exp && exp[name]) {\n    exp[name].manifest = manifest;\n  // Handle require() dependency resolution.\n  } else if (this.unboundPorts[name]) {\n    this.binder.getExternal(this.port, name,\n        this.binder.getAPI(manifest, this.api, this.unboundPorts[name].api))\n      .then(\n        this.attach.bind(this, name, false)\n      ).then(function(proxy) {\n        this.unboundPorts[name].callback(proxy);\n        delete this.unboundPorts[name];\n      }.bind(this));\n  } else {\n    this.manifests[name] = manifest;\n  }\n};\n\n/**\n * Determine which proxy ports should be exposed by this module.\n * @method mapProxies\n * @param {Object} manifest the module JSON manifest.\n * @return {Object[]} proxy descriptors defined in the manifest.\n */\nModuleInternal.prototype.mapProxies = function (manifest) {\n  var proxies = [], seen = ['core'], i, obj;\n\n  if (manifest.permissions) {\n    for (i = 0; i < manifest.permissions.length; i += 1) {\n      obj = {\n        name: manifest.permissions[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (seen.indexOf(obj.name) < 0 && obj.def) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  if (manifest.dependencies) {\n    util.eachProp(manifest.dependencies, function (desc, name) {\n      obj = {\n        name: name,\n        api: desc.api\n      };\n      if (seen.indexOf(name) < 0) {\n        if (desc.api) {\n          obj.def = this.api.get(desc.api);\n        }\n        proxies.push(obj);\n        seen.push(name);\n      }\n    }.bind(this));\n  }\n\n  if (manifest.provides) {\n    for (i = 0; i < manifest.provides.length; i += 1) {\n      obj = {\n        name: manifest.provides[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (obj.def) {\n        obj.def.provides = true;\n      } else if (manifest.api && manifest.api[obj.name]) {\n        obj.def = {\n          name: obj.name,\n          definition: manifest.api[obj.name],\n          provides: true\n        };\n      } else {\n        this.debug.warn('Module will not provide \"' + obj.name +\n          '\", since no declaration can be found.');\n        /*jslint continue:true*/\n        continue;\n      }\n      /*jslint continue:false*/\n      if (seen.indexOf(obj.name) < 0) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  return proxies;\n};\n\n/**\n * Load external scripts into this namespace.\n * @method loadScripts\n * @param {String} from The URL of this modules's manifest.\n * @param {String[]} scripts The URLs of the scripts to load.\n */\nModuleInternal.prototype.loadScripts = function (from, scripts) {\n  var importer = function (script, resolve, reject) {\n    try {\n      this.config.global.importScripts(script);\n      resolve(true);\n    } catch (e) {\n      reject(e);\n    }\n  }.bind(this),\n    scripts_count,\n    load;\n  if (typeof scripts === 'string') {\n    scripts_count = 1;\n  } else {\n    scripts_count = scripts.length;\n  }\n\n  load = function (next) {\n    if (next === scripts_count) {\n      this.emit(this.externalChannel, {\n        type: \"ready\"\n      });\n      return;\n    }\n\n    var script;\n    if (typeof scripts === 'string') {\n      script = scripts;\n    } else {\n      script = scripts[next];\n    }\n\n    this.manager.resource.get(from, script).then(function (url) {\n      this.tryLoad(importer, url).then(function () {\n        load(next + 1);\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n\n\n  if (!this.config.global.importScripts) {\n    importer = function (url, resolve, reject) {\n      var script = this.config.global.document.createElement('script');\n      script.src = url;\n      script.addEventListener('load', resolve, true);\n      script.addEventListener('error', reject, true);\n      this.config.global.document.body.appendChild(script);\n    }.bind(this);\n  }\n\n  load(0);\n};\n\n/**\n * Attempt to load resolved scripts into the namespace.\n * @method tryLoad\n * @private\n * @param {Function} importer The actual import function\n * @param {String[]} urls The resoved URLs to load.\n * @returns {Promise} completion of load\n */\nModuleInternal.prototype.tryLoad = function (importer, url) {\n  return new PromiseCompat(importer.bind({}, url)).then(function (val) {\n    return val;\n  }, function (e) {\n    this.debug.warn(e.stack);\n    this.debug.error(\"Error loading \" + url, e);\n    this.debug.error(\"If the stack trace is not useful, see https://\" +\n        \"github.com/freedomjs/freedom/wiki/Debugging\");\n    // This event is caught in Module, which will then respond to any messages\n    // for the provider with short-circuit errors.\n    this.emit(this.externalChannel, {\n      type: 'error'\n    });\n    throw e;\n  }.bind(this));\n};\n\nmodule.exports = ModuleInternal;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\nvar Module = require('./module');\nvar util = require('./util');\n\n/**\n * The Policy registry for freedom.js.  Used to look up modules and provide\n * migration and coallesing of execution.\n * @Class Policy\n * @param {Manager} manager The manager of the active runtime.\n * @param {Resource} resource The resource loader of the active runtime.\n * @param {Object} config The local config.\n * @constructor\n */\nvar Policy = function(manager, resource, config) {\n  this.api = manager.api;\n  this.debug = manager.debug;\n  this.location = config.location;\n  this.resource = resource;\n\n  this.config = config;\n  this.runtimes = [];\n  this.policies = [];\n  this.pending = {};\n  util.handleEvents(this);\n\n  this.add(manager, config.policy);\n  this.runtimes[0].local = true;\n};\n\n/**\n * The policy a runtime is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultPolicy\n */\nPolicy.prototype.defaultPolicy = {\n  background: false, // Can this runtime run 'background' modules?\n  interactive: true // Is there a view associated with this runtime?\n  // TODO: remaining runtime policy.\n};\n\n/**\n * The constraints a code modules is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultConstraints\n */\nPolicy.prototype.defaultConstraints = {\n  isolation: \"always\", // values: always, app, never\n  placement: \"local\" // values: local, stable, redundant\n  // TODO: remaining constraints, express platform-specific dependencies.\n};\n\n/**\n * Resolve a module from its canonical URL.\n * Reponds with the promise of a port representing the module, \n * @method get\n * @param {String[]} lineage The lineage of the requesting module.\n * @param {String} id The canonical ID of the module to get.\n * @returns {Promise} A promise for the local port towards the module.\n */\nPolicy.prototype.get = function(lineage, id) {\n  \n  // Make sure that a module isn't getting located twice at the same time.\n  // This is resolved by delaying if it until we see it in a 'moduleAdd' event.\n  if (this.pending[id]) {\n    return new PromiseCompat(function (resolve, reject) {\n      this.once('placed', function(l, i) {\n        this.get(l, i).then(resolve, reject);\n      }.bind(this, lineage, id));\n    }.bind(this));\n  } else {\n    this.pending[id] = true;\n  }\n\n  return this.loadManifest(id).then(function(manifest) {\n    var constraints = this.overlay(this.defaultConstraints, manifest.constraints),\n        runtime = this.findDestination(lineage, id, constraints),\n        portId;\n    if (runtime.local) {\n      portId = this.isRunning(runtime, id, lineage,\n                             constraints.isolation !== 'never');\n      if(constraints.isolation !== 'always' && portId) {\n        this.debug.info('Reused port ' + portId);\n        delete this.pending[id];\n        this.emit('placed');\n        return runtime.manager.getPort(portId);\n      } else {\n        return new Module(id, manifest, lineage, this);\n      }\n    } else {\n      // TODO: Create a port to go to the remote runtime.\n      this.debug.error('Unexpected location selected for module placement');\n      return false;\n    }\n  }.bind(this), function(err) {\n    this.debug.error('Policy Error Resolving ' + id, err);\n    throw(err);\n  }.bind(this));\n};\n\n/**\n * Find the runtime destination for a module given its constraints and the\n * module creating it.\n * @method findDestination\n * @param {String[]} lineage The identity of the module creating this module.\n * @param {String] id The canonical url of the module\n * @param {Object} constraints Constraints for the module.\n * @returns {Object} The element of this.runtimes where the module should run.\n */\nPolicy.prototype.findDestination = function(lineage, id, constraints) {\n  var i;\n\n  // Step 1: if an instance already exists, the m\n  if (constraints.isolation !== 'always') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.isRunning(this.runtimes[i], id, lineage,\n                         constraints.isolation !== 'never')) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 2: if the module wants stability, it may need to be remote.\n  if (constraints.placement === 'local') {\n    return this.runtimes[0];\n  } else if (constraints.placement === 'stable') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.policies[i].background) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 3: if the module needs longevity / interactivity, it may want to be remote.\n  return this.runtimes[0];\n};\n\n/**\n * Determine if a known runtime is running an appropriate instance of a module.\n * @method isRunning\n * @param {Object} runtime The runtime to check.\n * @param {String} id The module to look for.\n * @param {String[]} from The identifier of the requesting module.\n * @param {Boolean} fullMatch If the module needs to be in the same app.\n * @returns {String|Boolean} The Module id if it is running, or false if not.\n */\nPolicy.prototype.isRunning = function(runtime, id, from, fullMatch) {\n  var i = 0, j = 0, okay;\n  for (i = 0; i < runtime.modules.length; i += 1) {\n    if (fullMatch && runtime.modules[i].length === from.length + 1) {\n      okay = true;\n      for (j = 0; j < from.length; j += 1) {\n        if (runtime.modules[i][j + 1].indexOf(from[j]) !== 0) {\n          okay = false;\n          break;\n        }\n      }\n      if (runtime.modules[i][0].indexOf(id) !== 0) {\n        okay = false;\n      }\n\n      if (okay) {\n        return runtime.modules[i][0];\n      }\n    } else if (!fullMatch && runtime.modules[i][0].indexOf(id) === 0) {\n      return runtime.modules[i][0];\n    }\n  }\n  return false;\n};\n\n/**\n * Get a promise of the manifest for a module ID.\n * @method loadManifest\n * @param {String} manifest The canonical ID of the manifest\n * @returns {Promise} Promise for the json contents of the manifest.\n */\nPolicy.prototype.loadManifest = function(manifest) {\n  return this.resource.getContents(manifest).then(function(data) {\n    var resp = {};\n    try {\n      return JSON.parse(data);\n    } catch(err) {\n      this.debug.error(\"Failed to load \" + manifest + \": \" + err);\n      throw new Error(\"No Manifest Available\");\n    }\n  }.bind(this));\n};\n\n/**\n * Add a runtime to keep track of in this policy.\n * @method add\n * @param {fdom.port} port The port to use for module lifetime info\n * @param {Object} policy The policy of the runtime.\n */\nPolicy.prototype.add = function(port, policy) {\n  var runtime = {\n    manager: port,\n    modules: []\n  };\n  this.runtimes.push(runtime);\n  this.policies.push(this.overlay(this.defaultPolicy, policy));\n\n  port.on('moduleAdd', function(runtime, info) {\n    var lineage = [];\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    runtime.modules.push(lineage);\n    if (this.pending[info.lineage[0]]) {\n      delete this.pending[info.lineage[0]];\n      this.emit('placed');\n    }\n  }.bind(this, runtime));\n  port.on('moduleRemove', function(runtime, info) {\n    var lineage = [], i, modFingerprint;\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    modFingerprint = lineage.toString();\n\n    for (i = 0; i < runtime.modules.length; i += 1) {\n      if (runtime.modules[i].toString() === modFingerprint) {\n        runtime.modules.splice(i, 1);\n        return;\n      }\n    }\n    this.debug.warn('Unknown module to remove: ', info.id);\n  }.bind(this, runtime));\n};\n\n/**\n * Overlay a specific policy or constraint instance on default settings.\n * TODO: consider making static.\n * @method overlay\n * @private\n * @param {Object} base The default object\n * @param {Object} overlay The superceeding object\n * @returns {Object} A new object with base parameters when not set in overlay.\n */\nPolicy.prototype.overlay = function(base, overlay) {\n  var ret = {};\n\n  util.mixin(ret, base);\n  if (overlay) {\n    util.mixin(ret, overlay, true);\n  }\n  return ret;\n};\n\nmodule.exports = Policy;\n","/*jslint indent:2, node:true, sloppy:true, browser:true */\nvar Consumer = require('./consumer');\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable provider.\n * @class Provider\n * @implements Port\n * @uses handleEvents\n * @param {Object} def The interface of the provider.\n * @param {Debug} debug The debugger to use for logging.\n * @contructor\n */\nvar Provider = function (def, debug) {\n  this.id = Consumer.nextId();\n  util.handleEvents(this);\n  this.debug = debug;\n\n  this.definition = def;\n  this.mode = Provider.mode.synchronous;\n  this.channels = {};\n  this.iface = null;\n  this.closeHandlers = {};\n  this.providerCls = null;\n\n  this.ifaces = {};\n  this.emits = {};\n};\n\n/**\n * Provider modes of operation.\n * @property mode\n * @static\n * @type number\n */\nProvider.mode = {\n  synchronous: 0,\n  asynchronous: 1,\n  promises: 2\n};\n\n/**\n * Receive external messages for the provider.\n * @method onMessage\n * @param {String} source the source identifier of the message.\n * @param {Object} message The received message.\n */\nProvider.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.channels[message.name] = message.channel;\n    this.emit(message.channel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    if (message.channel === this.controlChannel) {\n      delete this.controlChannel;\n    }\n    this.close();\n  } else {\n    if (!this.channels[source] && message.channel) {\n      this.channels[source] = message.channel;\n      this.emit('start');\n      return;\n    } else if (!this.channels[source]) {\n      this.debug.warn('Message from unconfigured source: ' + source);\n      return;\n    }\n\n    if (message.type === 'close' && message.to) {\n      this.teardown(source, message.to);\n    } else if (message.to && this.emits[source] &&\n               this.emits[source][message.to]) {\n      message.message.to = message.to;\n      this.emits[source][message.to](message.message);\n    } else if (message.to && message.message &&\n        message.message.type === 'construct') {\n      var args = Consumer.portableToMessage(\n          (this.definition.constructor && this.definition.constructor.value) ?\n              this.definition.constructor.value : [],\n          message.message,\n          this.debug\n        ),\n        instance;\n      if (!this.ifaces[source]) {\n        this.ifaces[source] = {};\n        this.emits[source] = {};\n      }\n      this.ifaces[source][message.to] = true;\n      instance = this.getProvider(source, message.to, args);\n      // don't save a reference to instance if it closed itself already.\n      if (this.ifaces[source] &&\n          this.ifaces[source][message.to]) {\n        this.ifaces[source][message.to] = instance.instance;\n        this.emits[source][message.to] = instance.onmsg;\n      }\n    } else {\n      this.debug.warn(this.toString() + ' dropping message ' +\n          JSON.stringify(message));\n    }\n  }\n};\n\n/**\n * Close / teardown the flow this provider terminates.\n * @method close\n */\nProvider.prototype.close = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Provider Closing',\n      request: 'close'\n    });\n    delete this.controlChannel;\n  }\n  this.emit('close');\n\n  // Release references.\n  delete this.iface;\n  delete this.providerCls;\n  this.ifaces = {};\n  this.emits = {};\n  this.emitChannel = null;\n};\n\n/**\n * Teardown a single instance of an object fulfilling this provider.\n * @method teardown\n * @param {String} source The consumer source of the instance.\n * @param {String} id The id of the instance to tear down.\n */\nProvider.prototype.teardown = function (source, id) {\n  // Ignore teardown of non-existant ids.\n  if (!this.ifaces[source]) {\n    return;\n  }\n\n  delete this.ifaces[source][id];\n  delete this.emits[source][id];\n  if (this.closeHandlers[source] && this.closeHandlers[source][id]) {\n    util.eachProp(this.closeHandlers[source][id], function (prop) {\n      prop();\n    });\n    delete this.closeHandlers[source][id];\n  }\n};\n\n/**\n * Get an interface to expose externally representing this port.\n * Providers are registered with the port using either\n * provideSynchronous or provideAsynchronous depending on the desired\n * return interface.\n * @method getInterface\n * @return {Object} The external interface of this Provider.\n */\nProvider.prototype.getInterface = function () {\n  if (this.iface) {\n    return this.iface;\n  } else {\n    var sanityCheck = function (provider) {\n      if (typeof provider !== \"function\") {\n        throw new Error(\"Provider \" + this.toString() +\n            \" needs to be implemented by a function.\");\n      }\n    };\n    this.iface = {\n      provideSynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.synchronous;\n      }.bind(this),\n      provideAsynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.asynchronous;\n      }.bind(this),\n      providePromises: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.promises;\n      }.bind(this)\n    };\n\n    util.eachProp(this.definition, function (prop, name) {\n      switch (prop.type) {\n      case \"constant\":\n        Object.defineProperty(this.iface, name, {\n          value: Consumer.recursiveFreezeObject(prop.value),\n          writable: false\n        });\n        break;\n      }\n    }.bind(this));\n\n    return this.iface;\n  }\n};\n\n/**\n * Create a function that can be used to get interfaces from this provider from\n * a user-visible point.\n * @method getProxyInterface\n */\nProvider.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    return p.getInterface();\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (ids, source) {\n        util.eachProp(ids, function (candidate, id) {\n          if (candidate === iface) {\n            this.teardown(source, id);\n            this.emit(this.channels[source], {\n              type: 'close',\n              to: id\n            });\n            return true;\n          }\n        }.bind(this));\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.close();\n    }\n  }.bind(this);\n\n  func.onClose = function (iface, handler) {\n    // Listen to the channel directly.\n    if (typeof iface === 'function' && handler === undefined) {\n      this.once('close', iface);\n      return;\n    }\n\n    util.eachProp(this.ifaces, function (ids, source) {\n      util.eachProp(ids, function (candidate, id) {\n        if (candidate === iface) {\n          if (!this.closeHandlers[source]) {\n            this.closeHandlers[source] = {};\n          }\n          if (!this.closeHandlers[source][id]) {\n            this.closeHandlers[source][id] = [];\n          }\n          this.closeHandlers[source][id].push(handler);\n          return true;\n        }\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n  return func;\n};\n\n/**\n * Get a new instance of the registered provider.\n * @method getProvider\n * @param {String} source The port this instance is interactign with.\n * @param {String} identifier the messagable address for this provider.\n * @param {Array} args Constructor arguments for the provider.\n * @return {Function} A function to send messages to the provider.\n */\nProvider.prototype.getProvider = function (source, identifier, args) {\n  if (!this.providerCls) {\n    this.debug.error('Cannot instantiate provider, since it is not provided');\n    return {instance: undefined, onmsg: undefined};\n  }\n\n  var events = {},\n    dispatchEvent,\n    BoundClass,\n    instance;\n\n  util.eachProp(this.definition, function (prop, name) {\n    if (prop.type === 'event') {\n      events[name] = prop;\n    }\n  });\n\n  dispatchEvent = function (src, ev, id, name, value) {\n    if (ev[name]) {\n      var streams = Consumer.messageToPortable(ev[name].value, value,\n                                                   this.debug);\n      this.emit(this.channels[src], {\n        type: 'message',\n        to: id,\n        message: {\n          name: name,\n          type: 'event',\n          text: streams.text,\n          binary: streams.binary\n        }\n      });\n    }\n  }.bind(this, source, events, identifier);\n\n  // this is all to say: new providerCls(dispatchEvent, args[0], args[1],...)\n  BoundClass = this.providerCls.bind.apply(this.providerCls,\n      [this.providerCls, dispatchEvent].concat(args || []));\n  instance = new BoundClass();\n\n  return {\n    instance: instance,\n    onmsg: function (port, src, msg) {\n      var prop, debug, args, returnPromise, ret;\n      if (msg.action === 'method') {\n        if (typeof this[msg.type] !== 'function') {\n          port.debug.warn(\"Provider does not implement \" + msg.type + \"()!\");\n          port.emit(port.channels[src], {\n            type: 'method',\n            to: msg.to,\n            message: {\n              to: msg.to,\n              type: 'method',\n              reqId: msg.reqId,\n              name: msg.type,\n              error: 'Provider does not implement ' + msg.type + '()!'\n            }\n          });\n          return;\n        }\n        prop = port.definition[msg.type];\n        debug = port.debug;\n        args = Consumer.portableToMessage(prop.value, msg, debug);\n        if (msg.reqId === null) {\n          // Reckless call.  Ignore return value.\n          ret = function(resolve, reject) {\n            if (reject) {\n              debug.error(reject);\n            }\n          };\n        } else {\n          ret = function (src, msg, prop, resolve, reject) {\n            var streams = Consumer.messageToPortable(prop.ret, resolve,\n                                                         debug);\n            this.emit(this.channels[src], {\n              type: 'method',\n              to: msg.to,\n              message: {\n                to: msg.to,\n                type: 'method',\n                reqId: msg.reqId,\n                name: msg.type,\n                text: streams.text,\n                binary: streams.binary,\n                error: reject\n              }\n            });\n          }.bind(port, src, msg, prop);\n        }\n        if (!Array.isArray(args)) {\n          args = [args];\n        }\n        if (port.mode === Provider.mode.synchronous) {\n          try {\n            ret(this[msg.type].apply(this, args));\n          } catch (e1) {\n            ret(undefined, e1.message + ' ' + e1.stack);\n          }\n        } else if (port.mode === Provider.mode.asynchronous) {\n          try {\n            this[msg.type].apply(instance, args.concat(ret));\n          } catch (e2) {\n            ret(undefined, e2.message + ' ' + e2.stack);\n          }\n        } else if (port.mode === Provider.mode.promises) {\n          try {\n            returnPromise = this[msg.type].apply(this, args);\n            if (returnPromise && returnPromise.then) {\n              returnPromise.then(ret, ret.bind({}, undefined));\n            } else {\n              ret(undefined, 'No promise returned from ' +\n                  msg.type + ': ' + returnPromise);\n            }\n          } catch (e3) {\n            ret(undefined, e3.message + ' ' + e3.stack);\n          }\n        }\n      }\n    }.bind(instance, this, source)\n  };\n};\n\n/**\n * Get a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nProvider.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Provider \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Provider]\";\n  }\n};\n\nmodule.exports = Provider;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('../util');\nvar Consumer = require('../consumer');\n\nvar ApiInterface = function(def, onMsg, emit, debug) {\n  var inflight = {},\n      events = null,\n      emitter = null,\n      reqId = 0,\n      args = arguments;\n\n  util.eachProp(def, function(prop, name) {\n    switch(prop.type) {\n    case 'method':\n      this[name] = function() {\n        // Note: inflight should be registered before message is passed\n        // in order to prepare for synchronous in-window pipes.\n        var thisReq = reqId,\n            promise = new PromiseCompat(function(resolve, reject) {\n              inflight[thisReq] = {\n                resolve:resolve,\n                reject:reject,\n                template: prop.ret\n              };\n            }),\n            streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        reqId += 1;\n        emit({\n          action: 'method',\n          type: name,\n          reqId: thisReq,\n          text: streams.text,\n          binary: streams.binary\n        });\n        return promise;\n      };\n      this[name].reckless = function () {\n        var streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        emit({\n          action: 'method',\n          type: name,\n          reqId: null,  // Marks this as a reckless call.\n          text: streams.text,\n          binary: streams.binary\n        });\n        // Return type is void.\n      };\n      break;\n    case 'event':\n      if(!events) {\n        util.handleEvents(this);\n        emitter = this.emit;\n        delete this.emit;\n        events = {};\n      }\n      events[name] = prop;\n      break;\n    case 'constant':\n      Object.defineProperty(this, name, {\n        value: Consumer.recursiveFreezeObject(prop.value),\n        writable: false\n      });\n      break;\n    }\n  }.bind(this));\n\n  onMsg(this, function(type, msg) {\n    if (type === 'close') {\n      if (this.off) {\n        this.off();\n      }\n      util.eachProp(inflight, function (obj) {\n        obj.reject('closed');\n      });\n      inflight = {};\n      return;\n    }\n    if (!msg) {\n      return;\n    }\n    if (msg.type === 'method') {\n      if (inflight[msg.reqId]) {\n        var resolver = inflight[msg.reqId],\n            template = resolver.template;\n        delete inflight[msg.reqId];\n        if (msg.error) {\n          resolver.reject(msg.error);\n        } else {\n          resolver.resolve(Consumer.portableToMessage(template, msg, debug));\n        }\n      } else {\n        debug.error('Incoming message claimed to be an RPC ' +\n                         'returning for unregistered call', msg.reqId);\n      }\n    } else if (msg.type === 'event') {\n      if (events[msg.name]) {\n        emitter(msg.name, Consumer.portableToMessage(events[msg.name].value,\n                msg, debug));\n      }\n    }\n  }.bind(this));\n\n  args = Consumer.messageToPortable(\n      (def.constructor && def.constructor.value) ? def.constructor.value : [],\n      Array.prototype.slice.call(args, 4),\n      debug);\n\n  emit({\n    type: 'construct',\n    text: args.text,\n    binary: args.binary\n  });\n};\n\nmodule.exports = ApiInterface;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar util = require('../util');\n\nvar EventInterface = function(onMsg, emit, debug) {\n  util.handleEvents(this);\n  \n  onMsg(this, function(emit, type, msg) {\n    if (type === 'close') {\n      return;\n    }\n    emit(msg.type, msg.message);\n  }.bind(this, this.emit));\n\n  this.emit = function(emitter, type, msg) {\n    emitter({type: type, message: msg}, true);\n  }.bind({}, emit);\n};\n\nmodule.exports = EventInterface;\n","/*jslint indent:2, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar EventInterface = require('./proxy/eventInterface');\nvar Consumer = require('./consumer');\nvar Provider = require('./provider');\n\n/**\n * A Proxy Binder manages the external interface, and creates one of\n * the different types of objects exposed by freedom either as a global\n * within a worker / module context, or returned by an external call to\n * create a freedom runtime.\n * @Class ProxyBinder\n * @param {Manager} manager The manager for the active runtime.\n */\nvar ProxyBinder = function (manager) {\n  'use strict';\n  this.manager = manager;\n};\n\n/**\n * Create a proxy for a freedom port, and return it once loaded.\n * @method getExternal\n * @param {Port} port The port for the proxy to communicate with.\n * @param {String} name The name of the proxy.\n * @param {Object} [definition] The definition of the API to expose.\n * @param {String} definition.name The name of the API.\n * @param {Object} definition.definition The definition of the API.\n * @param {Boolean} definition.provides Whether this is a consumer or provider.\n * @returns {Promise} A promise for the active proxy interface.\n */\nProxyBinder.prototype.getExternal = function (port, name, definition) {\n  'use strict';\n  var proxy, api;\n  return new PromiseCompat(function (resolve, reject) {\n    if (definition) {\n      api = definition.name;\n      if (definition.provides) {\n        proxy = new Provider(definition.definition, this.manager.debug);\n      } else {\n        proxy = new Consumer(ApiInterface.bind({},\n            definition.definition),\n            this.manager.debug);\n      }\n    } else {\n      proxy = new Consumer(EventInterface, this.manager.debug);\n    }\n\n    proxy.once('start', function () {\n      var iface = proxy.getProxyInterface();\n      if (api) {\n        iface.api = api;\n      }\n      resolve({\n        port: proxy,\n        external: iface\n      });\n    });\n\n    this.manager.createLink(port, name, proxy);\n  }.bind(this));\n};\n\n/**\n * Bind the default proxy for a freedom port.\n * @method bindDefault\n * @param {Port} port The port for the proxy to communicate with.\n * @param {Api} api The API loader with API definitions.\n * @param {Object} manifest The manifest of the module to expose.\n * @param {Boolean} internal Whether the interface is for inside the module.\n * @returns {Promise} A promise for a proxy interface.\n * @private\n */\nProxyBinder.prototype.bindDefault = function (port, api, manifest, internal) {\n  'use strict';\n  var metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description\n  }, def;\n\n  if (manifest['default']) {\n    def = api.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      def = {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    if (internal && manifest.provides &&\n        manifest.provides.indexOf(manifest['default']) !== false) {\n      def.provides = true;\n    } else if (internal) {\n      api.debug.warn(\"default API not provided, \" +\n                     \"are you missing a provides key in your manifest?\");\n    }\n  }\n\n  return this.getExternal(port, 'default', def).then(\n    function (metadata, info) {\n      info.external.manifest = metadata;\n      return info;\n    }.bind(this, metadata)\n  );\n};\n\n/**\n * Get the definition for a proxy given a requested API and the manifest of\n * the module.\n * @method getAPI\n * @param {Object} manifest The manifest for the proxy.\n * @param {Api} apiProvider The registry of known APIs.\n * @param {String} api The Requested API.\n * @returns {Object} definition The definition to use for calls to getExternal.\n */\nProxyBinder.prototype.getAPI = function (manifest, apiProvider, api) {\n  'use strict';\n  if (manifest.api && manifest.api[api]) {\n    return {\n      name: api,\n      definition: manifest.api[api]\n    };\n  } else if (manifest['default']) {\n    var def = apiProvider.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      return {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    return def;\n  } else {\n    return false;\n  }\n};\n\n\nmodule.exports = ProxyBinder;\n","/*globals XMLHttpRequest,chrome */\n/*jslint indent:2,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('./util');\n\n/**\n * The Resource registry for FreeDOM.  Used to look up requested Resources,\n * and provide lookup and migration of resources.\n * @Class Resource\n * @param {Debug} debug The logger to use for debugging.\n * @constructor\n */\nvar Resource = function (debug) {\n  this.debug = debug;\n  this.files = {};\n  this.resolvers = [this.httpResolver, this.nullResolver];\n  this.contentRetrievers = {\n    'http': this.xhrRetriever,\n    'https': this.xhrRetriever,\n    'chrome-extension': this.xhrRetriever,\n    'resource': this.xhrRetriever,\n    'chrome': this.xhrRetriever,\n    'app': this.xhrRetriever,\n    'gopher': this.xhrRetriever,  // For Cordova; see http://crbug.com/513352 .\n    'manifest': this.manifestRetriever\n  };\n};\n\n/**\n * Resolve a resurce URL requested from a module.\n * @method get\n * @param {String} manifest The canonical address of the module requesting.\n * @param {String} url The resource to get.\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.get = function (manifest, url) {\n  var key = JSON.stringify([manifest, url]);\n  \n  return new PromiseCompat(function (resolve, reject) {\n    if (this.files[key]) {\n      resolve(this.files[key]);\n    } else {\n      this.resolve(manifest, url).then(function (key, resolve, address) {\n        this.files[key] = address;\n        //fdom.debug.log('Resolved ' + key + ' to ' + address);\n        resolve(address);\n      }.bind(this, key, resolve), reject);\n    }\n  }.bind(this));\n};\n\n/**\n * Get the contents of a resource.\n * @method getContents\n * @param {String} url The resource to read.\n * @returns {Promise} A promise for the resource contents.\n */\nResource.prototype.getContents = function (url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var prop;\n    if (!url) {\n      this.debug.warn(\"Asked to get contents of undefined URL.\");\n      return reject();\n    }\n    for (prop in this.contentRetrievers) {\n      if (this.contentRetrievers.hasOwnProperty(prop)) {\n        if (url.indexOf(prop + \"://\") === 0) {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        } else if (url.indexOf(\"://\") === -1 && prop === \"null\") {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        }\n      }\n    }\n    reject();\n  }.bind(this));\n};\n\n/**\n * Return a promise that resolves when the first of an array of promises\n * resolves, or rejects after all promises reject. Can be thought of as\n * the missing 'Promise.any' - race is no good, since early rejections\n * preempt a subsequent resolution.\n * @private\n * @static\n * @method FirstPromise\n * @param {Promise[]} Promises to select from\n * @returns {Promise} Promise resolving with a value from arguments.\n */\nvar firstPromise = function(promises) {\n  return new PromiseCompat(function(resolve, reject) {\n    var errors = [];\n    promises.forEach(function(promise) {\n      promise.then(resolve, function(err) {\n        errors.push(err);\n        if (errors.length === promises.length) {\n          reject(errors);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Resolve a resource using known resolvers. Unlike get, resolve does\n * not cache resolved resources.\n * @method resolve\n * @private\n * @param {String} manifest The module requesting the resource.\n * @param {String} url The resource to resolve;\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.resolve = function (manifest, url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var promises = [];\n    if (url === undefined) {\n      return reject();\n    }\n    util.eachReverse(this.resolvers, function (resolver) {\n      promises.push(new PromiseCompat(resolver.bind({}, manifest, url)));\n    }.bind(this));\n    firstPromise(promises).then(resolve, function() {\n      reject('No resolvers to handle url: ' + JSON.stringify([manifest, url]));\n    });\n  }.bind(this));\n};\n\n/**\n * Register resolvers: code that knows how to get resources\n * needed by the runtime. A resolver will be called with four\n * arguments: the absolute manifest of the requester, the\n * resource being requested, and a resolve / reject pair to\n * fulfill a promise.\n * @method addResolver\n * @param {Function} resolver The resolver to add.\n */\nResource.prototype.addResolver = function (resolver) {\n  this.resolvers.push(resolver);\n};\n\n/**\n * Register retrievers: code that knows how to load resources\n * needed by the runtime. A retriever will be called with a URL\n * to retrieve with a protocol that it is able to handle.\n * @method addRetriever\n * @param {String} proto The protocol to register for.\n * @param {Function} retriever The retriever to add.\n */\nResource.prototype.addRetriever = function (proto, retriever) {\n  if (this.contentRetrievers[proto]) {\n    this.debug.warn(\"Unwilling to override file retrieval for \" + proto);\n    return;\n  }\n  this.contentRetrievers[proto] = retriever;\n};\n\n/**\n * Register external resolvers and retreavers\n * @method register\n * @param {{\"proto\":String, \"resolver\":Function, \"retreaver\":Function}[]}\n *     resolvers The list of retreivers and resolvers.\n */\nResource.prototype.register = function (resolvers) {\n  if (!resolvers.length) {\n    return;\n  }\n\n  resolvers.forEach(function (item) {\n    if (item.resolver) {\n      this.addResolver(item.resolver);\n    } else if (item.proto && item.retriever) {\n      this.addRetriever(item.proto, item.retriever);\n    }\n  }.bind(this));\n};\n\n/**\n * Determine if a URL is an absolute URL of a given Scheme.\n * @method hasScheme\n * @static\n * @private\n * @param {String[]} protocols Whitelisted protocols\n * @param {String} URL the URL to match.\n * @returns {Boolean} If the URL is an absolute example of one of the schemes.\n */\nResource.hasScheme = function (protocols, url) {\n  var i;\n  for (i = 0; i < protocols.length; i += 1) {\n    if (url.indexOf(protocols[i] + \"://\") === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Remove './' and '../' from a URL\n * Required because Chrome Apps for Mobile (cca) doesn't understand\n * XHR paths with these relative components in the URL.\n * @method removeRelativePath\n * @param {String} url The URL to modify\n * @returns {String} url without './' and '../'\n **/\nResource.removeRelativePath = function (url) {\n  var idx = url.indexOf(\"://\") + 3,\n    stack,\n    toRemove,\n    result;\n  // Remove all instances of /./\n  url = url.replace(/\\/\\.\\//g, \"/\");\n  //Weird bug where in cca, manifest starts with 'chrome:////'\n  //This forces there to only be 2 slashes\n  while (url.charAt(idx) === \"/\") {\n    url = url.slice(0, idx) + url.slice(idx + 1, url.length);\n  }\n\n  // Advance to next /\n  idx = url.indexOf(\"/\", idx);\n  // Removing ../\n  stack = url.substr(idx + 1).split(\"/\");\n  while (stack.indexOf(\"..\") !== -1) {\n    toRemove = stack.indexOf(\"..\");\n    if (toRemove === 0) {\n      stack.shift();\n    } else {\n      stack.splice((toRemove - 1), 2);\n    }\n  }\n  \n  //Rebuild string\n  result = url.substr(0, idx);\n  for (idx = 0; idx < stack.length; idx += 1) {\n    result += \"/\" + stack[idx];\n  }\n  return result;\n};\n\n/**\n * Resolve URLs which can be accessed using standard HTTP requests.\n * @method httpResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.httpResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"http\", \"https\", \"chrome\", \"chrome-extension\", \"resource\",\n                   \"app\", \"gopher\"],\n    dirname,\n    protocolIdx,\n    pathIdx,\n    path,\n    base,\n    result;\n\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(Resource.removeRelativePath(url));\n    return true;\n  }\n  \n  if (!manifest) {\n    reject();\n    return false;\n  }\n  if (Resource.hasScheme(protocols, manifest) &&\n      url.indexOf(\"://\") === -1) {\n    dirname = manifest.substr(0, manifest.lastIndexOf(\"/\"));\n    protocolIdx = dirname.indexOf(\"://\");\n    pathIdx = protocolIdx + 3 + dirname.substr(protocolIdx + 3).indexOf(\"/\");\n    path = dirname.substr(pathIdx);\n    base = dirname.substr(0, pathIdx);\n    if (url.indexOf(\"/\") === 0) {\n      resolve(Resource.removeRelativePath(base + url));\n    } else {\n      resolve(Resource.removeRelativePath(base + path + \"/\" + url));\n    }\n    return true;\n  }\n  reject();\n};\n\n/**\n * Resolve URLs which are self-describing.\n * @method nullResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.nullResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"manifest\"];\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(url);\n    return true;\n  } else if (url.indexOf('data:') === 0) {\n    resolve(url);\n    return true;\n  }\n  reject();\n};\n\n/**\n * Retrieve manifest content from a self-descriptive manifest url.\n * These urls are used to reference a manifest without requiring subsequent,\n * potentially non-CORS requests.\n * @method manifestRetriever\n * @private\n * @param {String} manifest The Manifest URL\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.manifestRetriever = function (manifest, resolve, reject) {\n  var data;\n  try {\n    data = manifest.substr(11);\n    JSON.parse(data);\n    resolve(data);\n  } catch (e) {\n    this.debug.warn(\"Invalid manifest URL referenced:\" + manifest);\n    reject();\n  }\n};\n\n/**\n * Retrieve resource contents using an XHR request.\n * @method xhrRetriever\n * @private\n * @param {String} url The resource to fetch.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.xhrRetriever = function (url, resolve, reject) {\n  var ref = new XMLHttpRequest();\n  ref.addEventListener(\"readystatechange\", function (resolve, reject) {\n    if (ref.readyState === 4 && ref.responseText) {\n      resolve(ref.responseText);\n    } else if (ref.readyState === 4) {\n      this.debug.warn(\"Failed to load file \" + url + \": \" + ref.status);\n      reject(ref.status);\n    }\n  }.bind(this, resolve, reject), false);\n  ref.overrideMimeType(\"application/json\");\n  if (typeof navigator !== 'undefined' && navigator && navigator.userAgent &&\n      navigator.userAgent.indexOf('Chrome') !== -1 && !chrome.app.runtime) {\n    // Chrome (browser, not apps/extensions) fails to load multiple APIs\n    // from the same manifest unless they are loaded synchronously\n    ref.open(\"GET\", url, false);\n  } else {\n    // Async for all other cases, especially Chrome apps (which fail otherwise)\n    ref.open(\"GET\", url, true);\n  }\n  ref.send();\n};\n\nmodule.exports = Resource;\n","/*globals crypto, WebKitBlobBuilder, Blob, URL */\n/*globals webkitURL, Uint8Array, Uint16Array, ArrayBuffer */\n/*jslint indent:2,white:true,browser:true,node:true,sloppy:true */\n\n/**\n * Utility method used within the freedom Library.\n * @class util\n * @static\n */\nvar util = {};\n\n\n/**\n * Helper function for iterating over an array backwards. If the func\n * returns a true value, it will break out of the loop.\n * @method eachReverse\n * @static\n */\nutil.eachReverse = function(ary, func) {\n  if (ary) {\n    var i;\n    for (i = ary.length - 1; i > -1; i -= 1) {\n      if (ary[i] && func(ary[i], i, ary)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * @method hasProp\n * @static\n */\nutil.hasProp = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n/**\n * Cycles over properties in an object and calls a function for each\n * property value. If the function returns a truthy value, then the\n * iteration is stopped.\n * @method eachProp\n * @static\n */\nutil.eachProp = function(obj, func) {\n  var prop;\n  for (prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      if (func(obj[prop], prop)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Simple function to mix in properties from source into target,\n * but only if target does not already have a property of the same name.\n * This is not robust in IE for transferring methods that match\n * Object.prototype names, but the uses of mixin here seem unlikely to\n * trigger a problem related to that.\n * @method mixin\n * @static\n */\nutil.mixin = function(target, source, force) {\n  if (source) {\n    util.eachProp(source, function (value, prop) {\n      if (force || !util.hasProp(target, prop)) {\n        target[prop] = value;\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Get a unique ID.\n * @method getId\n * @static\n */\nutil.getId = function() {\n  var guid = 'guid',\n      domain = 12,\n      buffer;\n  // Chrome / Firefox.\n  if (typeof crypto === 'object' && crypto.getRandomValues) {\n    buffer = new Uint8Array(domain);\n    crypto.getRandomValues(buffer);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  // Node\n  } else if (typeof crypto === 'object' && crypto.randomBytes) {\n    buffer = crypto.randomBytes(domain);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  } else {\n    while (domain > 0) {\n      guid += '-' + Math.ceil(255 * Math.random());\n      domain -= 1;\n    }\n  }\n\n  return guid;\n};\n\n/**\n * Encode a string into a binary array buffer, by treating each character as a\n * utf16 encoded character - the native javascript encoding.\n * @method str2ab\n * @static\n * @param {String} str The string to encode.\n * @returns {ArrayBuffer} The encoded string.\n */\nutil.str2ab = function(str) {\n  var length = str.length,\n      buffer = new ArrayBuffer(length * 2), // 2 bytes for each char\n      bufferView = new Uint16Array(buffer),\n      i;\n  for (i = 0; i < length; i += 1) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n};\n\n/**\n * Convert an array buffer containing an encoded string back into a string.\n * @method ab2str\n * @static\n * @param {ArrayBuffer} buffer The buffer to unwrap.\n * @returns {String} The decoded buffer.\n */\nutil.ab2str = function(buffer) {\n  var str = '';\n  var a = new Uint16Array(buffer);\n  for (var i = 0; i < a.length; i++) {\n    str += String.fromCharCode(a[i]);\n  }\n  return str;\n};\n\n/**\n * Add 'on' and 'emit' methods to an object, which act as a light weight\n * event handling structure.\n * @class handleEvents\n * @static\n */\nutil.handleEvents = function(obj) {\n  var eventState = {\n    DEBUG_BACKREF: obj,\n    multiple: {},\n    maybemultiple: [],\n    single: {},\n    maybesingle: []\n  }, filter, push;\n\n  /**\n   * Filter a list based on a predicate. The list is filtered in place, with\n   * selected items removed and returned by the function.\n   * @method\n   * @param {Array} list The list to filter\n   * @param {Function} predicate The method to run on each item.\n   * @returns {Array} Selected items\n   */\n  filter = function(list, predicate) {\n    var ret = [], i;\n\n    if (!list || !list.length) {\n      return [];\n    }\n\n    for (i = list.length - 1; i >= 0; i -= 1) {\n      if (predicate(list[i])) {\n        ret.push(list.splice(i, 1));\n      }\n    }\n    return ret;\n  };\n\n  /**\n   * Enqueue a handler for a specific type.\n   * @method\n   * @param {String} to The queue ('single' or 'multiple') to queue on.\n   * @param {String} type The type of event to wait for.\n   * @param {Function} handler The handler to enqueue.\n   */\n  push = function(to, type, handler) {\n    if (typeof type === 'function') {\n      this['maybe' + to].push([type, handler]);\n    } else if (this[to][type]) {\n      this[to][type].push(handler);\n    } else {\n      this[to][type] = [handler];\n    }\n  };\n\n  /**\n   * Register a method to be executed when an event of a specific type occurs.\n   * @method on\n   * @param {String|Function} type The type of event to register against.\n   * @param {Function} handler The handler to run when the event occurs.\n   */\n  obj.on = push.bind(eventState, 'multiple');\n\n  /**\n   * Register a method to be execute the next time an event occurs.\n   * @method once\n   * @param {String|Function} type The type of event to wait for.\n   * @param {Function} handler The handler to run the next time a matching event\n   *     is raised.\n   */\n  obj.once = push.bind(eventState, 'single');\n\n  /**\n   * Emit an event on this object.\n   * @method emit\n   * @param {String} type The type of event to raise.\n   * @param {Object} data The payload of the event.\n   */\n  obj.emit = function(type, data) {\n    var i, queue;\n    // Note that registered handlers may stop events on the object, by calling\n    // this.off(). As such, the presence of these keys must be checked on each\n    // iteration of the relevant loops.\n    for (i = 0; this.multiple[type] &&\n         i < this.multiple[type].length; i += 1) {\n      if (this.multiple[type][i](data) === false) {\n        return;\n      }\n    }\n    if (this.single[type]) {\n      queue = this.single[type];\n      this.single[type] = [];\n      for (i = 0; i < queue.length; i += 1) {\n        queue[i](data);\n      }\n    }\n    for (i = 0; i < this.maybemultiple.length; i += 1) {\n      if (this.maybemultiple[i][0](type, data)) {\n        this.maybemultiple[i][1](data);\n      }\n    }\n    for (i = this.maybesingle.length - 1; i >= 0; i -= 1) {\n      if (this.maybesingle[i][0](type, data)) {\n        queue = this.maybesingle.splice(i, 1);\n        queue[0][1](data);\n      }\n    }\n  }.bind(eventState);\n\n  /**\n   * Remove an event handler\n   * @method off\n   * @param {String} type The type of event to remove.\n   * @param {Function?} handler The handler to remove.\n   */\n  obj.off = function(type, handler) {\n    if (!type) {\n      delete this.DEBUG_BACKREF;\n      this.multiple = {};\n      this.maybemultiple = [];\n      this.single = {};\n      this.maybesingle = [];\n      return;\n    }\n\n    if (typeof type === 'function') {\n      filter(this.maybesingle, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n      filter(this.maybemultiple, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n    }\n\n    if (!handler) {\n      delete this.multiple[type];\n      delete this.single[type];\n    } else {\n      filter(this.multiple[type], function(item) {\n        return item === handler;\n      });\n      filter(this.single[type], function(item) {\n        return item === handler;\n      });\n    }\n  }.bind(eventState);\n};\n\n/**\n * When run without a window, or specifically requested.\n * Note: Declaration can be redefined in forceModuleContext below.\n * @method isModuleContext\n * @for util\n * @static\n */\n/*!@preserve StartModuleContextDeclaration*/\nutil.isModuleContext = function() {\n  return (typeof document === 'undefined');\n};\n\n/**\n * Get a Blob object of a string.\n * Polyfills implementations which don't have a current Blob constructor, like\n * phantomjs.\n * @method getBlob\n * @static\n */\nutil.getBlob = function(data, type) {\n  if (typeof Blob !== 'function' && typeof WebKitBlobBuilder !== 'undefined') {\n    var builder = new WebKitBlobBuilder();\n    builder.append(data);\n    return builder.getBlob(type);\n  } else {\n    return new Blob([data], {type: type});\n  }\n};\n\n/**\n * Find all scripts on the given page.\n * @method scripts\n * @static\n */\nutil.scripts = function(global) {\n  return global.document.getElementsByTagName('script');\n};\n\nmodule.exports = util;\n","/*jslint node:true*/\n\nvar providers = [\n  require('../../providers/core/core.unprivileged'),\n  require('../../providers/core/core.echo'),\n  require('../../providers/core/core.console'),\n  require('../../providers/core/core.crypto'),\n  require('../../providers/core/core.peerconnection'),\n  require('../../providers/core/core.rtcpeerconnection'),\n  require('../../providers/core/core.rtcdatachannel'),\n  require('../../providers/core/core.storage'),\n  require('../../providers/core/core.view'),\n  require('../../providers/core/core.oauth'),\n  require('../../providers/core/core.websocket'),\n  require('../../providers/core/core.xhr'),\n  require('../../providers/core/core.battery')\n];\n\nfunction getFreedomScript() {\n  'use strict';\n  var script;\n  if (window.document.currentScript) {\n    // New browser API\n    script = window.document.currentScript.src;\n  } else if (document.readyState !== \"complete\" &&\n             document.readyState !== \"loaded\") {\n    // Included in HTML or through document.write\n    script = window.document.getElementsByTagName('script');\n    script = script[script.length - 1].src;\n  } else {\n    // Loaded through dom manipulation or async.\n    script = document.querySelector(\n      \"script[src*='freedom.js'],script[src*='freedom-']\"\n    );\n    if (script.length !== 1) {\n      console.error(\"Could not determine freedom.js script tag.\");\n    }\n    script = script[0].src;\n  }\n  return script;\n}\n\nif (typeof window !== 'undefined') {\n  window.freedom = require('../entry').bind({}, {\n    location: window.location.href,\n    portType: require('../link/worker'),\n    source: getFreedomScript(),\n    providers: providers,\n    oauth: [\n      require('../../providers/oauth/oauth.localpageauth'),\n      require('../../providers/oauth/oauth.remotepageauth')\n    ]\n  });\n} else {\n  require('../entry')({\n    isModule: true,\n    portType: require('../link/worker'),\n    providers: providers,\n    global: global\n  });\n}\n"]}