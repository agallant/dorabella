{"version":3,"sources":["../build/node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","../build/dist/bundle.compiled.js","../build/node_modules/es6-promise/dist/es6-promise.js","../build/node_modules/grunt-browserify/node_modules/browserify/node_modules/process/browser.js","../build/node_modules/webrtc-adapter/adapter.js","../build/providers/core/core.console.js","../build/providers/core/core.crypto.js","../build/providers/core/core.echo.js","../build/providers/core/core.oauth.js","../build/providers/core/core.peerconnection.js","../build/providers/core/core.rtcdatachannel.js","../build/providers/core/core.rtcpeerconnection.js","../build/providers/core/core.storage.js","../build/providers/core/core.unprivileged.js","../build/providers/core/core.view.js","../build/providers/core/core.websocket.js","../build/providers/core/core.xhr.js","../build/providers/oauth/oauth.localpageauth.js","../build/providers/oauth/oauth.remotepageauth.js","../build/src/api.js","../build/src/bundle.js","../build/src/consumer.js","../build/src/debug.js","../build/src/entry.js","../build/src/hub.js","../build/src/link.js","../build/src/link/worker.js","../build/src/manager.js","../build/src/module.js","../build/src/moduleinternal.js","../build/src/policy.js","../build/src/provider.js","../build/src/proxy/apiInterface.js","../build/src/proxy/eventInterface.js","../build/src/proxybinder.js","../build/src/resource.js","../build/src/util.js","../build/src/util/workerEntry.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","name","api","log","type","value","debug","info","warn","error","getRandomBytes","ret","setup","send","message","createChannel","channel","identifier","bindChannel","getId","getLogger","initiateOAuth","redirect","state","err","errcode","launchAuthFlow","channelLabel","text","binary","buffer","onReceived","openDataChannel","closeDataChannel","onOpenDataChannel","channelId","onCloseDataChannel","getBufferedAmount","getInfo","createOffer","offerToReceiveVideo","offerToReceiveAudio","voiceActivityDetection","iceRestart","sdp","close","onClose","constructor","getLabel","getOrdered","getMaxPacketLifeTime","getMaxRetransmits","getProtocol","getNegotiated","getReadyState","onopen","onerror","onclose","onmessage","getBinaryType","setBinaryType","sendBuffer","iceServers","urls","username","credential","iceTransports","peerIdentity","createAnswer","setLocalDescription","getLocalDescription","setRemoteDescription","getRemoteDescription","getSignalingState","updateIce","addIceCandidate","candidate","sdpMid","sdpMLineIndex","getIceGatheringState","getIceConnectionState","getConfiguration","getLocalStreams","getRemoteStreams","getStreamById","addStream","removeStream","createDataChannel","ordered","maxPacketLifeTime","maxRetransmits","protocol","negotiated","id","ondatachannel","getStats","onnegotiationneeded","onicecandidate","onsignalingstatechange","onaddstream","stream","onremovestream","oniceconnectionstatechange","keys","get","set","remove","clear","connected","localAddress","localPort","peerAddress","peerPort","ERRCODE","SUCCESS","UNKNOWN","ALREADY_CONNECTED","INVALID_ARGUMENT","TIMED_OUT","NOT_CONNECTED","NETWORK_CHANGED","CONNECTION_CLOSED","CONNECTION_RESET","CONNECTION_REFUSED","CONNECTION_FAILED","NAME_NOT_RESOLVED","INTERNET_DISCONNECTED","ADDRESS_INVALID","ADDRESS_UNREACHABLE","HOST_UNREACHABLE","onDisconnect","connect","secure","pause","resume","prepareSecure","write","onData","data","listen","onConnection","socket","host","port","ALREADY_BOUND","SNED_FAILED","bind","sendTo","destroy","resultCode","address","show","isSecure","postMessage","onMessage","onOpen","onError","reason","wasClean","open","string","abort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","getResponse","object","getResponseText","getResponseURL","getResponseType","setResponseType","getStatus","getStatusText","getTimeout","setTimeout","getWithCredentials","setWithCredentials","onloadstart","lengthComputable","loaded","total","onprogress","onabort","onload","ontimeout","onloadend","onreadystatechange","onuploadloadstart","onuploadprogress","onuploadabort","onuploaderror","onuploadload","onuploadtimeout","onuploadloadend","onuploadreadystatechange","OFFLINE","MALFORMEDPARAMETERS","LOGIN_BADCREDENTIALS","LOGIN_FAILEDCONNECTION","LOGIN_ALREADYONLINE","LOGIN_OAUTHERROR","SEND_INVALIDDESTINATION","STATUS","ONLINE","ONLINE_WITH_OTHER_APP","login","agent","version","url","interactive","rememberLogin","userId","clientId","status","lastUpdated","lastSeen","clearCachedCredentials","getClients","getUsers","sendMessage","logout","from","onUserProfile","imageData","onClientState","scope","SESSION","DEVICE_LOCAL","USER_LOCAL","SHARED","tag","$$utils$$objectOrFunction","x","$$utils$$isFunction","$$utils$$isMaybeThenable","$$utils$$F","$$asap$$useNextTick","process","nextTick","$$asap$$flush","$$asap$$useMutationObserver","iterations","observer","$$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","$$asap$$useMessageChannel","MessageChannel","port1","port2","$$asap$$useSetTimeout","$$asap$$len","callback","$$asap$$queue","arg","undefined","$$$internal$$noop","$$$internal$$selfFullfillment","TypeError","$$$internal$$cannotReturnOwn","$$$internal$$getThen","promise","then","$$$internal$$GET_THEN_ERROR","$$$internal$$tryThen","fulfillmentHandler","rejectionHandler","$$$internal$$handleForeignThenable","thenable","$$asap$$default","sealed","$$$internal$$resolve","$$$internal$$fulfill","$$$internal$$reject","_label","$$$internal$$handleOwnThenable","_state","$$$internal$$FULFILLED","_result","$$$internal$$REJECTED","$$$internal$$subscribe","$$$internal$$handleMaybeThenable","maybeThenable","$$$internal$$publishRejection","_onerror","$$$internal$$publish","$$$internal$$PENDING","_subscribers","parent","child","onFulfillment","onRejection","subscribers","settled","detail","$$$internal$$invokeCallback","$$$internal$$ErrorObject","this","$$$internal$$tryCatch","$$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","$$$internal$$initializePromise","resolver","$$$enumerator$$Enumerator","Constructor","input","abortOnReject","label","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","_enumerate","_validationError","$$es6$promise$promise$$needsResolver","$$es6$promise$promise$$needsNew","$$es6$promise$promise$$Promise","_id","$$es6$promise$promise$$counter","$$utils$$_isArray","Array","isArray","Object","prototype","toString","$$asap$$scheduleFlush","$$utils$$isArray","Date","now","getTime","create","arguments","$$asap$$browserGlobal","window","MutationObserver","WebKitMutationObserver","$$asap$$isWorker","Uint8ClampedArray","importScripts","$$$enumerator$$default","_eachEntry","entry","c","_settledAt","_willSettleAt","resolve","_makeResult","enumerator","$$promise$all$$default","entries","$$promise$race$$default","$$promise$resolve$$default","$$promise$reject$$default","$$es6$promise$promise$$default","all","race","reject","result","catch","$$es6$promise$polyfill$$default","local","global","self","es6PromiseSupport","Promise","es6$promise$umd$$ES6Promise","polyfill","define","drainQueue","draining","currentQueue","len","queue","noop","fun","push","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","myRTCPeerConnection","myRTCSessionDescription","myRTCIceCandidate","renameIceURLs","config","forEach","server","fixChromeStatsResponse","response","standardReport","reports","report","standardStats","timestamp","names","stat","sessionHasData","desc","hasData","prefix","split","line","slice","RTCPeerConnection","mozRTCPeerConnection","configuration","constraints","pc","dataEnabled","boundCreateDataChannel","dataChannelDict","dc","localDescription","remoteDescription","event","Event","webkitRTCPeerConnection","boundGetStats","selector","successCallback","failureCallback","successCallbackWrapper","chromeStatsResponse","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","util","Logger_console","cap","level","console","handleEvents","print","severity","source","msg","arr","freedom","unshift","maxLogLevel","freedomDump","dump","toUpperCase","join","apply","continuation","provider","flags","Core_crypto","dispatchEvent","number","Uint8Array","crypto","getRandomValues","Echo_unprivileged","mod","Core","core","controlChannel","request","proxy","chan","m","str","OAuth","handlers","ongoing","register","boundHandlers","reset","redirectURIs","authUrl","stateObj","hasOwnProperty","SimpleDataPeer","peerName","stunServers","dataChannelCallbacks","mocks","channels","onConnectedQueue","optional","DtlsSrtpKeyAgreement","sendSignalMessage","addEventListener","onIceCallback","onNegotiationNeeded","onDataChannel","signalingState","pcState","SimpleDataPeerState","CONNECTED","map","DISCONNECTED","PeerConnection","portModule","Math","random","freedomModule","signallingChannel","peer","CONNECTING","constaints","runWhenConnected","func","dataChannel","addDataChannel","negotiateConnection","closeChannel","bufferedAmount","setSendSignalMessage","sendSignalMessageFn","handleSignalMessage","messageText","ice_candidate","json","JSON","parse","onDescription","isClosed","callbacks","readyState","onOpenFn","onCloseFn","onMessageFn","onErrorFn","description","stringify","logSuccess","logFail","onSignalingStateChange","signallingChannelId","initiateConnection","openDataChannelContinuation","ArrayBuffer","Blob","success","sendInfo","objToSend","eventNames","unAttachedChannels","pendingEvents","allocateChannel","eventName","handler","currentHandler","RTCDataChannelAdapter","dispatchEvents","Connection","drainPendingEvents","manageEvents","attach","binaryType","Components","myData","utils","cloneInto","allocate","adapter","PromiseCompat","DataChannel","RTCPeerConnectionAdapter","connection","events","iceGatheringState","iceConnectionState","style","Storage_unprivileged","localStorage","key","val","getItem","setItem","removeItem","EventInterface","Consumer","Core_unprivileged","manager","unboundChannels","contextId","moduleInternal","getChannel","isInModule","delegate","flow","iface","getProxyInterface","doClose","remote","reply","manifest","toBind","newSource","createLink","toDelegate","p","cb","hub","getDestination","getInterface","dependencyName","registerId","setId","Core_View","listener","active","page","resources","root","frame","container","body","getElementById","createElement","width","height","display","appendChild","setAttribute","border","background","src","contentWindow","removeChild","removeEventListener","views","toResolve","main","files","concat","fname","resource","manifestId","PageProvider","WSHandle","nodeStyle","WS","protocols","WSImplementation","isNode","WebSocket","websocket","SyntaxError","toSend","errorCode","setSocket","impl","XhrClass","XhrProvider","XMLHttpRequest","_dispatchEvent","_xhr","_events","_setupListeners","method","async","user","password","header","mime","responseType","responseText","responseURL","statusText","timeout","withCredentials","wc","upload","setImpl","oAuthRedirectId","loadedOnStartup","location","href","indexOf","LocalPageAuth","listeners","here","pathname","storageListener","RemotePageAuth","Api","apis","providers","waiters","definition","args","inst","getCore","provideCore","cleanup","prop","doReject","waiter","Bundle","interfaces","registry","bundle","interfaceCls","nextId","ifaces","closeHandlers","errorHandlers","emits","reverse","emitChannel","to","teardown","eachProp","Iface","getInterfaceConstructor","getListener","instance","obj","binder","doEmit","messageToPortable","template","externals","conform","portableToMessage","streams","separate","String","Number","Boolean","makeArrayBuffer","thing","DataView","recursiveFreezeObject","k","defineProperty","writable","enumerable","Debug","LEVELS","setLogger","logger","format","argarr","alist","quiet","splice","getLoggingShim","asyncMethod","methods","backing","item","mthd","freedomGlobal","Hub","Manager","Policy","ProxyBinder","Resource","getGlobal","context","policy","link","Port","site_cfg","moduleContext","isModule","isModuleContext","mixin","substr","resolvers","portType","fallbackLogger","getIface","canonical_manifest","bindDefault","external","apps","routes","destination","app","trace","action","getSource","force","deregister","install","route","generateRoute","uninstall","Link","deliverMessage","start","addErrorHandler","emitMessage","WorkerLink","setupListener","setupWorker","stop","onMsg","worker","Worker","terminate","ModuleInternal","controlFlows","dataFlows","reverseFlowMap","origin","reverseFlow","overrideDest","addResolver","addRetriever","service","removeLink","getPort","portId","lineage","destName","toDest","outgoingName","outgoing","rflow","forgetFlow","Provider","Module","manifestURL","creator","externalPortMap","internalPortMap","dependantChannels","started","dependencies","deregisterFlow","provides","modInternal","internal","loadLinks","appId","addDependency","dep","updateEnv","permissions","metadata","icon","manifests","pendingPorts","requests","unboundPorts","updateManifest","defaultPort","externalChannel","objects","mapProxies","generateEnv","loadScripts","script","items","def","exp","manifestPredicate","onManifest","getExternal","CoreProv","provideAsynchronous","getLoggerSync","getAPI","proxies","seen","scripts","scripts_count","load","importer","next","tryLoad","stack","runtimes","policies","pending","add","defaultPolicy","defaultConstraints","isolation","placement","loadManifest","overlay","runtime","findDestination","isRunning","fullMatch","okay","j","modules","getContents","modFingerprint","base","mode","synchronous","providerCls","asynchronous","promises","getProvider","onmsg","sanityCheck","provideSynchronous","prov","providePromises","ids","BoundClass","ev","returnPromise","reqId","e1","e2","e3","ApiInterface","inflight","emitter","thisReq","reckless","apiProvider","httpResolver","nullResolver","contentRetrievers","http","xhrRetriever","https","chrome-extension","chrome","manifestRetriever","firstPromise","errors","eachReverse","proto","retriever","hasScheme","removeRelativePath","toRemove","idx","replace","charAt","shift","dirname","protocolIdx","pathIdx","path","lastIndexOf","ref","ary","hasProp","target","guid","domain","randomBytes","ceil","str2ab","bufferView","Uint16Array","charCodeAt","ab2str","fromCharCode","filter","eventState","DEBUG_BACKREF","multiple","maybemultiple","single","maybesingle","list","predicate","getBlob","WebKitBlobBuilder","builder","append","getElementsByTagName","getFreedomScript","currentScript","querySelector","oauth"],"mappings":";;;;;;;;;;;;;;;;;;;;;CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,KAAAJ,EAAAI,GAAA,IAAAE,GAAA,kBAAAC,iBAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,MAAAI,EAAA,MAAAA,GAAAJ,GAAA,MAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,UAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,IAAAF,IAAAa,IAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,OAAAL,GAAA,kBAAAD,kBAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,GCAAA,EAAAJ,UAAAK,KAAA,UAAAC,KAAAC,KAAAC,KAAA,SAAAC,OAAA,oBAAAC,OAAAF,KAAA,SAAAC,OAAA,oBAAAE,MAAAH,KAAA,SAAAC,OAAA,oBAAAG,MAAAJ,KAAA,SAAAC,OAAA,oBAAAI,OAAAL,KAAA,SAAAC,OAAA,uBAAAJ,KAAA,eAAAC,KAAAC,KAAAC,KAAA,SAAAC,OAAA,oBAAAC,OAAAF,KAAA,SAAAC,OAAA,oBAAAE,MAAAH,KAAA,SAAAC,OAAA,oBAAAG,MAAAJ,KAAA,SAAAC,OAAA,oBAAAI,OAAAL,KAAA,SAAAC,OAAA,uBAAAJ,KAAA,cAAAC,KAAAQ,gBAAAN,KAAA,SAAAC,OAAA,UAAAM,IAAA,aAAAV,KAAA,YAAAC,KAAAU,OAAAR,KAAA,SAAAC,OAAA,WAAAQ,MAAAT,KAAA,SAAAC,OAAA,WAAAS,SAAAV,KAAA,QAAAC,MAAA,aAAAJ,KAAA,OAAAC,KAAAa,eAAAX,KAAA,SAAAC,SAAAM,KAAAK,QAAA,QAAAC,WAAA,WAAAC,aAAAd,KAAA,SAAAC,OAAA,UAAAM,IAAA,SAAAQ,OAAAf,KAAA,SAAAC,SAAAM,KAAA,mBAAAS,WAAAhB,KAAA,SAAAC,OAAA,UAAAM,IAAA,SAAArB,SAAAc,KAAA,SAAAC,OAAA,mBAAAM,IAAA,YAAAV,KAAA,aAAAC,KAAAmB,eAAAjB,KAAA,SAAAC,QAAA,mBAAAM,KAAAW,SAAA,SAAAC,MAAA,UAAAC,KAAAC,QAAA,SAAAX,QAAA,WAAAY,gBAAAtB,KAAA,SAAAC,OAAA,UAAAiB,SAAA,SAAAC,MAAA,WAAAZ,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,cAAAb,KAAA,sBAAAC,KAAAU,OAAAR,KAAA,SAAAC,OAAA,iDAAAQ,MAAAT,KAAA,SAAAC,QAAAsB,aAAA,SAAAC,KAAA,SAAAC,OAAA,OAAAC,OAAA,YAAAC,YAAA3B,KAAA,QAAAC,OAAAsB,aAAA,SAAAC,KAAA,SAAAC,OAAA,OAAAC,OAAA,WAAAE,iBAAA5B,KAAA,SAAAC,OAAA,WAAA4B,kBAAA7B,KAAA,SAAAC,OAAA,WAAA6B,mBAAA9B,KAAA,QAAAC,OAAA8B,UAAA,WAAAC,oBAAAhC,KAAA,QAAAC,OAAA8B,UAAA,WAAAE,mBAAAjC,KAAA,SAAAC,OAAA,UAAAM,IAAA,UAAA2B,SAAAlC,KAAA,SAAAC,SAAAM,IAAA,UAAA4B,aAAAnC,KAAA,SAAAC,QAAAmC,oBAAA,SAAAC,oBAAA,SAAAC,uBAAA,UAAAC,WAAA,YAAAhC,KAAAP,KAAA,SAAAwC,IAAA,WAAAC,OAAAzC,KAAA,SAAAC,UAAAyC,SAAA1C,KAAA,QAAAC,aAAAJ,KAAA,sBAAAC,KAAA6C,aAAA1C,OAAA,WAAA2C,UAAA5C,KAAA,SAAAC,SAAAM,IAAA,UAAAsC,YAAA7C,KAAA,SAAAC,SAAAM,IAAA,WAAAuC,sBAAA9C,KAAA,SAAAC,SAAAM,IAAA,UAAAwC,mBAAA/C,KAAA,SAAAC,SAAAM,IAAA,UAAAyC,aAAAhD,KAAA,SAAAC,SAAAM,IAAA,UAAA0C,eAAAjD,KAAA,SAAAC,SAAAM,IAAA,WAAAQ,OAAAf,KAAA,SAAAC,SAAAM,IAAA,UAAA2C,eAAAlD,KAAA,SAAAC,SAAAM,IAAA,UAAA0B,mBAAAjC,KAAA,SAAAC,SAAAM,IAAA,UAAA4C,QAAAnD,KAAA,QAAAC,UAAAmD,SAAApD,KAAA,QAAAC,UAAAoD,SAAArD,KAAA,QAAAC,UAAAwC,OAAAzC,KAAA,SAAAC,UAAAqD,WAAAtD,KAAA,QAAAC,OAAAuB,KAAA,SAAAE,OAAA,WAAA6B,eAAAvD,KAAA,SAAAC,SAAAM,IAAA,UAAAiD,eAAAxD,KAAA,SAAAC,OAAA,WAAAQ,MAAAT,KAAA,SAAAC,OAAA,WAAAwD,YAAAzD,KAAA,SAAAC,OAAA,cAAAJ,KAAA,yBAAAC,KAAA6C,aAAA1C,QAAAyD,YAAA,SAAAC,MAAA,kBAAAC,SAAA,SAAAC,WAAA,WAAAC,cAAA,SAAAC,aAAA,YAAA5B,aAAAnC,KAAA,SAAAC,QAAAoC,oBAAA,SAAAD,oBAAA,SAAAG,WAAA,UAAAD,uBAAA,YAAA/B,KAAAP,KAAA,SAAAwC,IAAA,WAAAwB,cAAAhE,KAAA,SAAAC,SAAAM,KAAAP,KAAA,SAAAwC,IAAA,WAAAyB,qBAAAjE,KAAA,SAAAC,QAAAD,KAAA,SAAAwC,IAAA,YAAA0B,qBAAAlE,KAAA,SAAAC,SAAAM,KAAAP,KAAA,SAAAwC,IAAA,WAAA2B,sBAAAnE,KAAA,SAAAC,QAAAD,KAAA,SAAAwC,IAAA,WAAAjC,QAAA6D,sBAAApE,KAAA,SAAAC,SAAAM,KAAAP,KAAA,SAAAwC,IAAA,WAAA6B,mBAAArE,KAAA,SAAAC,SAAAM,IAAA,UAAA+D,WAAAtE,KAAA,SAAAC,QAAAyD,YAAA,SAAAC,MAAA,kBAAAC,SAAA,SAAAC,WAAA,WAAAC,cAAA,SAAAC,aAAA,WAAAxD,QAAAgE,iBAAAvE,KAAA,SAAAC,QAAAuE,UAAA,SAAAC,OAAA,SAAAC,cAAA,WAAAnE,QAAAoE,sBAAA3E,KAAA,SAAAC,SAAAM,IAAA,UAAAqE,uBAAA5E,KAAA,SAAAC,SAAAM,IAAA,UAAAsE,kBAAA7E,KAAA,SAAAC,SAAAM,KAAAmD,YAAA,SAAAC,MAAA,kBAAAC,SAAA,SAAAC,WAAA,WAAAC,cAAA,SAAAC,aAAA,WAAAe,iBAAA9E,KAAA,SAAAC,SAAAM,KAAA,mBAAAwE,kBAAA/E,KAAA,SAAAC,SAAAM,KAAA,mBAAAyE,eAAAhF,KAAA,SAAAC,OAAA,UAAAM,IAAA,UAAA0E,WAAAjF,KAAA,SAAAC,OAAA,UAAAM,QAAA2E,cAAAlF,KAAA,SAAAC,OAAA,UAAAM,QAAAkC,OAAAzC,KAAA,SAAAC,SAAAM,QAAA4E,mBAAAnF,KAAA,SAAAC,OAAA,UAAAmF,QAAA,UAAAC,kBAAA,SAAAC,eAAA,SAAAC,SAAA,SAAAC,WAAA,UAAAC,GAAA,WAAAlF,IAAA,UAAAmF,eAAA1F,KAAA,QAAAC,OAAAW,QAAA,WAAA+E,UAAA3F,KAAA,SAAAC,OAAA,UAAAM,IAAA,UAAAqF,qBAAA5F,KAAA,QAAAC,UAAA4F,gBAAA7F,KAAA,QAAAC,OAAAuE,qBAAA,SAAAC,OAAA,SAAAC,cAAA,YAAAoB,wBAAA9F,KAAA,QAAAC,UAAA8F,aAAA/F,KAAA,QAAAC,OAAA+F,OAAA,WAAAC,gBAAAjG,KAAA,QAAAC,OAAA+F,OAAA,WAAAE,4BAAAlG,KAAA,QAAAC,aAAAJ,KAAA,eAAAC,KAAAqG,MAAAnG,KAAA,SAAAC,SAAAM,KAAA,mBAAA6F,KAAApG,KAAA,SAAAC,OAAA,UAAAM,IAAA,UAAA8F,KAAArG,KAAA,SAAAC,OAAA,mBAAAM,IAAA,UAAA+F,QAAAtG,KAAA,SAAAC,OAAA,UAAAM,IAAA,UAAAgG,OAAAvG,KAAA,SAAAC,aAAAJ,KAAA,iBAAAC,KAAA6C,aAAA1C,OAAA,WAAAiC,SAAAlC,KAAA,SAAAC,SAAAM,KAAAiG,UAAA,UAAAC,aAAA,SAAAC,UAAA,SAAAC,YAAA,SAAAC,SAAA,WAAAC,SAAA7G,KAAA,WAAAC,OAAA6G,QAAA,WAAAC,QAAA,gBAAAC,kBAAA,2BAAAC,iBAAA,mBAAAC,UAAA,YAAAC,cAAA,uBAAAC,gBAAA,kBAAAC,kBAAA,+BAAAC,iBAAA,mBAAAC,mBAAA,qBAAAC,kBAAA,oBAAAC,kBAAA,oBAAAC,sBAAA,2BAAAC,gBAAA,kBAAAC,oBAAA,mBAAAC,iBAAA,4CAAApF,OAAAzC,KAAA,SAAAC,SAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAAoH,cAAA9H,KAAA,QAAAC,OAAAoB,QAAA,SAAAX,QAAA,WAAAqH,SAAA/H,KAAA,SAAAC,OAAA,mBAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAAsH,QAAAhI,KAAA,SAAAC,SAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAAuH,OAAAjI,KAAA,SAAAC,SAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAAwH,QAAAlI,KAAA,SAAAC,SAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAAyH,eAAAnI,KAAA,SAAAC,SAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAA0H,OAAApI,KAAA,SAAAC,OAAA,UAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAA2H,QAAArI,KAAA,QAAAC,OAAAqI,KAAA,WAAAC,QAAAvI,KAAA,SAAAC,OAAA,mBAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAA8H,cAAAxI,KAAA,QAAAC,OAAAwI,OAAA,SAAAC,KAAA,SAAAC,KAAA,cAAA9I,KAAA,iBAAAC,KAAA+G,SAAA7G,KAAA,WAAAC,OAAA6G,QAAA,WAAAC,QAAA,gBAAA6B,cAAA,uBAAA3B,iBAAA,mBAAAG,gBAAA,kBAAAyB,YAAA,gBAAAC,MAAA9I,KAAA,SAAAC,OAAA,mBAAAM,OAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAAwB,SAAAlC,KAAA,SAAAC,SAAAM,KAAAkG,aAAA,SAAAC,UAAA,WAAAqC,QAAA/I,KAAA,SAAAC,OAAA,4BAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAAsI,SAAAhJ,KAAA,SAAAC,UAAAoI,QAAArI,KAAA,QAAAC,OAAAgJ,WAAA,SAAAC,QAAA,SAAAP,KAAA,SAAAL,KAAA,cAAAzI,KAAA,YAAAC,KAAAqJ,MAAAnJ,KAAA,SAAAC,OAAA,WAAAmJ,UAAApJ,KAAA,SAAAC,SAAAM,IAAA,WAAAkC,OAAAzC,KAAA,SAAAC,UAAAoJ,aAAArJ,KAAA,SAAAC,OAAA,WAAAS,SAAAV,KAAA,QAAAC,MAAA,UAAAyC,SAAA1C,KAAA,QAAAC,aAAAJ,KAAA,iBAAAC,KAAA6C,aAAA1C,OAAA,8BAAAQ,MAAAT,KAAA,SAAAC,QAAAuB,KAAA,SAAAC,OAAA,OAAAC,OAAA,WAAAN,KAAAC,QAAA,SAAAX,QAAA,WAAAwC,eAAAlD,KAAA,SAAAC,SAAAM,IAAA,UAAA0B,mBAAAjC,KAAA,SAAAC,OAAA,UAAAM,IAAA,UAAAkC,OAAAzC,KAAA,SAAAC,OAAA,mBAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAA4I,WAAAtJ,KAAA,QAAAC,OAAAuB,KAAA,SAAAC,OAAA,OAAAC,OAAA,WAAA6H,QAAAvJ,KAAA,QAAAC,UAAAuJ,SAAAxJ,KAAA,QAAAC,OAAAoB,QAAA,SAAAX,QAAA,WAAAgC,SAAA1C,KAAA,QAAAC,OAAAX,KAAA,SAAAmK,OAAA,SAAAC,SAAA,eAAA7J,KAAA,WAAAC,KAAA6J,MAAA3J,KAAA,SAAAC,OAAA,+CAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAAD,MAAAT,KAAA,SAAAC,QAAA2J,OAAA,SAAAlI,OAAA,YAAAmI,OAAA7J,KAAA,SAAAC,UAAA6J,mBAAA9J,KAAA,SAAAC,OAAA,UAAAM,IAAA,UAAAwJ,uBAAA/J,KAAA,SAAAC,SAAAM,IAAA,UAAAyJ,kBAAAhK,KAAA,SAAAC,OAAA,oBAAAgK,kBAAAjK,KAAA,SAAAC,OAAA,WAAAiD,eAAAlD,KAAA,SAAAC,SAAAM,IAAA,UAAA2J,aAAAlK,KAAA,SAAAC,SAAAM,KAAAqJ,OAAA,SAAAlI,OAAA,SAAAyI,OAAA,WAAAC,iBAAApK,KAAA,SAAAC,SAAAM,IAAA,UAAA8J,gBAAArK,KAAA,SAAAC,SAAAM,IAAA,UAAA+J,iBAAAtK,KAAA,SAAAC,SAAAM,IAAA,UAAAgK,iBAAAvK,KAAA,SAAAC,OAAA,WAAAuK,WAAAxK,KAAA,SAAAC,SAAAM,IAAA,UAAAkK,eAAAzK,KAAA,SAAAC,SAAAM,IAAA,UAAAmK,YAAA1K,KAAA,SAAAC,SAAAM,IAAA,UAAAoK,YAAA3K,KAAA,SAAAC,OAAA,WAAA2K,oBAAA5K,KAAA,SAAAC,SAAAM,IAAA,WAAAsK,oBAAA7K,KAAA,SAAAC,OAAA,YAAA6K,aAAA9K,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAC,YAAAlL,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAE,SAAAnL,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAA7H,SAAApD,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAG,QAAApL,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAI,WAAArL,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAK,WAAAtL,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAM,oBAAAvL,KAAA,QAAAC,UAAAuL,mBAAAxL,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAQ,kBAAAzL,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAS,eAAA1L,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAU,eAAA3L,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAW,cAAA5L,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAY,iBAAA7L,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAa,iBAAA9L,KAAA,QAAAC,OAAA8K,iBAAA,UAAAC,OAAA,SAAAC,MAAA,WAAAc,0BAAA/L,KAAA,QAAAC,aAAAJ,KAAA,SAAAC,KAAA+G,SAAA7G,KAAA,WAAAC,OAAA6G,QAAA,WAAAC,QAAA,gBAAAiF,QAAA,4BAAAC,oBAAA,2BAAAC,qBAAA,mCAAAC,uBAAA,6BAAAC,oBAAA,4BAAAC,iBAAA,cAAAC,wBAAA,2CAAAC,QAAAvM,KAAA,WAAAC,OAAA+L,QAAA,UAAAQ,OAAA,SAAAC,sBAAA,0BAAAC,OAAA1M,KAAA,SAAAC,QAAA0M,MAAA,SAAAC,QAAA,SAAAC,IAAA,SAAAC,YAAA,UAAAC,cAAA,YAAAxM,KAAAyM,OAAA,SAAAC,SAAA,SAAAC,OAAA,SAAAC,YAAA,SAAAC,SAAA,UAAAhM,KAAAC,QAAA,SAAAX,QAAA,WAAA2M,wBAAArN,KAAA,SAAAC,UAAAqN,YAAAtN,KAAA,SAAAC,SAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA6M,UAAAvN,KAAA,SAAAC,SAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA8M,aAAAxN,KAAA,SAAAC,OAAA,mBAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAA+M,QAAAzN,KAAA,SAAAC,SAAAmB,KAAAC,QAAA,SAAAX,QAAA,WAAA4I,WAAAtJ,KAAA,QAAAC,OAAAyN,MAAAV,OAAA,SAAAC,SAAA,SAAAC,OAAA,SAAAC,YAAA,SAAAC,SAAA,UAAA1M,QAAA,WAAAiN,eAAA3N,KAAA,QAAAC,OAAA+M,OAAA,SAAAG,YAAA,SAAAtN,KAAA,SAAAgN,IAAA,SAAAe,UAAA,WAAAC,eAAA7N,KAAA,QAAAC,OAAA+M,OAAA,SAAAC,SAAA,SAAAC,OAAA,SAAAC,YAAA,SAAAC,SAAA,cAAAvN,KAAA,UAAAC,KAAAgO,OAAA9N,KAAA,WAAAC,OAAA8N,QAAA,EAAAC,aAAA,EAAAC,WAAA,EAAAC,OAAA,IAAArH,SAAA7G,KAAA,WAAAC,OAAA6G,QAAA,WAAAC,QAAA,gBAAAiF,QAAA,yBAAAC,oBAAA,6BAAAtJ,aAAA1C,QAAA6N,MAAA,YAAA3H,MAAAnG,KAAA,SAAAC,SAAAM,KAAA,kBAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA0F,KAAApG,KAAA,SAAAC,OAAA,UAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA2F,KAAArG,KAAA,SAAAC,OAAA,mBAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA4F,QAAAtG,KAAA,SAAAC,OAAA,UAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA6F,OAAAvG,KAAA,SAAAC,SAAAM,OAAAa,KAAAC,QAAA,SAAAX,QAAA,cAAAb,KAAA,cAAAC,KAAAgO,OAAA9N,KAAA,WAAAC,OAAA8N,QAAA,EAAAC,aAAA,EAAAC,WAAA,EAAAC,OAAA,IAAArH,SAAA7G,KAAA,WAAAC,OAAA6G,QAAA,WAAAC,QAAA,gBAAAiF,QAAA,yBAAAC,oBAAA,6BAAAtJ,aAAA1C,QAAA6N,MAAA,YAAA3H,MAAAnG,KAAA,SAAAC,SAAAM,KAAA,kBAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA0F,KAAApG,KAAA,SAAAC,OAAA,UAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA2F,KAAArG,KAAA,SAAAC,OAAA,mBAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA4F,QAAAtG,KAAA,SAAAC,OAAA,UAAAM,IAAA,SAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA6F,OAAAvG,KAAA,SAAAC,SAAAM,OAAAa,KAAAC,QAAA,SAAAX,QAAA,cAAAb,KAAA,YAAAC,KAAA+G,SAAA7G,KAAA,WAAAC,OAAA6G,QAAA,WAAAC,QAAA,gBAAAiF,QAAA,gBAAAC,oBAAA,6BAAAzL,OAAAR,KAAA,SAAAC,OAAA,kBAAAM,OAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAAD,MAAAT,KAAA,SAAAC,OAAA,mBAAAM,OAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA+B,OAAAzC,KAAA,SAAAC,SAAAM,OAAAa,KAAAC,QAAA,SAAAX,QAAA,WAAA2H,QAAArI,KAAA,QAAAC,OAAAkO,IAAA,SAAA7F,KAAA,WAAA5F,SAAA1C,KAAA,QAAAC,mDCQA,WACA,YAEA,SAAAmO,GAAAC,GACA,wBAAAA,IAAA,gBAAAA,IAAA,OAAAA,EAGA,QAAAC,GAAAD,GACA,wBAAAA,GAGA,QAAAE,GAAAF,GACA,sBAAAA,IAAA,OAAAA,EAeA,QAAAG,MAoCA,QAAAC,KACA,kBACAC,EAAAC,SAAAC,IAIA,QAAAC,KACA,GAAAC,GAAA,EACAC,EAAA,GAAAC,GAAAJ,GACAK,EAAAC,SAAAC,eAAA,GAGA,OAFAJ,GAAAK,QAAAH,GAAAI,eAAA,IAEA,WACAJ,EAAA3G,KAAAwG,MAAA,GAKA,QAAAQ,KACA,GAAA1O,GAAA,GAAA2O,eAEA,OADA3O,GAAA4O,MAAAlM,UAAAsL,EACA,WACAhO,EAAA6O,MAAApG,YAAA,IAIA,QAAAqG,KACA,kBACA/E,WAAAiE,EAAA,IAMA,QAAAA,KACA,OAAAzP,GAAA,EAAAwQ,EAAAxQ,KAAA,GACA,GAAAyQ,GAAAC,EAAA1Q,GACA2Q,EAAAD,EAAA1Q,EAAA,EAEAyQ,GAAAE,GAEAD,EAAA1Q,GAAA4Q,OACAF,EAAA1Q,EAAA,GAAA4Q,OAGAJ,EAAA,EAgBA,QAAAK,MAMA,QAAAC,KACA,UAAAC,WAAA,4CAGA,QAAAC,KACA,UAAAD,WAAA,wDAGA,QAAAE,GAAAC,GACA,IACA,MAAAA,GAAAC,KACA,MAAAjQ,GAEA,MADAkQ,GAAAlQ,QACAkQ,GAIA,QAAAC,GAAAF,EAAArQ,EAAAwQ,EAAAC,GACA,IACAJ,EAAA7Q,KAAAQ,EAAAwQ,EAAAC,GACA,MAAAhS,GACA,MAAAA,IAIA,QAAAiS,GAAAN,EAAAO,EAAAN,GACAO,EAAA,SAAAR,GACA,GAAAS,IAAA,EACAzQ,EAAAmQ,EAAAF,EAAAM,EAAA,SAAA3Q,GACA6Q,IACAA,GAAA,EACAF,IAAA3Q,EACA8Q,EAAAV,EAAApQ,GAEA+Q,EAAAX,EAAApQ,KAEA,SAAAwJ,GACAqH,IACAA,GAAA,EAEAG,EAAAZ,EAAA5G,KACA,YAAA4G,EAAAa,QAAA,sBAEAJ,GAAAzQ,IACAyQ,GAAA,EACAG,EAAAZ,EAAAhQ,KAEAgQ,GAGA,QAAAc,GAAAd,EAAAO,GACAA,EAAAQ,SAAAC,EACAL,EAAAX,EAAAO,EAAAU,SACAjB,EAAAe,SAAAG,EACAN,EAAAZ,EAAAO,EAAAU,SAEAE,EAAAZ,EAAAb,OAAA,SAAA9P,GACA8Q,EAAAV,EAAApQ,IACA,SAAAwJ,GACAwH,EAAAZ,EAAA5G,KAKA,QAAAgI,GAAApB,EAAAqB,GACA,GAAAA,EAAA/O,cAAA0N,EAAA1N,YACAwO,EAAAd,EAAAqB,OACA,CACA,GAAApB,GAAAF,EAAAsB,EAEApB,KAAAC,EACAU,EAAAZ,EAAAE,EAAAlQ,OACA0P,SAAAO,EACAU,EAAAX,EAAAqB,GACApD,EAAAgC,GACAK,EAAAN,EAAAqB,EAAApB,GAEAU,EAAAX,EAAAqB,IAKA,QAAAX,GAAAV,EAAApQ,GACAoQ,IAAApQ,EACAgR,EAAAZ,EAAAJ,KACA7B,EAAAnO,GACAwR,EAAApB,EAAApQ,GAEA+Q,EAAAX,EAAApQ,GAIA,QAAA0R,GAAAtB,GACAA,EAAAuB,UACAvB,EAAAuB,SAAAvB,EAAAiB,SAGAO,EAAAxB,GAGA,QAAAW,GAAAX,EAAApQ,GACAoQ,EAAAe,SAAAU,IAEAzB,EAAAiB,QAAArR,EACAoQ,EAAAe,OAAAC,EAEA,IAAAhB,EAAA0B,aAAArS,QAEAmR,EAAAgB,EAAAxB,IAIA,QAAAY,GAAAZ,EAAA5G,GACA4G,EAAAe,SAAAU,IACAzB,EAAAe,OAAAG,EACAlB,EAAAiB,QAAA7H,EAEAoH,EAAAc,EAAAtB,IAGA,QAAAmB,GAAAQ,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAAD,aACArS,EAAA0S,EAAA1S,MAEAsS,GAAAJ,SAAA,KAEAQ,EAAA1S,GAAAuS,EACAG,EAAA1S,EAAA2R,GAAAa,EACAE,EAAA1S,EAAA6R,GAAAY,EAEA,IAAAzS,GAAAsS,EAAAZ,QACAP,EAAAgB,EAAAG,GAIA,QAAAH,GAAAxB,GACA,GAAA+B,GAAA/B,EAAA0B,aACAM,EAAAhC,EAAAe,MAEA,QAAAgB,EAAA1S,OAAA,CAIA,OAFAuS,GAAArC,EAAA0C,EAAAjC,EAAAiB,QAEAnS,EAAA,EAAAA,EAAAiT,EAAA1S,OAAAP,GAAA,EACA8S,EAAAG,EAAAjT,GACAyQ,EAAAwC,EAAAjT,EAAAkT,GAEAJ,EACAM,EAAAF,EAAAJ,EAAArC,EAAA0C,GAEA1C,EAAA0C,EAIAjC,GAAA0B,aAAArS,OAAA,GAGA,QAAA8S,KACAC,KAAApS,MAAA,KAKA,QAAAqS,GAAA9C,EAAA0C,GACA,IACA,MAAA1C,GAAA0C,GACA,MAAA5T,GAEA,MADAiU,GAAAtS,MAAA3B,EACAiU,GAIA,QAAAJ,GAAAF,EAAAhC,EAAAT,EAAA0C,GACA,GACArS,GAAAI,EAAAuS,EAAAC,EADAC,EAAAxE,EAAAsB,EAGA,IAAAkD,GAWA,GAVA7S,EAAAyS,EAAA9C,EAAA0C,GAEArS,IAAA0S,GACAE,GAAA,EACAxS,EAAAJ,EAAAI,MACAJ,EAAA,MAEA2S,GAAA,EAGAvC,IAAApQ,EAEA,WADAgR,GAAAZ,EAAAF,SAKAlQ,GAAAqS,EACAM,GAAA,CAGAvC,GAAAe,SAAAU,IAEAgB,GAAAF,EACA7B,EAAAV,EAAApQ,GACA4S,EACA5B,EAAAZ,EAAAhQ,GACAgS,IAAAhB,EACAL,EAAAX,EAAApQ,GACAoS,IAAAd,GACAN,EAAAZ,EAAApQ,IAIA,QAAA8S,GAAA1C,EAAA2C,GACA,IACAA,EAAA,SAAA/S,GACA8Q,EAAAV,EAAApQ,IACA,SAAAwJ,GACAwH,EAAAZ,EAAA5G,KAEA,MAAA/K,GACAuS,EAAAZ,EAAA3R,IAkBA,QAAAuU,GAAAC,EAAAC,EAAAC,EAAAC,GACAZ,KAAAa,qBAAAJ,EACAT,KAAApC,QAAA,GAAA6C,GAAAlD,EAAAqD,GACAZ,KAAAc,eAAAH,EAEAX,KAAAe,eAAAL,IACAV,KAAAgB,OAAAN,EACAV,KAAA/S,OAAAyT,EAAAzT,OACA+S,KAAAiB,WAAAP,EAAAzT,OAEA+S,KAAAkB,QAEA,IAAAlB,KAAA/S,OACAsR,EAAAyB,KAAApC,QAAAoC,KAAAnB,UAEAmB,KAAA/S,OAAA+S,KAAA/S,QAAA,EACA+S,KAAAmB,aACA,IAAAnB,KAAAiB,YACA1C,EAAAyB,KAAApC,QAAAoC,KAAAnB,WAIAL,EAAAwB,KAAApC,QAAAoC,KAAAoB,oBAkIA,QAAAC,KACA,SAAA5D,WAAA,sFAGA,QAAA6D,KACA,SAAA7D,WAAA,yHA4GA,QAAA8D,GAAAhB,GACAP,KAAAwB,IAAAC,IACAzB,KAAArB,OAAArB,OACA0C,KAAAnB,QAAAvB,OACA0C,KAAAV,gBAEA/B,IAAAgD,IACA1E,EAAA0E,IACAc,IAGArB,eAAAuB,IACAD,IAGAhB,EAAAN,KAAAO,IAvnBA,GAAAmB,EAOAA,GALAC,MAAAC,QAKAD,MAAAC,QAJA,SAAAhG,GACA,yBAAAiG,OAAAC,UAAAC,SAAA/U,KAAA4O,GAMA,IAsFAoG,GAtFAC,EAAAP,EAeAxE,GAdAgF,KAAAC,KAAA,qBAAAD,OAAAE,WAGAP,OAAAQ,QAAA,SAAA/V,GACA,GAAAgW,UAAArV,OAAA,EACA,SAAAL,OAAA,gCAEA,oBAAAN,GACA,SAAAmR,WAAA,6BAGA,OADA1B,GAAA+F,UAAAxV,EACA,GAAAyP,IAGA,GAEAqC,EAAA,SAAAjB,EAAAE,GACAD,EAAAF,GAAAC,EACAC,EAAAF,EAAA,GAAAG,EACAH,GAAA,EACA,IAAAA,GAIA8E,KAIAO,EAAA,mBAAAC,kBACAjG,EAAAgG,EAAAE,kBAAAF,EAAAG,uBAGAC,EAAA,mBAAAC,oBACA,mBAAAC,gBACA,mBAAA/F,gBAmCAM,EAAA,GAAAuE,OAAA,IAoBAK,GADA,mBAAA/F,IAAA,wBAAA8F,SAAA/U,KAAAiP,GACAD,IACAO,EACAH,IACAuG,EACA9F,IAEAI,GAIA,IAAAoC,GAAA,OACAT,EAAA,EACAE,EAAA,EACAhB,EAAA,GAAAiC,GAmKAG,EAAA,GAAAH,EAqGAS,GAAAsB,UAAAf,eAAA,SAAAL,GACA,MAAAuB,GAAAvB,IAGAF,EAAAsB,UAAAV,iBAAA,WACA,UAAAxU,OAAA,4CAGA4T,EAAAsB,UAAAZ,MAAA,WACAlB,KAAAnB,QAAA,GAAA8C,OAAA3B,KAAA/S,QAGA,IAAA6V,GAAAtC,CAEAA,GAAAsB,UAAAX,WAAA,WAKA,OAJAlU,GAAA+S,KAAA/S,OACA2Q,EAAAoC,KAAApC,QACA8C,EAAAV,KAAAgB,OAEAtU,EAAA,EAAAkR,EAAAe,SAAAU,GAAApS,EAAAP,MACAsT,KAAA+C,WAAArC,EAAAhU,OAIA8T,EAAAsB,UAAAiB,WAAA,SAAAC,EAAAtW,GACA,GAAAuW,GAAAjD,KAAAa,oBACA/E,GAAAkH,GACAA,EAAA9S,cAAA+S,GAAAD,EAAArE,SAAAU,GACA2D,EAAA7D,SAAA,KACAa,KAAAkD,WAAAF,EAAArE,OAAAjS,EAAAsW,EAAAnE,UAEAmB,KAAAmD,cAAAF,EAAAG,QAAAJ,GAAAtW,IAGAsT,KAAAiB,aACAjB,KAAAnB,QAAAnS,GAAAsT,KAAAqD,YAAAzE,EAAAlS,EAAAsW,KAIAxC,EAAAsB,UAAAoB,WAAA,SAAAxU,EAAAhC,EAAAc,GACA,GAAAoQ,GAAAoC,KAAApC,OAEAA,GAAAe,SAAAU,IACAW,KAAAiB,aAEAjB,KAAAc,gBAAApS,IAAAoQ,EACAN,EAAAZ,EAAApQ,GAEAwS,KAAAnB,QAAAnS,GAAAsT,KAAAqD,YAAA3U,EAAAhC,EAAAc,IAIA,IAAAwS,KAAAiB,YACA1C,EAAAX,EAAAoC,KAAAnB,UAIA2B,EAAAsB,UAAAuB,YAAA,SAAA3U,EAAAhC,EAAAc,GACA,MAAAA,IAGAgT,EAAAsB,UAAAqB,cAAA,SAAAvF,EAAAlR,GACA,GAAA4W,GAAAtD,IAEAjB,GAAAnB,EAAAN,OAAA,SAAA9P,GACA8V,EAAAJ,WAAAtE,EAAAlS,EAAAc,IACA,SAAAwJ,GACAsM,EAAAJ,WAAApE,EAAApS,EAAAsK,KAIA,IAAAuM,GAAA,SAAAC,EAAA5C,GACA,UAAAkC,GAAA9C,KAAAwD,GAAA,EAAA5C,GAAAhD,SAGA6F,EAAA,SAAAD,EAAA5C,GAaA,QAAAnB,GAAAjS,GACA8Q,EAAAV,EAAApQ,GAGA,QAAAkS,GAAA1I,GACAwH,EAAAZ,EAAA5G,GAhBA,GAAAyJ,GAAAT,KAEApC,EAAA,GAAA6C,GAAAlD,EAAAqD,EAEA,KAAAqB,EAAAuB,GAEA,MADAhF,GAAAZ,EAAA,GAAAH,WAAA,oCACAG,CAaA,QAVA3Q,GAAAuW,EAAAvW,OAUAP,EAAA,EAAAkR,EAAAe,SAAAU,GAAApS,EAAAP,MACAqS,EAAA0B,EAAA2C,QAAAI,EAAA9W,IAAA4Q,OAAAmC,EAAAC,EAGA,OAAA9B,IAGA8F,EAAA,SAAAhM,EAAAkJ,GAEA,GAAAH,GAAAT,IAEA,IAAAtI,GAAA,gBAAAA,MAAAxH,cAAAuQ,EACA,MAAA/I,EAGA,IAAAkG,GAAA,GAAA6C,GAAAlD,EAAAqD,EAEA,OADAtC,GAAAV,EAAAlG,GACAkG,GAGA+F,EAAA,SAAA3M,EAAA4J,GAEA,GAAAH,GAAAT,KACApC,EAAA,GAAA6C,GAAAlD,EAAAqD,EAEA,OADApC,GAAAZ,EAAA5G,GACA4G,GAGA6D,EAAA,EAUAmC,GAAArC,CA4HAA,GAAAsC,IAAAN,EACAhC,EAAAuC,KAAAL,EACAlC,EAAA6B,QAAAM,EACAnC,EAAAwC,OAAAJ,EAEApC,EAAAO,WACA5R,YAAAqR,EAmMA1D,KAAA,SAAA4B,EAAAC,GACA,GAAAH,GAAAS,KACAtR,EAAA6Q,EAAAZ,MAEA,IAAAjQ,IAAAkQ,IAAAa,GAAA/Q,IAAAoQ,IAAAY,EACA,MAAAM,KAGA,IAAAR,GAAA,GAAAQ,MAAA9P,YAAAqN,GACAyG,EAAAzE,EAAAV,OAEA,IAAAnQ,EAAA,CACA,GAAAyO,GAAAmF,UAAA5T,EAAA,EACA0P,GAAA,WACA0B,EAAApR,EAAA8Q,EAAArC,EAAA6G,SAGAjF,GAAAQ,EAAAC,EAAAC,EAAAC,EAGA,OAAAF,IA8BAyE,QAAA,SAAAvE,GACA,MAAAM,MAAAnC,KAAA,KAAA6B,IAIA,IAAAwE,IAAA,WACA,GAAAC,EAGAA,GADA,mBAAAC,GACAA,EACA,mBAAA5B,gBAAA/F,SACA+F,OAEA6B,IAGA,IAAAC,GACA,WAAAH,IAGA,WAAAA,GAAAI,SACA,UAAAJ,GAAAI,SACA,OAAAJ,GAAAI,SACA,QAAAJ,GAAAI,SAGA,WACA,GAAAnB,EAEA,OADA,IAAAe,GAAAI,QAAA,SAAAnY,GAAAgX,EAAAhX,IACAyP,EAAAuH,KAGAkB,KACAH,EAAAI,QAAAX,KAIAY,IACAD,QAAAX,GACAa,SAAAP,GAIA,mBAAAQ,gBAAA,IACAA,OAAA,iBAAAF,MACA,mBAAArX,MAAA,QACAA,EAAA,QAAAqX,GACA,mBAAAxE,QACAA,KAAA,WAAAwE,MAEAxX,KAAAgT,sKCz7BA,QAAA2E,KACA,IAAAC,EAAA,CAGAA,GAAA,CAGA,KAFA,GAAAC,GACAC,EAAAC,EAAA9X,OACA6X,GAAA,CACAD,EAAAE,EACAA,IAEA,KADA,GAAArY,GAAA,KACAA,EAAAoY,GACAD,EAAAnY,IAEAoY,GAAAC,EAAA9X,OAEA2X,GAAA,GAgBA,QAAAI,MApCA,GAAA/I,GAAA9O,EAAAJ,WACAgY,KACAH,GAAA,CAoBA3I,GAAAC,SAAA,SAAA+I,GACAF,EAAAG,KAAAD,GACAL,GACA1M,WAAAyM,EAAA,IAIA1I,EAAAkJ,MAAA,UACAlJ,EAAAmJ,SAAA,EACAnJ,EAAAoJ,OACApJ,EAAAqJ,QACArJ,EAAA9B,QAAA,GACA8B,EAAAsJ,YAIAtJ,EAAAuJ,GAAAR,EACA/I,EAAAwJ,YAAAT,EACA/I,EAAAyJ,KAAAV,EACA/I,EAAA0J,IAAAX,EACA/I,EAAA2J,eAAAZ,EACA/I,EAAA4J,mBAAAb,EACA/I,EAAA6J,KAAAd,EAEA/I,EAAA8J,QAAA,WACA,SAAAnZ,OAAA,qCAIAqP,EAAA+J,IAAA,sBACA/J,EAAAgK,MAAA,WACA,SAAArZ,OAAA,mCAEAqP,EAAAiK,MAAA,6CCrDA,YAEA,IAAAC,GAAA,KACAC,EAAA,KACAC,EAAA,KAEAC,EAAA,SAAAC,GACA,MAAAA,GAGAA,EAAAtV,YAGAsV,EAAAtV,WAAAuV,QAAA,SAAAC,GACAA,EAAArM,IAAAqM,EAAAvV,WACAuV,GAAAvV,OAEAqV,GANAA,EAJA,QAaAG,EAAA,SAAAC,GACA,GAAAC,MACAC,EAAAF,EAAA3C,QAaA,OAZA6C,GAAAL,QAAA,SAAAM,GACA,GAAAC,IACA/T,GAAA8T,EAAA9T,GACAgU,UAAAF,EAAAE,UACAzZ,KAAAuZ,EAAAvZ,KAEAuZ,GAAAG,QAAAT,QAAA,SAAApZ,GACA2Z,EAAA3Z,GAAA0Z,EAAAI,KAAA9Z,KAEAwZ,EAAAG,EAAA/T,IAAA+T,IAGAH,GAGAO,EAAA,SAAAC,GACA,IAAAA,EACA,QAEA,IAAAC,IAAA,EACAC,EAAA,eAMA,OALAF,GAAArX,IAAAwX,MAAA,MAAAf,QAAA,SAAAgB,GACAA,EAAAC,MAAA,EAAAH,EAAAra,UAAAqa,IACAD,GAAA,KAGAA,EAIA,oBAAAK,mBACAvB,EAAAuB,kBACA,mBAAAC,sBACAxB,EAAA,SAAAyB,EAAAC,GAEA,GAAAC,GAAA,GAAAH,sBAAArB,EAAAsB,GAAAC,GAIAE,GAAA,EACAC,EAAAF,EAAApV,kBAAA2D,KAAAyR,EAeA,OAdAA,GAAApV,kBAAA,SAAAkO,EAAAqH,GACA,GAAAC,GAAAF,EAAApH,EAAAqH,EACA,KAAAF,IACAA,GAAA,EACAD,EAAA3U,sBACAgU,EAAAW,EAAAK,oBACAhB,EAAAW,EAAAM,oBAAA,CACA,GAAAC,GAAA,GAAAC,OAAA,oBACAR,GAAA3U,oBAAAkV,GAGA,MAAAH,IAGAJ,GAEA,mBAAAS,2BAEApC,EAAA,SAAAyB,EAAAC,GACA,GAAAC,GAAA,GAAAS,yBAAAX,EAAAC,GACAW,EAAAV,EAAA5U,SAAAmD,KAAAyR,EAQA,OAPAA,GAAA5U,SAAA,SAAAuV,EAAAC,EAAAC,GACA,GAAAC,GAAA,SAAAC,GACAH,EAAAhC,EAAAmC,IAGAL,GAAAI,EAAAD,EAAAF,IAEAX,IAKA,mBAAAgB,uBACA1C,EAAA0C,sBACA,mBAAAC,4BACA3C,EAAA2C,0BAIA,mBAAAC,iBACA3C,EAAA2C,gBACA,mBAAAC,sBACA5C,EAAA4C,oBAGAlc,EAAA2a,kBAAAvB,EACApZ,EAAA+b,sBAAA1C,EACArZ,EAAAic,gBAAA3C,uCClHA,GAAA6C,GAAAzc,EAAA,kBASA0c,EAAA,SAAAC,GACApJ,KAAAqJ,MAAAD,EAAA7C,QAAA6C,EAAA7C,OAAA9Y,OAAA,MACAuS,KAAAsJ,QAAAF,EAAA7C,QAAA6C,EAAA7C,OAAAnC,OAAAkF,QACAJ,EAAAK,aAAAvJ,MASAmJ,GAAAE,OACA5b,MAAA,EACAC,KAAA,EACAJ,IAAA,EACAK,KAAA,EACAC,MAAA,GAOAub,EAAArH,UAAA0H,MAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,CACA,oBAAA3J,MAAAsJ,SACAtJ,KAAAsJ,QAAAO,WAAA,IAGA,gBAAAD,KACAA,OAGAtM,SAAA6L,EAAAE,MAAArJ,KAAAqJ,QACAF,EAAAE,MAAAI,GAAAN,EAAAE,MAAArJ,KAAAqJ,SAIAK,IACA,mBAAAzN,IACA,wBAAA8F,SAAA/U,KAAAiP,IAEA2N,EAAAE,QAAA,SACAF,EAAAE,QAAA,QAAAJ,IACA1J,KAAAsJ,QAAAS,aAGA/J,KAAAsJ,QAAAU,cACAhK,KAAAsJ,QAAAU,YAAAhK,KAAAsJ,QAAAW,KACAjK,KAAAsJ,QAAAW,KAAA,cAEAjK,KAAAsJ,QAAAU,YAAAN,EAAA,IAAAD,EAAA,GAAAS,cAAA,IACAN,EAAAO,KAAA,aAEAP,EAAAE,QAAA,eACAF,EAAAE,QAAA,cACAF,EAAAE,QAAA,KAAAJ,EAAA,SAIA1J,KAAAsJ,QAAAG,IAAAzJ,KAAAsJ,QAAAhc,MACAmc,EAAA,OAEAzJ,KAAAsJ,QAAAG,GAAAW,MAAApK,KAAAsJ,QAAAM,MASAT,EAAArH,UAAAxU,IAAA,SAAAoc,EAAAC,EAAAU,GACArK,KAAAwJ,MAAA,MAAAE,EAAAC,GACAU,KASAlB,EAAArH,UAAArU,MAAA,SAAAic,EAAAC,EAAAU,GACArK,KAAAwJ,MAAA,QAAAE,EAAAC,GACAU,KASAlB,EAAArH,UAAApU,KAAA,SAAAgc,EAAAC,EAAAU,GACArK,KAAAwJ,MAAA,OAAAE,EAAAC,GACAU,KASAlB,EAAArH,UAAAnU,KAAA,SAAA+b,EAAAC,EAAAU,GACArK,KAAAwJ,MAAA,OAAAE,EAAAC,GACAU,KASAlB,EAAArH,UAAAlU,MAAA,SAAA8b,EAAAC,EAAAU,GACArK,KAAAwJ,MAAA,QAAAE,EAAAC,GACAU,KAIAtd,EAAAud,SAAAnB,EACApc,EAAAK,KAAA,eACAL,EAAAwd,OAAAhE,QAAA,oFCtIA,GAAA2C,GAAAzc,EAAA,kBAUA+d,EAAA,SAAApB,EAAAqB,GACA,YACAzK,MAAAyK,gBACAvB,EAAAK,aAAAvJ,MASAwK,GAAA1I,UAAAjU,eAAA,SAAA6c,EAAAL,GACA,YACA,IAAApb,GAAA,GAAA0b,YAAAD,EACAE,QAAAC,gBAAA5b,GACAob,EAAApb,WAGAlC,EAAAud,SAAAE,EACAzd,EAAAK,KAAA,yDC9BA,GAAA8b,GAAAzc,EAAA,kBAUAqe,EAAA,SAAA1B,EAAAqB,GACAzK,KAAA+K,IAAA3B,EAAAjc,OACA6S,KAAAyK,gBACAvB,EAAAK,aAAAvJ,MAGAA,KAAA+K,IAAArF,KAAA,gBAAAsF,GACAhL,KAAAiL,KAAA,GAAAD,IACA3U,KAAA2J,OACAA,KAAA+K,IAAAjF,KAAA9F,KAAA+K,IAAAG,gBACA3d,KAAA,iCACA4d,QAAA,SAaAL,GAAAhJ,UAAA/T,MAAA,SAAAqd,EAAAf,GAEA,MADAA,KACArK,KAAAiL,SAKAjL,MAAAiL,KAAA5c,YAAA+c,EAAA,SAAAC,GACArL,KAAAqL,MACArL,KAAAqL,KAAArb,QAEAgQ,KAAAqL,OACArL,KAAAqL,KAAApb,QAAA,iBACA+P,MAAAqL,MACAhV,KAAA2J,OACAA,KAAAyK,cAAA,mCACAzK,KAAAqL,KAAA7F,GAAA,mBAAA8F,GACAtL,KAAAyK,cAAA,kCAAAa,IACAjV,KAAA2J,QACA3J,KAAA2J,WAhBAA,MAAAyK,cAAA,4DAyBAK,EAAAhJ,UAAA9T,KAAA,SAAAud,EAAAlB,GACAA,IACArK,KAAAqL,KACArL,KAAAqL,KAAAvF,KAAA,UAAAyF,GAEAvL,KAAAyK,cAAA,mCAIA1d,EAAAud,SAAAQ,EACA/d,EAAAK,KAAA,YACAL,EAAAwd,OAAApd,QAAA,8CCjEA,GAAAqe,GAAA,SAAAC,EAAArC,EAAAqB,GACAzK,KAAAyL,WACAzL,KAAAyK,gBACAzK,KAAA0L,WAeAF,GAAAG,SAAA,SAAAF,GACA,GAAA/e,GACAkf,IACA,KAAAH,MAAAxe,OACA,MAAAue,GAAAK,OAGA,KAAAnf,EAAA,EAAAA,EAAA+e,EAAAxe,OAAAP,GAAA,EACAkf,EAAA1G,KAAA,GAAAuG,GAAA/e,GAEAK,GAAAud,SAAAkB,EAAAnV,KAAA2J,KAAA4L,IAQAJ,EAAAK,MAAA,WACA9e,EAAAud,SAAAkB,EAAAnV,KAAA2J,UAeAwL,EAAA1J,UAAAtT,cAAA,SAAAsd,EAAAzB,GACA,GAAA3d,GAAAgc,CAMA,KALAA,EAAA,SAAA1E,GACAhE,KAAA0L,QAAA1H,EAAAtV,OAAAsR,KAAAyL,SAAA/e,GACA2d,EAAArG,IACA3N,KAAA2J,MAEAtT,EAAA,EAAAA,EAAAsT,KAAAyL,SAAAxe,OAAAP,GAAA,EACA,GAAAsT,KAAAyL,SAAA/e,GAAA8B,cAAAsd,EAAApD,GACA,MAIA2B,GAAA,MACAzb,QAAA,UACAX,QAAA,4CAeAud,EAAA1J,UAAAjT,eAAA,SAAAkd,EAAAC,EAAA3B,GACA,MAAArK,MAAA0L,QAAAO,eAAAD,EAAAtd,QAQAsR,KAAA0L,QAAAM,EAAAtd,OAAAG,eAAAkd,EAAAC,EAAA3B,cACArK,MAAA0L,QAAAM,EAAAtd,YARA2b,GAAA/M,QACA1O,QAAA,UACAX,QAAA,4DASAlB,EAAA4e,SAAAH,EAAAG,SACA5e,EAAA8e,MAAAL,EAAAK,MACA9e,EAAAud,SAAAkB,EAAAnV,KAAA2J,SACAjT,EAAAK,KAAA,qCC7FA,QAAA8e,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAzE,GACAtB,EACA7Z,CAMA,IALAsT,KAAAmM,WACAnM,KAAAuM,YACAvM,KAAAqM,uBACArM,KAAAwM,oBAEA,mBAAAF,GAAA5E,kBACA1H,KAAA0H,kBAAA4E,EAAA5E,sBACA,uBAAAa,yBACAvI,KAAA0H,kBAAAa,4BACA,uBAAAZ,sBAGA,SAAA/a,OAAA,gEAFAoT,MAAA0H,kBAAAC,qBAKA,sBAAA2E,GAAAxD,sBACA9I,KAAA8I,sBAAAwD,EAAAxD,0BACA,uBAAAA,uBACA9I,KAAA8I,gDACA,uBAAAC,0BAGA,SAAAnc,OAAA,oEAFAoT,MAAA8I,sBAAAC,yBAKA,sBAAAuD,GAAAtD,gBACAhJ,KAAAgJ,gBAAAsD,EAAAtD,oBACA,uBAAAA,iBACAhJ,KAAAgJ,oCACA,uBAAAC,oBAGA,SAAArc,OAAA,8DAFAoT,MAAAgJ,gBAAAC,mBAeA,IATApB,GACA4E,WAAAC,sBAAA,KAGA1M,KAAA2M,kBAAA,KAEA3M,KAAA8H,GAAA,KAEAvB,GAAAtV,eACAvE,EAAA,EAAAA,EAAA0f,EAAAnf,OAAAP,GAAA,EACA6Z,EAAAtV,WAAAiU,MACA9K,IAAAgS,EAAA1f,IAGAsT,MAAA8H,GAAA,GAAA9H,MAAA0H,kBAAAnB,EAAAsB,GAEA7H,KAAA8H,GAAA8E,iBAAA,eACA5M,KAAA6M,cAAAxW,KAAA2J,OACAA,KAAA8H,GAAA8E,iBAAA,oBACA5M,KAAA8M,oBAAAzW,KAAA2J,OACAA,KAAA8H,GAAA8E,iBAAA,cACA5M,KAAA+M,cAAA1W,KAAA2J,OACAA,KAAA8H,GAAA8E,iBAAA,kCAMA,WAAA5M,KAAA8H,GAAAkF,iBACAhN,KAAAiN,QAAAC,EAAAC,UACAnN,KAAAwM,iBAAAY,IAAA,SAAAjQ,WAEA9G,KAAA2J,OAGAA,KAAAiN,QAAAC,EAAAG,aAqPA,QAAAC,GAAAC,EAAA9C,EACA/C,EAAAoB,EACAE,GAEAhJ,KAAAyK,gBAGAzK,KAAAmM,SAAA,IAAAqB,KAAAC,SAIAzN,KAAA0N,cAAAH,EAAApgB,OAIA6S,KAAA0H,oBACA1H,KAAA8I,wBACA9I,KAAAgJ,kBAGAhJ,KAAA2N,kBAAA,KAGA3N,KAAA4N,KAAA,KAGA5N,KAAA0N,cAAAhI,KAAA,gBAAAsF,GACAhL,KAAAiL,KAAA,GAAAD,IACA3U,KAAA2J,OACAA,KAAA0N,cAAA5H,KAAA9F,KAAA0N,cAAAxC,gBACA3d,KAAA,2CACA4d,QAAA,SArWA,GAAA+B,IACAG,aAAA,eACAQ,WAAA,aACAV,UAAA,YAoFAjB,GAAApK,UAAApS,YAAA,SAAAoe,EAAAzD,GACArK,KAAA8H,GAAApY,YAAA2a,EAAA,WACAf,QAAA1b,MAAA,4CACAkgB,IAGA5B,EAAApK,UAAAiM,iBAAA,SAAAC,GACAhO,KAAAiN,UAAAC,EAAAC,UACAa,IAEAhO,KAAAwM,iBAAAtH,KAAA8I,IAIA9B,EAAApK,UAAA9T,KAAA,SAAAsB,EAAArB,EAAAoc,GACArK,KAAAuM,SAAAjd,GAAAtB,KAAAC,GACAoc,KAGA6B,EAAApK,UAAA3S,gBAAA,SAAAG,EAAA+a,GACA,GAAA4D,GAAAjO,KAAA8H,GAAApV,kBAAApD,KACA2e,GAAAvd,OAAA,WACAsP,KAAAkO,eAAA5e,EAAA2e,GACA5D,KACAhU,KAAA2J,MACAiO,EAAAtd,QAAA,SAAAhC,GAEA2a,QAAA1b,MAAAe,GACA0b,EAAA/M,OAAA3O,IAKA,mBAAAgZ,uBACA3H,KAAAiN,UAAAC,EAAAG,cACArN,KAAAmO,uBAIAjC,EAAApK,UAAAsM,aAAA,SAAA9e,GACAgO,SAAA0C,KAAAuM,SAAAjd,KACA0Q,KAAAuM,SAAAjd,GAAAU,cACAgQ,MAAAuM,SAAAjd,KAIA4c,EAAApK,UAAAtS,kBAAA,SAAAF,GAEA,GAAAgO,SAAA0C,KAAAuM,SAAAjd,GAAA,CACA,GAAA2e,GAAAjO,KAAAuM,SAAAjd,EACA,OAAA2e,GAAAI,eAEA,SAAAzhB,OAAA,uBAAA0C,IAGA4c,EAAApK,UAAAwM,qBAAA,SAAAC,GACAvO,KAAA2M,kBAAA4B,GAIArC,EAAApK,UAAA0M,oBAAA,SAAAC,GAEA,GACAC,GADAC,EAAAC,KAAAC,MAAAJ,EAOAE,GAAA5e,IAEAiQ,KAAA8H,GAAApW,qBACA,GAAAsO,MAAA8I,sBAAA6F,EAAA5e,KAEA,WAEA,UAAAiQ,KAAA8H,GAAAM,kBAAA7a,MACAyS,KAAA8H,GAAAvW,aAAAyO,KAAA8O,cAAAzY,KAAA2J,MACAsJ,QAAA1b,QAEAyI,KAAA2J,MAEA,SAAA/T,GACAqd,QAAA1b,MAAAoS,KAAAmM,SAAA,iCACAlgB,IACAoK,KAAA2J,OAEA2O,EAAA5c,WAGA2c,EAAA,GAAA1O,MAAAgJ,gBAAA2F,EAAA5c,WACAiO,KAAA8H,GAAAhW,gBAAA4c,IAEApF,QAAA3b,KAAAqS,KAAAmM,SAAA,iDACAsC,IAKAvC,EAAApK,UAAAqM,oBAAA,WACAnO,KAAAiN,QAAAC,EAAAW,WACA7N,KAAA8H,GAAApY,YACAsQ,KAAA8O,cAAAzY,KAAA2J,MACA,SAAA/T,GACAqd,QAAA1b,MAAAoS,KAAAmM,SAAA,yBACAlgB,EAAA8V,YACA/B,KAAAiN,QAAAC,EAAAG,cACAhX,KAAA2J,QAIAkM,EAAApK,UAAAiN,SAAA,WACA,OAAA/O,KAAA8H,IAAA,WAAA9H,KAAA8H,GAAAkF,gBAGAd,EAAApK,UAAA9R,MAAA,WACAgQ,KAAA+O,YACA/O,KAAA8H,GAAA9X,SAKAkc,EAAApK,UAAAoM,eAAA,SAAA5e,EAAAnB,GACA,GAAA6gB,GAAAhP,KAAAqM,oBACArM,MAAAuM,SAAAjd,GAAAnB,EAEA,eAAAA,EAAA8gB,aACA9gB,EAAAuC,OAAAse,EAAAE,SAAA7Y,KAAA2J,KAAA7R,GAAAyS,MAAAtR,KAGAnB,EAAAyC,QAAAoe,EAAAG,UAAA9Y,KAAA2J,KAAA7R,GAAAyS,MAAAtR,IAEAnB,EAAA0C,UAAAme,EAAAI,YAAA/Y,KAAA2J,KAAA7R,GACAyS,MAAAtR,IAEAnB,EAAAwC,QAAAqe,EAAAK,UAAAhZ,KAAA2J,KAAA7R,GAAAyS,MAAAzS,KAKA+d,EAAApK,UAAAgN,cAAA,SAAAQ,GACAtP,KAAA2M,kBACA3M,KAAA8H,GAAAtW,oBACA8d,EACA,WAEAtP,KAAA2M,kBAAAiC,KAAAW,WAAAxf,IAAAuf;EACAjZ,KAAA2J,MACA,SAAA/T,GACAqd,QAAA1b,MAAAoS,KAAAmM,SAAA,gCACAlgB,IACAoK,KAAA2J,OAGAsJ,QAAA1b,MAAAoS,KAAAmM,SAAA,+FAMAD,EAAApK,UAAAgL,oBAAA,WAGA,GAAA9M,KAAAiN,UAAAC,EAAAG,aAAA,CAMA,GAAAmC,GAAA,WACA,oBAEAnZ,KAAA2J,OACA3J,KAAA2J,MACAyP,EAAA,WACA,oBAEApZ,KAAA2J,OACA3J,KAAA2J,KAoBA,aAnBAA,KAAA8H,GAAAK,kBAAAnI,KAAA8H,GAAAM,mBACA,UAAApI,KAAA8H,GAAAK,iBAAA5a,MACAyS,KAAA8H,GAAAtW,oBAAAwO,KAAA8H,GAAAK,iBACAqH,EAAA,uBACAC,EAAA,wBACAzP,KAAA8H,GAAApW,qBAAAsO,KAAA8H,GAAAM,kBACAoH,EAAA,wBACAC,EAAA,0BACAzP,KAAA8H,GAAAK,kBAAAnI,KAAA8H,GAAAM,mBACA,WAAApI,KAAA8H,GAAAK,iBAAA5a,MACAyS,KAAA8H,GAAApW,qBAAAsO,KAAA8H,GAAAM,kBACAoH,EAAA,wBACAC,EAAA,yBACAzP,KAAA8H,GAAAtW,oBAAAwO,KAAA8H,GAAAK,iBACAqH,EAAA,uBACAC,EAAA,yBAEAnG,QAAA1b,MAAAoS,KAAAmM,SAAA,iCAIAnM,KAAAmO,uBAGAjC,EAAApK,UAAA+K,cAAA,SAAAxE,GACAA,EAAAtW,YAGAiO,KAAA2M,kBACA3M,KAAA2M,kBAAAiC,KAAAW,WAAAxd,UAAAsW,EAAAtW,aAEAuX,QAAA3b,KAAAqS,KAAAmM,SAAA,sDAKAD,EAAApK,UAAA4N,uBAAA,WAEA,WAAA1P,KAAA8H,GAAAkF,iBACAhN,KAAAiN,QAAAC,EAAAC,UACAnN,KAAAwM,iBAAAY,IAAA,SAAAjQ,WAIA+O,EAAApK,UAAAiL,cAAA,SAAA1E,GACArI,KAAAkO,eAAA7F,EAAAla,QAAAyS,MAAAyH,EAAAla,SAQA,SAAAka,EAAAla,QAAA8gB,YACAjP,KAAAqM,qBAAA6C,SAAA7G,EAAAla,SACAyS,MAAAyH,EAAAla,QAAAyS,SAiDA0M,EAAAxL,UAAA/T,MAAA,SAAA4hB,EAAAxD,EACAC,EAAAwD,EACAvF,GACArK,KAAAmM,UACA,IAuCA7c,GACAugB,EAxCAvD,GAAA5E,kBAAA1H,KAAA0H,kBACAoB,sBAAA9I,KAAA8I,sBACAE,gBAAAhJ,KAAAgJ,iBACA3E,EAAArE,KACAqM,GAEA6C,SAAA,SAAAjB,EAAAvgB,GACA2W,EAAAoG,cAAA,qBACAnb,UAAA5B,EAAAkT,SAEAuO,UAAA,SAAAlB,EAAAvgB,GACA2W,EAAAoG,cAAA,sBACAnb,UAAA5B,EAAAkT,SAGAwO,YAAA,SAAAnB,EAAAvgB,EAAA2a,GACAA,EAAAxS,eAAAia,aACAzL,EAAAoG,cAAA,cACA3b,aAAApB,EAAAkT,MACA3R,OAAAoZ,EAAAxS,OAEAwS,EAAAxS,eAAAka,MACA1L,EAAAoG,cAAA,cACA3b,aAAApB,EAAAkT,MACA5R,OAAAqZ,EAAAxS,OAEA,gBAAAwS,GAAA,MACAhE,EAAAoG,cAAA,cACA3b,aAAApB,EAAAkT,MACA7R,KAAAsZ,EAAAxS,QAKAwZ,UAAA,SAAApB,EAAAvgB,EAAAiB,GACA2a,QAAA1b,MAAAqgB,EAAA9B,SAAA,iBACA8B,cAAArN,MAAA,aAAAjS,IAMAqR,MAAA4N,KAAA,GAAA1B,GAAAlM,KAAAmM,SAAAC,EACAC,EAAAC,GAIAtM,KAAAiL,KAAA5c,YAAAshB,EAAA,SAAAxhB,GACA6R,KAAA2N,kBAAAxf,EACA6R,KAAA4N,KAAAU,qBAAA,SAAA3E,GACA3J,KAAA2N,kBAAA7H,KAAA,UAAA6D,IACAtT,KAAA2J,OACAA,KAAA2N,kBAAAnI,GAAA,UACAxF,KAAA4N,KAAAY,oBAAAnY,KAAA2J,KAAA4N,OACA5N,KAAA2N,kBAAA7H,KAAA,SACA8J,GACA5P,KAAA4N,KAAAG,iBAAA1D,IAEAhU,KAAA2J,OAEA4P,IAEAtG,QAAAhc,IAAA0S,KAAAmM,SAAA,0BACA7c,EAAA,QAAAke,KAAAC,SAAA1L,WACA8N,EAAA,SAAAG,EAAApiB,GACAA,EACAyc,EAAA/M,OAAA1P,GAEAoS,KAAA5Q,iBAAAE,EAAA+a,IAEAhU,KAAA2J,MACAA,KAAA7Q,gBAAAG,EAAAugB,KAIAvC,EAAAxL,UAAApS,YAAA,SAAAmY,EAAAwC,GACArK,KAAA4N,KAAAle,YAAAmY,EAAAwC,IAIAiD,EAAAxL,UAAA3S,gBAAA,SAAAG,EAAA+a,GACArK,KAAA4N,KAAAze,gBAAAG,EAAA+a,IAGAiD,EAAAxL,UAAA1S,iBAAA,SAAAE,EAAA+a,GACArK,KAAA4N,KAAAQ,aAAA9e,GACA+a,KAKAiD,EAAAxL,UAAA9T,KAAA,SAAAiiB,EAAA5F,GACA,GAAA6F,GAAAD,EAAAlhB,MAAAkhB,EAAAhhB,QAAAghB,EAAAjhB,MACA,0BAAAkhB,OACA5G,SAAA1b,MAAA,2CAAAqiB,OAMAjQ,MAAA4N,KAAA5f,KAAAiiB,EAAAnhB,aAAAohB,EAAA7F,IAGAiD,EAAAxL,UAAAtS,kBAAA,SAAAF,EAAA+a,GACAA,EAAArK,KAAA4N,KAAApe,kBAAAF,KAGAge,EAAAxL,UAAA9R,MAAA,SAAAqa,GACA,MAAArK,MAAA4N,KAAAmB,eAEA1E,MAGArK,KAAA4N,KAAA5d,QACAgQ,KAAAyK,cAAA,eACAJ,OAGAtd,EAAAud,SAAAgD,EACAvgB,EAAAK,KAAA,sBACAL,EAAAwd,OAAApd,QAAA,4BCpfA,GAAA+b,GAAAzc,EAAA,kBAEA0jB,GACA,SACA,UACA,UACA,aAGAC,KACAC,KACAC,EAAA,SAAArC,GACA,GAAAjb,GAAAkW,EAAA5a,OAmBA,OAlBA8hB,GAAApd,GAAAib,EACAoC,EAAArd,MACAmd,EAAA3J,QAAA,SAAA+J,GAEA,GAAAC,GAAA,SAAAnI,GACA,GAAAoI,GAAAxC,EAAAsC,EACA,IAAAE,IAAAD,EACAH,EAAArd,GAAAkS,KAAAmD,OACA,sBAAAoI,GAKA,SAAA7jB,OAAA,kBAAAyb,EAAA9a,KAAA,SAFAkjB,GAAApI,IAKA4F,GAAAsC,GAAAC,IAEAxd,GAGA0d,EAAA,SAAAtH,EAAAuH,EAAA3d,GAEA,GADAgN,KAAAyK,cAAAkG,GACAP,EAAApd,GAAA,CACAsW,QAAA3b,KAAA,wDACA,IAAAijB,GAAAnkB,EAAA,4BAAA6d,SACAA,EAAA,GAAAsG,EACA5d,GAAAsX,EAAA5X,oBACA4X,EAAAta,QAGAgQ,KAAA7R,QAAAiiB,EAAApd,SACAod,GAAApd,GAKAkF,WAAA,WACA8H,KAAA6Q,mBAAA7d,GAIAgN,KAAA8Q,cAAA,IACAza,KAAA2J,MAAA,GAGA0Q,GAAA5O,UAAA+O,mBAAA,SAAA7d,GACAqd,EAAArd,GAAAwT,QAAA,SAAA6B,GACArI,KAAA,KAAAqI,EAAA9a,MAAA8a,IACAhS,KAAA2J,aACAqQ,GAAArd,IAIA0d,EAAA5O,UAAAgP,aAAA,SAAAC,GACAZ,EAAA3J,QAAA,SAAA+J,GACAQ,GACA/Q,KAAAuQ,GAAAvQ,KAAAuQ,GAAAla,KAAA2J,MACAA,KAAA7R,QAAAoiB,GAAAvQ,KAAAuQ,UAEAvQ,MAAA7R,QAAAoiB,IAEAla,KAAA2J,QAGA0Q,EAAA5O,UAAA3R,SAAA,SAAAgN,GACAA,EAAA6C,KAAA7R,QAAAyS,QAGA8P,EAAA5O,UAAA1R,WAAA,SAAA+M,GACAA,EAAA6C,KAAA7R,QAAAwE,UAGA+d,EAAA5O,UAAAzR,qBAAA,SAAA8M,GACAA,EAAA6C,KAAA7R,QAAAyE,oBAGA8d,EAAA5O,UAAAxR,kBAAA,SAAA6M,GACAA,EAAA6C,KAAA7R,QAAA0E,iBAGA6d,EAAA5O,UAAAvR,YAAA,SAAA4M,GACAA,EAAA6C,KAAA7R,QAAA2E,WAGA4d,EAAA5O,UAAAtR,cAAA,SAAA2M,GACAA,EAAA6C,KAAA7R,QAAA4E,aAGA2d,EAAA5O,UAAAxT,MAAA,SAAA6O,GACAA,EAAA6C,KAAA7R,QAAA6E,KAGA0d,EAAA5O,UAAArR,cAAA,SAAA0M,GACAA,EAAA6C,KAAA7R,QAAA8gB,aAGAyB,EAAA5O,UAAAtS,kBAAA,SAAA2N,GACAA,EAAA6C,KAAA7R,QAAAkgB,iBAGAqC,EAAA5O,UAAAhR,cAAA,SAAAqM,GACAA,EAAA6C,KAAA7R,QAAA6iB,aAEAN,EAAA5O,UAAA/Q,cAAA,SAAAigB,EAAA7T,GACA6C,KAAA7R,QAAA6iB,aACA7T,KAGAuT,EAAA5O,UAAA9T,KAAA,SAAAe,EAAAoO,GACA6C,KAAA7R,QAAAH,KAAAe,GACAoO,KAGAuT,EAAA5O,UAAA9Q,WAAA,SAAA/B,EAAAkO,GACA6C,KAAA7R,QAAAH,KAAAiB,GACAkO,KAGAuT,EAAA5O,UAAA9R,MAAA,SAAAmN,GACA,MAAA6C,MAAA7R,SAGA6R,KAAA8Q,cAAA,GACA9Q,KAAA7R,QAAA6B,YACAmN,MAJAA,KAOAuT,EAAA5O,UAAApR,OAAA,SAAA2X,GACArI,KAAAyK,cAAA,SAAApC,EAAApa,UAGAyiB,EAAA5O,UAAAnR,QAAA,SAAA0X,GACArI,KAAAyK,cAAA,WACA7b,QAAAyZ,EAAA9a,KACAU,QAAAoa,EAAApa,WAIAyiB,EAAA5O,UAAAlR,QAAA,SAAAyX,GACArI,KAAAyK,cAAA,UAAApC,EAAApa,UAGAyiB,EAAA5O,UAAAjR,UAAA,SAAAwX,GACA,mBAAAA,GAAAxS,KACAmK,KAAAyK,cAAA,aAAA1b,KAAAsZ,EAAAxS,WACA,oBAAAmK,KAAA7R,QAAA6iB,YACA,mBAAAC,aACA5I,EAAAxS,eAAAia,aAOA9P,KAAAyK,cAAA,aAAAxb,OAAAoZ,EAAAxS,WAPA,CAIA,GAAAqb,GAAAD,WAAAE,MAAAC,UAAA/I,EAAAxS,QACAmK,MAAAyK,cAAA,aAAAxb,OAAAiiB,MAMAnkB,EAAAK,KAAA,sBACAL,EAAAud,SAAAoG,EACA3jB,EAAAskB,SAAAf,4EC/KA,GAAAgB,GAAA7kB,EAAA,kBACA8kB,EAAA9kB,EAAA,eAAA8X,QACAmD,EAAA4J,EAAA5J,kBACAoB,EAAAwI,EAAAxI,sBACAE,EAAAsI,EAAAtI,gBAEAwI,EAAA/kB,EAAA,yBAEAglB,EAAA,SAAArI,EAAAqB,EAAA7C,GACA5H,KAAAyK,eACA,KACAzK,KAAA0R,WAAA,GAAAhK,GAAAE,GACA,MAAA3b,GAKA,WADAiM,YAAAkR,EAAAkB,SAAAta,MAAAqG,KAAA+S,EAAAkB,SAAAtK,MAAA,GAIAA,KAAA2R,QACA,gBACA,sBACA,iBACA,yBACA,cACA,iBACA,8BAEA3R,KAAA8Q,cAAA,GAIAW,GAAA3P,UAAAgP,aAAA,SAAAC,GACA/Q,KAAA2R,OAAAnL,QAAA,SAAA6B,GACA0I,GACA/Q,KAAAqI,GAAArI,KAAAqI,GAAAhS,KAAA2J,MACAA,KAAA0R,WAAArJ,GAAArI,KAAAqI,IACArI,KAAA0R,kBACA1R,MAAA0R,WAAArJ,IAEAhS,KAAA2J,QAGAyR,EAAA3P,UAAApS,YAAA,SAAAmY,GACA,UAAA0J,GAAA,SAAAnO,EAAAW,GACA/D,KAAA0R,WAAAhiB,YAAA0T,EAAAW,EAAA8D,IACAxR,KAAA2J,QAGAyR,EAAA3P,UAAAvQ,aAAA,WACA,UAAAggB,GAAA,SAAAnO,EAAAW,GACA/D,KAAA0R,WAAAngB,aAAA6R,EAAAW,IACA1N,KAAA2J,QAGAyR,EAAA3P,UAAAtQ,oBAAA,SAAA8d,GACA,UAAAiC,GAAA,SAAAnO,EAAAW,GACA/D,KAAA0R,WAAAlgB,oBAAA,GAAAsX,GAAAwG,GACAlM,EACAW,IACA1N,KAAA2J,QAGAyR,EAAA3P,UAAArQ,oBAAA,WACA,MAAA8f,GAAAnO,QAAApD,KAAA0R,WAAAvJ,mBAGAsJ,EAAA3P,UAAApQ,qBAAA,SAAA4d,GACA,UAAAiC,GAAA,SAAAnO,EAAAW,GACA/D,KAAA0R,WAAAhgB,qBAAA,GAAAoX,GAAAwG,GACAlM,EACAW,IACA1N,KAAA2J,QAGAyR,EAAA3P,UAAAnQ,qBAAA,WACA,MAAA4f,GAAAnO,QAAApD,KAAA0R,WAAAtJ,oBAGAqJ,EAAA3P,UAAAlQ,kBAAA,WACA,MAAA2f,GAAAnO,QAAApD,KAAA0R,WAAA1E,iBAGAyE,EAAA3P,UAAAjQ,UAAA,SAAA+V,GAEA,MADA5H,MAAA0R,WAAA7f,UAAA+V,GACA2J,EAAAnO,WAGAqO,EAAA3P,UAAAhQ,gBAAA,SAAAC,GACA,UAAAwf,GAAA,SAAAnO,EAAAW,GACA/D,KAAA0R,WAAA5f,gBAAA,GAAAkX,GAAAjX,GACAqR,EACAW,IACA1N,KAAA2J,QAGAyR,EAAA3P,UAAA5P,qBAAA,WACA,MAAAqf,GAAAnO,QAAApD,KAAA0R,WAAAE,oBAGAH,EAAA3P,UAAA3P,sBAAA,WACA,MAAAof,GAAAnO,QAAApD,KAAA0R,WAAAG,qBAGAJ,EAAA3P,UAAA1P,iBAAA,WACA,GAAAwV,GAAA5H,KAAA0R,WAAAtf,kBACA,OAAAmf,GAAAnO,QAAAwE,IAGA6J,EAAA3P,UAAAzP,gBAAA,WACA,MAAAkf,GAAAxN,QACAnV,QAAA,GACAX,QAAA,qBAIAwjB,EAAA3P,UAAAxP,iBAAA,WACA,MAAAif,GAAAxN,QACAnV,QAAA,GACAX,QAAA,qBAIAwjB,EAAA3P,UAAAvP,cAAA,WACA,MAAAgf,GAAAxN,QACAnV,QAAA,GACAX,QAAA,qBAIAwjB,EAAA3P,UAAAtP,UAAA,WACA,MAAA+e,GAAAxN,QACAnV,QAAA,GACAX,QAAA,qBAIAwjB,EAAA3P,UAAArP,aAAA,WACA,MAAA8e,GAAAxN,QACAnV,QAAA,GACAX,QAAA,qBAIAwjB,EAAA3P,UAAA9R,MAAA,WACA,IAAAgQ,KAAA0R,WACA,MAAAH,GAAAnO,SAEApD,MAAA8Q,cAAA,EACA,KAEA,MADA9Q,MAAA0R,WAAA1hB,QACAuhB,EAAAnO,UACA,MAAAnX,GACA,MAAAslB,GAAAxN,QACAnV,QAAA3C,EAAAmB,KACAa,QAAAhC,EAAAgC,YAKAwjB,EAAA3P,UAAApP,kBAAA,SAAAkO,EAAAqH,GACA,GAAAjV,GAAAwe,EAAAH,SAAArR,KAAA0R,WAAAhf,kBAAAkO,EAAAqH,GACA,OAAAsJ,GAAAnO,QAAApQ,IAGAye,EAAA3P,UAAA5O,SAAA,SAAAuV,GACA,UAAA8I,GAAA,SAAAnO,EAAAW,GACA/D,KAAA0R,WAAAxe,SAAAuV,EAAArF,EAAAW,IACA1N,KAAA2J,QAGAyR,EAAA3P,UAAA7O,cAAA,SAAAoV,GACA,GAAArV,GAAAwe,EAAAH,SAAAhJ,EAAAla,QACA6R,MAAAyK,cAAA,iBAAAtc,QAAA6E,KAGAye,EAAA3P,UAAA3O,oBAAA,SAAAkV,GACArI,KAAAyK,cAAA,sBAAApC,EAAApa,UAGAwjB,EAAA3P,UAAA1O,eAAA,SAAAiV,GACA,GAAAsB,EAEAA,GADAtB,EAAAtW,WAAAsW,EAAAtW,qBAEAA,WACAA,UAAAsW,EAAAtW,oBACAC,OAAAqW,EAAAtW,UAAAC,OACAC,cAAAoW,EAAAtW,UAAAE,iBAKAF,UAAA,MAGAiO,KAAAyK,cAAA,iBAAAd,IAGA8H,EAAA3P,UAAAzO,uBAAA,SAAAgV,GACArI,KAAAyK,cAAA,yBAAApC,EAAApa,UAGAwjB,EAAA3P,UAAAxO,YAAA,SAAA+U,GAEArI,KAAAyK,cAAA,cAAApC,EAAA9U,SAGAke,EAAA3P,UAAAtO,eAAA,SAAA6U,GAEArI,KAAAyK,cAAA,iBAAApC,EAAA9U,SAGAke,EAAA3P,UAAArO,2BAAA,SAAA4U,GACArI,KAAAyK,cAAA,6BAAApC,EAAApa,UAIAlB,EAAAK,KAAA,yBACAL,EAAAud,SAAAmH,EACA1kB,EAAA+kB,MAAA,kBACA/kB,EAAAwd,OAAAD,UAAA,yFC7NA,GAAApB,GAAAzc,EAAA,kBAaAslB,EAAA,WACA7I,EAAAK,aAAAvJ,MAOA+R,GAAAjQ,UAAApO,KAAA,SAAA2W,GACA,GACA3d,GADAsX,IAEA,KAAAtX,EAAA,EAAAA,EAAAslB,aAAA/kB,OAAAP,GAAA,EACAsX,EAAAkB,KAAA8M,aAAAC,IAAAvlB,GAEA2d,GAAArG,IAQA+N,EAAAjQ,UAAAnO,IAAA,SAAAse,EAAA5H,GACA,IACA,GAAA6H,GAAAF,aAAAG,QAAAF,EACA5H,GAAA6H,GACA,MAAAjmB,GACAoe,EAAA,QAUA0H,EAAAjQ,UAAAlO,IAAA,SAAAqe,EAAAzkB,EAAA6c,GACA,GAAAvc,GAAAkkB,aAAAG,QAAAF,EACAD,cAAAI,QAAAH,EAAAzkB,GACA6c,EAAAvc,IAQAikB,EAAAjQ,UAAAjO,OAAA,SAAAoe,EAAA5H,GACA,GAAAvc,GAAAkkB,aAAAG,QAAAF,EACAD,cAAAK,WAAAJ,GACA5H,EAAAvc,IAOAikB,EAAAjQ,UAAAhO,MAAA,SAAAuW,GACA2H,aAAAle,QACAuW,KAGAtd,EAAAud,SAAAyH,EACAhlB,EAAAK,KAAA,2DC9EA,GAAAklB,GAAA7lB,EAAA,kCACA8lB,EAAA9lB,EAAA,sBACAyc,EAAAzc,EAAA,kBAUA+lB,EAAA,SAAAC,GACAzS,KAAAyS,UAAAtlB,OACA6S,KAAAvS,MAAAuS,KAAAyS,QAAAhlB,MAGA+kB,GAAAE,mBAEAF,EAAAG,UAAArV,OACAkV,EAAAI,eAAAtV,OAWAkV,EAAA1Q,UAAA5T,cAAA,SAAAmc,GACA,GAAAe,GAAA,GAAAmH,GAAAD,EAAAtS,KAAAyS,QAAAhlB,OACAuF,EAAAkW,EAAA5a,QACA+c,EAAArL,KAAA6S,WAAAzH,EACApL,MAAAyS,QAAA1kB,MAAAqd,GAEApL,KAAA8S,cACA9S,KAAAyS,QAAA3M,KAAA9F,KAAAyS,QAAAM,UACAxlB,KAAA,aACA4d,QAAA,SACA6H,KAAA,OACA/kB,SACAV,KAAA,WACAyF,QAIAwf,EAAAE,gBAAA1f,IACAmR,OAAA,EACAiH,SAGAA,EAAA1F,KAAA,QAAA1F,KAAA6S,WAAAxc,KAAA2J,KAAAoL,IAEAf,GACAlc,QAAAkd,EACAjd,WAAA4E,KAIAwf,EAAA1Q,UAAA+Q,WAAA,SAAAzH,GACA,GAAA6H,GAAA7H,EAAA8H,oBACA7H,EAAA4H,GAMA,OALA5H,GAAArb,MAAAijB,EAAAjjB,MACAqb,EAAApb,QAAAgjB,EAAAhjB,QACAgjB,EAAAhjB,QAAAob,EAAA,WACAD,EAAA+H,YAEA9H,GAaAmH,EAAA1Q,UAAAjL,UAAA,SAAA6S,EAAAC,GACA,aAAAA,EAAApc,KACAilB,EAAAE,gBAAA/I,EAAA3W,KACAogB,QAAA,EACAhQ,QAAAuG,EAAA0J,MACA3J,UAEA,UAAAC,EAAApc,WACAilB,GAAAE,gBAAA/I,EAAA3W,IACA,SAAA2W,EAAApc,KACAilB,EAAAE,gBAAA/I,EAAA3W,KACAgN,KAAA3R,YAAAsb,EAAA3W,GAAA,aAAA0W,GAEA,YAAAC,EAAApc,MACAmc,EAAAjd,QAAAkd,EAAA3W,GAAA2W,EAAA2J,WAaAd,EAAA1Q,UAAAzT,YAAA,SAAAD,EAAAic,EAAAX,GACA,GAAA6J,GAAAf,EAAAE,gBAAAtkB,GACAolB,GAAA9J,CAWA,IAPA8J,IACAxT,KAAAvS,YAAA,uCACAic,EAAA,GAAA6I,GAAAD,EAAAtS,KAAAvS,OACAuS,KAAAyS,QAAA1kB,MAAA2b,IAIA6J,KAAApP,MACAnE,KAAAvS,YAAA,yCAAAic,GACA1J,KAAAyS,QAAAgB,WAAA/J,EAAAtb,EAAAmlB,EAAAnI,MAAA,iBACAoH,GAAAE,gBAAAtkB,GACA4R,KAAAyS,QAAAM,UAAA/S,KAAAyS,QAAAiB,WAAAzI,MACAjL,KAAAyS,QAAA3M,KAAA9F,KAAAyS,QAAAM,UACAxlB,KAAA,aACA4d,QAAA,SACA6H,KAAA,OACA/kB,SACAV,KAAA,QACAyF,GAAA5E,SAIA,KAAAmlB,MAAAH,OAiBA,MAAApT,MAAA8S,cACA9S,KAAAvS,MAAAC,KAAA,6CAAAU,GACA4R,KAAAyS,QAAA3M,KAAA9F,KAAAyS,QAAAM,UACAxlB,KAAA,aACA4d,QAAA,SACA6H,KAAA,OACA/kB,SACAV,KAAA,OACAyF,GAAA5E,KAGAsb,EAAAhE,KAAA,iBAAAiO,EAAAC,GACAA,EAAA5T,KAAA6S,WAAAc,KACAtd,KAAA2J,KAAA0J,EAAAW,IACArK,KAAAyS,QAAAgB,WAAA/J,EACA,UACA1J,KAAAyS,QAAAoB,IAAAC,eAAA9T,KAAAyS,QAAAM,UACA3kB,cACAokB,GAAAE,gBAAAtkB,KAGA4R,KAAAvS,MAAAE,KAAA,kCAAAS,GACA4R,KAAAvS,MAAAH,IAAAklB,EAAAE,qBACArI,KAvCArK,MAAAvS,YAAA,oCACAuS,KAAAyS,QAAAgB,WACA/J,EACA8J,EAAA,UAAAplB,EACAmlB,EAAA7J,OACAtb,GACAmlB,EAAAnQ,SACA7V,KAAA,eACA4d,QAAA,OACA6H,KAAA,OACA/kB,SACAV,KAAA,OACAyF,GAAA5E,WAGAokB,GAAAE,gBAAAtkB,GA4BAsb,EAAAqK,aACA1J,EAAArK,KAAA6S,WAAAnJ,IAEAW,KASAmI,EAAA1Q,UAAAgR,WAAA,WACA,MAAA9S,MAAAyS,QAAAM,UAAA/S,KAAAyS,QAAAiB,WAAAzI,MAYAuH,EAAA1Q,UAAArV,QAAA,SAAA6mB,EAAAjmB,EAAA8P,GACA,GAAA6C,KAAA8S,cAAAN,EAAAI,eAAA,CAIA,GAAAoB,GACAxB,EAAAI,eAAAqB,WAAA5mB,EAAA8P,EAGA6C,MAAAyS,QAAA3M,KAAA9F,KAAAyS,QAAAM,UACAxlB,KAAA,aACA4d,QAAA,SACA6H,KAAA,OACA/kB,SACAV,KAAA,UACA+lB,WACAtgB,GAAAghB,SAIAhU,MAAAvS,MAAAG,MAAA,mGAEAuP,EAAAG,QACA1O,QAAA,iBACAX,QAAA,8CAaAukB,EAAA1Q,UAAAxT,MAAA,SAAA6O,GAEAA,EAAAqV,EAAAG,YAWAH,EAAA1Q,UAAAvT,UAAA,SAAAnB,EAAA+P,GACAA,EAAA6C,KAAAyS,QAAAhlB,MAAAc,UAAAnB,KAUAolB,EAAA1Q,UAAAoS,MAAA,SAAAlhB,EAAA4f,GACAJ,EAAAG,UAAA3f,EACAwf,EAAAI,kBAGA7lB,EAAAud,SAAAkI,EACAzlB,EAAAK,KAAA,OACAL,EAAAwd,OAAApd,QAAA,2GCjRA,GAAA+b,GAAAzc,EAAA,kBACA8kB,EAAA9kB,EAAA,eAAA8X,QAeA4P,EAAA,SAAA7J,EAAAlB,EAAAqB,GACAzK,KAAAsK,WACAtK,KAAAyK,gBACAvS,WAAAkR,EAAAkB,SAAAra,QAAAoG,KACA+S,EAAAkB,SACAtK,KACAA,KAAAhQ,MAAAqG,KAAA2J,KAAA,eACA,GACAA,KAAA7S,OAAAic,EAAAjc,OACA+b,EAAAK,aAAAvJ,MAyBAmU,GAAA7J,UACA8J,SAAA9W,OACA+W,UACAvd,OAAA,SAAA9D,EAAA5F,EAAAknB,EAAAC,EAAA3d,GACA,GACA4d,GACAC,EAFAC,EAAAjY,SAAAkY,IA8BA,OA1BA3U,MAAAoU,WACApU,KAAAoU,SAAA,SAAAzK,GACA,GAAAjd,EACA,KAAAA,IAAAsT,MAAAqU,OACArU,KAAAqU,OAAApI,eAAAvf,IACAsT,KAAAqU,OAAA3nB,GAAAgd,SAAAC,EAAAD,QACA1J,KAAAqU,OAAA3nB,GAAAkK,YAAA+S,EAAA9T,OAGAQ,KAAA2J,MACAwC,OAAAoK,iBAAA,UAAA5M,KAAAoU,UAAA,IAKA3X,SAAAmY,eAAAxnB,KACAsnB,EAAAjY,SAAAmY,eAAAxnB,IAGAonB,EAAA/X,SAAAoY,cAAA,OACAL,EAAA1C,MAAAgD,MAAA,OACAN,EAAA1C,MAAAiD,OAAA,OACAP,EAAA1C,MAAAkD,QAAA,WAEAN,EAAAO,YAAAT,GAEA,GAAAjD,GAAA,SAAAnO,EAAAW,GACA0Q,EAAAhY,SAAAoY,cAAA,UACAJ,EAAAS,aAAA,uCACAT,EAAA3C,MAAAgD,MAAA,OACAL,EAAA3C,MAAAiD,OAAA,OACAN,EAAA3C,MAAAqD,OAAA,IACAV,EAAA3C,MAAAsD,WAAA,cACAX,EAAAY,IAAAf,EACAG,EAAA7H,iBAAA,OAAAxJ,GAAA,GACAqR,EAAA7H,iBAAA,QAAA7I,GAAA,GAEAyQ,EAAAS,YAAAR,GAEAzU,KAAAqU,OAAArhB,IACA4D,cACA8d,YACAF,OACA9K,OAAA+K,EAAAa,gBAEAjf,KAAA2J,QAEAnJ,UAAA,SAAA7D,EAAA/E,GACA+R,KAAAqU,OAAArhB,GAAA0W,OAAA9S,YAAA3I,EAAA,MAEAgC,QAAA,SAAA+C,GACAgN,KAAAqU,OAAArhB,GAAA0hB,UAAAa,YAAAvV,KAAAqU,OAAArhB,GAAAwhB,YACAxU,MAAAqU,OAAArhB,GAEA,IAAA6O,OAAAnO,KAAAsM,KAAAqU,QAAApnB,SACAuV,OAAAgT,oBAAA,UAAAxV,KAAAoU,UAAA,GACApU,KAAAoU,SAAA9W,UAYA6W,EAAArS,UAAApL,KAAA,SAAAtJ,EAAAid,GACA,GAAArK,KAAAhN,GACA,MAAAqX,GAAA/M,QACA1O,QAAA,eACAX,QAAA,oDAGA+R,MAAAhN,GAAAkW,EAAA5a,OAEA,IAAAiY,GAAAvG,KAAA7S,OAAAmmB,SAAAmC,MACAC,IACA,OAAAnP,MAAAnZ,QAOAmZ,EAAAnZ,GAAAuoB,MAAApP,EAAAnZ,GAAAwoB,OACAF,EAAAnP,EAAAnZ,GAAAwoB,MAAAC,OAAAtP,EAAAnZ,GAAAuoB,MACApE,EAAA1N,IAAA6R,EAAAtI,IAAA,SAAA0I,GACA,MAAA9V,MAAA7S,OAAA4oB,SAAApiB,IAAAqM,KAAA7S,OAAA6oB,WAAAF,IACAzf,KAAA2J,QAAAnC,KAAA,SAAA+X,GACA5V,KAAAsK,SAAAxT,OAAAkJ,KAAAhN,GACA5F,EACAwoB,IAAA3oB,OAAA,GACA2oB,EACA5V,KAAAyK,cAAApU,KAAA2J,KAAA,YAAAnC,KACA,SAAAoF,GAEAA,KACA5M,QAAAgU,GACAA,EAAAhU,QAAAiH,UAEAjH,KAAA2J,MAAA,SAAArR,GACAqR,KAAA7S,OAAAM,MAAAG,MAAA,uBAAAR,EAAA,KAAAuB,GACA0b,EAAA/M,QACA1O,QAAA,iBACAX,QAAA,+BAAAU,OAIA0b,EAAA/M,QACA1O,QAAA,eACAX,QAAA,mBAAAb,KAhCAid,EAAA/M,QACA1O,QAAA,eACAX,QAAA,mBAAAb,KA+CA+mB,EAAArS,UAAAnL,SAAA,SAAA0T,GACAA,GAAA,IAOA8J,EAAArS,UAAAlL,YAAA,SAAA+S,EAAAU,GACA,MAAArK,MAAAhN,IAMAgN,KAAAsK,SAAAzT,UAAAmJ,KAAAhN,GAAA2W,OACAU,MANAA,EAAA/M,QACA1O,QAAA,WACAX,QAAA,gDAWAkmB,EAAArS,UAAA9R,MAAA,SAAAqa,GACA,MAAArK,MAAAhN,IAMAgN,KAAAsK,SAAAra,QAAA+P,KAAAhN,UACAgN,MAAAhN,OAEAqX,MARAA,EAAA/M,QACA1O,QAAA,WACAX,QAAA,sCAgBAkmB,EAAAxI,SAAA,SAAAsK,GACA,GAAA3L,GAAA2L,EAAA,GAAAA,GAAA9B,EAAA7J,QACAvd,GAAAud,SAAA6J,EAAA9d,KAAA2J,KAAAsK,IAGAvd,EAAAud,SAAA6J,EAAA9d,KAAA2J,KAAAmU,EAAA7J,UACAvd,EAAAK,KAAA,YACAL,EAAA4e,SAAAwI,EAAAxI,SACA5e,EAAAwd,OAAAD,UAAA,EAAAnd,QAAA,+DC7OA,GAAA+oB,GAAA,KACAC,GAAA,EAWAC,EAAA,SAAAhN,EAAAqB,EAAArQ,EAAAic,EAAArgB,GACA,GACApI,GADA0oB,EAAA,IAEAtW,MAAAuW,OAAAJ,EACA,mBAAAngB,GACAsgB,EAAAtgB,EACA,OAAAkgB,EACAI,EAAAJ,EACA,mBAAAM,WACAF,EAAAE,UAEAlN,QAAA1b,MAAA,uCAGAoS,KAAAyK,eACA,KAEAzK,KAAAyW,UADAJ,EACA,GAAAC,GAAAlc,EAAAic,GAEA,GAAAC,GAAAlc,GAEA4F,KAAAyW,UAAAzF,WAAA,cACA,MAAA/kB,GASA,MARA2B,MAEAA,EAAAgB,QADA3C,YAAAyqB,aACA,SAEAzqB,EAAAmB,KAEAQ,EAAAK,QAAAhC,EAAAgC,YACAwc,GAAA,UAAA7c,GAIAoS,KAAAuW,QACAvW,KAAAyW,UAAAjR,GAAA,UAAAxF,KAAAnJ,UAAAR,KAAA2J,OACAA,KAAAyW,UAAAjR,GAAA,OAAAxF,KAAAlJ,OAAAT,KAAA2J,OAEAA,KAAAyW,UAAAjR,GAAA,QAAAxF,KAAA/P,QAAAoG,KAAA2J,MACAnT,KAAA,EACAmK,OAAA,UACAC,UAAA,KAEA+I,KAAAyW,UAAAjR,GAAA,QAAAxF,KAAAjJ,QAAAV,KAAA2J,SAEAA,KAAAyW,UAAA/lB,OAAAsP,KAAAlJ,OAAAT,KAAA2J,MACAA,KAAAyW,UAAA7lB,QAAAoP,KAAA/P,QAAAoG,KAAA2J,MACAA,KAAAyW,UAAA5lB,UAAAmP,KAAAnJ,UAAAR,KAAA2J,MACAA,KAAAyW,UAAA9lB,QAAAqP,KAAAjJ,QAAAV,KAAA2J,OAIAoW,GAAAtU,UAAA9T,KAAA,SAAA6H,EAAAwU,GACA,GACAzb,GACAX,EAFA0oB,EAAA9gB,EAAA9G,MAAA8G,EAAA7G,QAAA6G,EAAA5G,MAIA,IAAA0nB,EACA,IAEA3W,KAAAuW,QAAAI,YAAA7G,aACA9P,KAAAyW,UAAAzoB,KACA,GAAA2c,YAAAgM,IACA3nB,QAAA,GACAgR,KAAAjJ,QAAAV,KAAA2J,OAGAA,KAAAyW,UAAAzoB,KAAA2oB,GAEA,MAAA1qB,GAEA2C,EADA3C,YAAAyqB,aACA,SAEA,gBAEAzoB,EAAAhC,EAAAgC,YAGAW,GAAA,WACAX,EAAA,wCAGAW,GACAyb,EAAA/M,QACA1O,UACAX,YAGAoc,KAIA+L,EAAAtU,UAAArR,cAAA,SAAA4Z,GACAA,EAAArK,KAAAyW,UAAAxH,aAGAmH,EAAAtU,UAAAtS,kBAAA,SAAA6a,GACAA,EAAArK,KAAAyW,UAAApI,iBAGA+H,EAAAtU,UAAA9R,MAAA,SAAAnD,EAAAmK,EAAAqT,GACA,IACAxd,GAAAmK,EACAgJ,KAAAyW,UAAAzmB,MAAAnD,EAAAmK,GAEAgJ,KAAAyW,UAAAzmB,QAEAqa,IACA,MAAApe,GACA,GAAA2qB,EAEAA,GADA3qB,YAAAyqB,aACA,SAEA,iBAEArM,EAAA/M,QACA1O,QAAAgoB,EACA3oB,QAAAhC,EAAAgC,YAKAmoB,EAAAtU,UAAAhL,OAAA,WACAkJ,KAAAyK,cAAA,WAGA2L,EAAAtU,UAAAjL,UAAA,SAAAwR,EAAAkC,GACA,GAAA1U,KACAmK,MAAAuW,QAAAhM,KAAAvb,OACA6G,EAAA5G,OAAA,GAAA0b,YAAAtC,GAAApZ,OACA+Q,KAAAuW,OACA1gB,EAAA9G,KAAAsZ,EACA,mBAAAyH,cAAAzH,EAAAxS,eAAAia,aACAja,EAAA5G,OAAAoZ,EAAAxS,KACA,mBAAAka,OAAA1H,EAAAxS,eAAAka,MACAla,EAAA7G,OAAAqZ,EAAAxS,KACA,gBAAAwS,GAAAxS,OACAA,EAAA9G,KAAAsZ,EAAAxS,MAEAmK,KAAAyK,cAAA,YAAA5U,IAGAugB,EAAAtU,UAAA/K,QAAA,WAGAiJ,KAAAyK,cAAA,YAGA2L,EAAAtU,UAAA7R,QAAA,SAAAoY,GACArI,KAAAyK,cAAA,WACA5d,KAAAwb,EAAAxb,KACAmK,OAAAqR,EAAArR,OACAC,SAAAoR,EAAApR,YAGAlK,EAAAud,SAAA8L,EACArpB,EAAAK,KAAA,iBACAL,EAAA8pB,UAAA,SAAAC,EAAAP,GACAL,EAAAY,EACAX,EAAAI,4BC5KA,GAAAhF,GAAA9kB,EAAA,eAAA8X,QACAwS,EAAA,KAEAC,EAAA,SAAA5N,EAAAqB,GACA,YACA,oBAAAjI,SACA,mBAAAA,QAAAyU,gBACA,OAAAF,EACAA,EAAAvU,OAAAyU,eACA,mBAAAA,iBACA,OAAAF,EACAA,EAAAE,eACA,OAAAF,GACAzN,QAAA1b,MAAA,4CAGAoS,KAAAkX,eAAAzM,EACAzK,KAAAmX,KAAA,GAAAJ,GAEA7e,WAAAkR,EAAAkB,SAAAra,QAAAoG,KACA+S,EAAAkB,SACAtK,KACAA,KAAA5I,MAAAf,KAAA2J,OACA,GAEAA,KAAAoX,SACA,YACA,WACA,QACA,QACA,OACA,UACA,UACA,oBAEApX,KAAAqX,kBAIAL,GAAAlV,UAAA5K,KAAA,SAAAogB,EAAAld,EAAAmd,EAAAC,EAAAC,GACA,YACA,0BAAAF,SAAA,EACAhG,EAAAxN,QACAnV,QAAA,qBACAX,QAAA,wCAKA+R,KAAAmX,KAAAjgB,KAAAogB,EAAAld,GAAA,EAAAod,EAAAC,GACAlG,EAAAnO,YAGA4T,EAAAlV,UAAA9T,KAAA,SAAA6H,GACA,YAUA,OATAA,aAAAgM,QAEAhM,EAAAoW,eAAA,UACAjM,KAAAmX,KAAAnpB,KAAA6H,EAAAsB,QACAtB,EAAAoW,eAAA,UACAjM,KAAAmX,KAAAnpB,KAAA6H,EAAA5G,QAEA+Q,KAAAmX,KAAAnpB,OANAgS,KAAAmX,KAAAnpB,OAQAujB,EAAAnO,WAGA4T,EAAAlV,UAAA1K,MAAA,WACA,YAEA,OADA4I,MAAAmX,KAAA/f,QACAma,EAAAnO,WAGA4T,EAAAlV,UAAAzK,kBAAA,SAAAqgB,GACA,YACA,OAAAnG,GAAAnO,QAAApD,KAAAmX,KAAA9f,kBAAAqgB,KAGAV,EAAAlV,UAAAxK,sBAAA,WACA,YACA,OAAAia,GAAAnO,QAAApD,KAAAmX,KAAA7f,0BAGA0f,EAAAlV,UAAAvK,iBAAA,SAAAmgB,EAAAlqB,GACA,YAEA,OADAwS,MAAAmX,KAAA5f,iBAAAmgB,EAAAlqB,GACA+jB,EAAAnO,WAGA4T,EAAAlV,UAAAtK,iBAAA,SAAAmgB,GACA,YAEA,OADA3X,MAAAmX,KAAA3f,iBAAAmgB,GACApG,EAAAnO,WAGA4T,EAAAlV,UAAArR,cAAA,WACA,YACA,OAAA8gB,GAAAnO,QAAApD,KAAAmX,KAAAlI,aAGA+H,EAAAlV,UAAArK,YAAA,WACA,YACA,eAAAuI,KAAAmX,KAAAxQ,SACA4K,EAAAnO,QAAA,MACA,SAAApD,KAAAmX,KAAAS,cAAA,KAAA5X,KAAAmX,KAAAS,aACArG,EAAAnO,SAAAjM,OAAA6I,KAAAmX,KAAAxQ,WACA,gBAAA3G,KAAAmX,KAAAS,aACArG,EAAAnO,SAAAnU,OAAA+Q,KAAAmX,KAAAxQ,WACA,SAAA3G,KAAAmX,KAAAS,aACArG,EAAAnO,SAAA1L,OAAAsI,KAAAmX,KAAAxQ,WAGA4K,EAAAxN,OAAA,+CAGAiT,EAAAlV,UAAAnK,gBAAA,WACA,YACA,OAAA4Z,GAAAnO,QAAApD,KAAAmX,KAAAU,eAGAb,EAAAlV,UAAAlK,eAAA,WACA,YACA,OAAA2Z,GAAAnO,QAAApD,KAAAmX,KAAAW,cAGAd,EAAAlV,UAAAjK,gBAAA,WACA,YACA,OAAA0Z,GAAAnO,QAAApD,KAAAmX,KAAAS,eAGAZ,EAAAlV,UAAAhK,gBAAA,SAAAvK,GACA,YAEA,OADAyS,MAAAmX,KAAAS,aAAArqB,EACAgkB,EAAAnO,WAGA4T,EAAAlV,UAAA/J,UAAA,WACA,YACA,OAAAwZ,GAAAnO,QAAApD,KAAAmX,KAAA1c,SAGAuc,EAAAlV,UAAA9J,cAAA,WACA,YACA,OAAAuZ,GAAAnO,QAAApD,KAAAmX,KAAAY,aAGAf,EAAAlV,UAAA7J,WAAA,WACA,YACA,OAAAsZ,GAAAnO,QAAApD,KAAAmX,KAAAa,UAGAhB,EAAAlV,UAAA5J,WAAA,SAAA8f,GACA,YAEA,OADAhY,MAAAmX,KAAAa,UACAzG,EAAAnO,WAGA4T,EAAAlV,UAAA3J,mBAAA,WACA,YACA,OAAAoZ,GAAAnO,QAAApD,KAAAmX,KAAAc,kBAGAjB,EAAAlV,UAAA1J,mBAAA,SAAA8f,GACA,YAEA,OADAlY,MAAAmX,KAAAc,gBAAAC,EACA3G,EAAAnO,WAGA4T,EAAAlV,UAAAuV,gBAAA,WACA,YAEArX,MAAAoX,QAAA5Q,QAAA,SAAA+J,GACAvQ,KAAAmX,KAAAvK,iBAAA2D,EAAA,SAAAA,EAAAlI,GACArI,KAAAkX,eAAA,KAAA3G,EAAAlI,IACAhS,KAAA2J,KAAAuQ,IAAA,IACAla,KAAA2J,OAGAA,KAAAoX,QAAA5Q,QAAA,SAAA+J,GACAvQ,KAAAmX,KAAAgB,OAAAvL,iBAAA2D,EAAA,SAAAA,EAAAlI,GACArI,KAAAkX,eAAA,WAAA3G,EAAAlI,IACAhS,KAAA2J,KAAAuQ,IAAA,IACAla,KAAA2J,QAGAjT,EAAAK,KAAA,WACAL,EAAAud,SAAA0M,EACAjqB,EAAA+kB,MAAA,kBACA/kB,EAAAwd,OAAAD,UAAA,GACAvd,EAAAqrB,QAAA,SAAAtB,GACA,YACAC,GAAAD,yCChMA,GAEAuB,IAFA5rB,EAAA,eAAA8X,QAEA,kCAEA+T,GAAA,CAKA,oBAAA9V,wBAAA+V,UACA/V,OAAAoK,mBACApK,OAAAoK,iBAAA,kBACA,YACA0L,IAAA,IACA,GAEA9V,OAAAwP,cACAxP,OAAA+V,SAAAC,KAAAC,QAAAJ,GAAA,IAEA7V,OAAAwP,aAAAI,QAAAiG,EAAA,GAAAnW,OACAM,OAAAxS,SAIA,IAAA0oB,GAAA,WACA,YACA1Y,MAAA2Y,aAgBAD,GAAA5W,UAAAtT,cAAA,SAAAsd,EAAAzB,GACA,YACA,uBAAA7H,iBAAA8V,EAAA,CACA,GAAAM,GAAApW,OAAA+V,SAAAzlB,SAAA,KAAA0P,OAAA+V,SAAAtiB,KACAuM,OAAA+V,SAAAM,QACA,IAAA/M,EAAA2M,QAAAG,GAAA,GAKA,MAJAvO,IACA5b,SAAAmqB,EACAlqB,MAAA2pB,EAAA7K,KAAAC,YAEA,EAIA,UAaAiL,EAAA5W,UAAAjT,eAAA,SAAAkd,EAAAC,EAAA3B,GACA,YACA,IAAA+J,GAAApU,KAAA8Y,gBAAAziB,KAAA2J,KAAAqK,EAAA2B,EACAhM,MAAA2Y,UAAA3M,EAAAtd,OAAA0lB,EACA5R,OAAAoK,iBAAA,UAAAwH,GAAA,GAEA5R,OAAAtL,KAAA6U,IAWA2M,EAAA5W,UAAAgX,gBAAA,SAAAzO,EAAA2B,EAAArC,GACA,YACAA,GAAAvP,IAAAqe,QAAAzM,EAAAtd,OAAA,KACA8T,OAAAgT,oBAAA,UAAAxV,KAAA2Y,UAAA3M,EAAAtd,QAAA,SACAsR,MAAA2Y,UAAA3M,EAAAtd,OACA2b,EAAAV,EAAAvP,OAQAjN,EAAAJ,QAAA2rB,qDC/FA,QAAAK,KACA,YACA/Y,MAAA2Y,aANA,GAEAN,IAFA5rB,EAAA,eAAA8X,QAEA,iCAoBAwU,GAAAjX,UAAAtT,cAAA,SAAAsd,EAAAzB,GACA,YACA,uBAAAjG,SAAA3H,SACA,OAAA/P,GAAA,EAAAA,EAAAof,EAAA7e,OAAAP,IAEA,QAAAof,EAAApf,GAAA+rB,QAAA,YACA,IAAA3M,EAAApf,GAAA+rB,QAAA,cACA3M,EAAApf,GAAA+rB,QAAA,sBAKA,MAJApO,IACA5b,SAAAqd,EAAApf,GACAgC,MAAA2pB,EAAA7K,KAAAC,YAEA,CAIA,WAaAsL,EAAAjX,UAAAjT,eAAA,SAAAkd,EAAAC,EAAA3B,GACA,YACA,IAAAoK,GAAArQ,EAAA3H,SAAAoY,cAAA,SACAJ,GAAAY,IAAArJ,EAAAvd,SACAgmB,EAAA3C,MAAAkD,QAAA,OAEA5Q,EAAA3H,SAAAkY,KAAAM,YAAAR,GACAA,EAAA7H,iBAAA,kBACA5M,KAAA2Y,UAAA3M,EAAAtd,OAAA2b,EACA7H,OAAAtL,KAAA6U,GAEA0I,EAAAa,cAAA1e,YAAAoV,EAAAtd,MAAA,MACA2H,KAAA2J,OAEAwC,OAAAoK,iBAAA,mBAAA6H,EAAA9K,GACA,GAAAA,EAAA9T,MAAA8T,EAAA9T,KAAAoc,KAAAtI,EAAA9T,KAAAuE,KAAA4F,KAAA2Y,UAAAhP,EAAA9T,KAAAoc,KAAA,CACAjS,KAAA2Y,UAAAhP,EAAA9T,KAAAoc,KAAAtI,EAAA9T,KAAAuE,WACA4F,MAAA2Y,UAAAhP,EAAA9T,KAAAoc,IACA,KACAxV,SAAAkY,KAAAY,YAAAd,GACA,MAAAxoB,GACAqd,QAAA3b,KAAA1B,MAGAoK,KAAA2J,KAAAyU,IAAA,IAOAtnB,EAAAJ,QAAAgsB,0JClFA,GAAAxH,GAAA9kB,EAAA,eAAA8X,QASAyU,EAAA,SAAAvrB,GACAuS,KAAAvS,QACAuS,KAAAiZ,QACAjZ,KAAAkZ,aACAlZ,KAAAmZ,WASAH,GAAAlX,UAAAnO,IAAA,SAAAtG,GACA,MAAA2S,MAAAiZ,KAAA5rB,IAIAD,KAAAC,EACA+rB,WAAApZ,KAAAiZ,KAAA5rB,KAJA,GAcA2rB,EAAAlX,UAAAlO,IAAA,SAAAxG,EAAAgsB,GACApZ,KAAAiZ,KAAA7rB,GAAAgsB,GAcAJ,EAAAlX,UAAA6J,SAAA,SAAAve,EAAA8C,EAAA4hB,EAAAvH,GACA,GAAA7d,GACA2sB,CAQA,IANArZ,KAAAkZ,UAAA9rB,IACA8C,cACA4hB,SAAA,sBACAvH,aAGAvK,KAAAmZ,QAAA/rB,GAAA,CACA,IAAAV,EAAA,EAAAA,EAAAsT,KAAAmZ,QAAA/rB,GAAAH,OAAAP,GAAA,EACA2sB,KACA9O,EAAApd,SACAksB,EAAAlsB,OAAA6S,KAAAmZ,QAAA/rB,GAAAV,GAAAuO,MAEAsP,EAAAhE,SACA8S,EAAA9S,OAAAvG,KAAAmZ,QAAA/rB,GAAAV,GAAAuO,KAAAsL,QAEAvG,KAAAmZ,QAAA/rB,GAAAV,GAAA0W,SACAiW,OACAC,KAAAppB,EAAAmG,QAAAgjB,WAGArZ,MAAAmZ,QAAA/rB,KAYA4rB,EAAAlX,UAAAyX,QAAA,SAAAnsB,EAAA6N,GACA,UAAAsW,GAAA,SAAAnO,EAAAW,GACA,GAAA/D,KAAAiZ,KAAA7rB,GACA,GAAA4S,KAAAkZ,UAAA9rB,GAAA,CACA,GAAAisB,KACArZ,MAAAkZ,UAAA9rB,GAAAmd,MAAApd,SACAksB,EAAAlsB,OAAA8N,GAEA+E,KAAAkZ,UAAA9rB,GAAAmd,MAAAhE,SACA8S,EAAA9S,OAAAtL,EAAAsL,QAEAnD,GACAiW,OACAC,KAAAtZ,KAAAkZ,UAAA9rB,GAAA8C,YAAAmG,QAAAgjB,SAGArZ,MAAAmZ,QAAA/rB,KACA4S,KAAAmZ,QAAA/rB,OAEA4S,KAAAmZ,QAAA/rB,GAAA8X,MACA9B,UACAW,SACA9I,aAIA+E,MAAAvS,MAAAE,KAAA,uCAAAP,GACA2W,EAAA,OAEA1N,KAAA2J,QAUAgZ,EAAAlX,UAAA0X,YAAA,SAAApsB,EAAAkd,EAAArP,GACA,MAAA+E,MAAAuZ,QAAAnsB,EAAA6N,GAAA4C,KAAA,SAAAoN,GACA,GAAAV,GAAAvK,KAAAkZ,UAAA9rB,GAAAmd,MACA0I,EAAA3I,EAAA4I,mBACA3I,GAAAD,WACAW,EAAAoO,KAAA/O,SAAA2I,GAEAA,IAAAjT,KAAAkZ,UAAA9rB,GAAA0kB,OAAA7G,EAAAqO,OACAjjB,KAAA2J,MAAA,SAAArR,GACAqR,KAAAvS,MAAAG,MAAA,2BAAAe,IACA0H,KAAA2J,QAMAgZ,EAAAlX,UAAA2X,QAAA,WACA,GAAAC,GACAC,EAAA,SAAAC,GACAA,EAAA7V,SAEA,KAAA2V,IAAA1Z,MAAAmZ,QACAnZ,KAAAmZ,QAAAlN,eAAAyN,IACA1Z,KAAAmZ,QAAAO,GAAAlT,QAAAmT,SAGA3Z,MAAAmZ,SAMAhsB,EAAAJ,QAAAisB,0CC/JA,GAAAa,GAAA,WACA,YACA7Z,MAAA8Z,WAAArtB,EAAA,2BAYAM,GAAA4e,SAAA,SAAAuN,EAAAa,GACA,YACA,IAAAC,GAAA,GAAAH,EACAG,GAAAF,WAAAtT,QAAA,SAAAnZ,GACAA,KAAAD,MAAAC,OACA0sB,EAAAnmB,IAAAvG,EAAAD,KAAAC,SAIA6rB,EAAA1S,QAAA,SAAA8D,GACAA,EAAAld,MACA2sB,EAAApO,SAAArB,EAAAld,KACAkd,WACAA,EAAAwH,MACAxH,EAAAC,4DC5BA,GAAArB,GAAAzc,EAAA,UAWA8lB,EAAA,SAAA0H,EAAAxsB,GACAuS,KAAAhN,GAAAuf,EAAA2H,SACAla,KAAAia,eACAja,KAAAvS,QACAyb,EAAAK,aAAAvJ,MAEAA,KAAAma,UACAna,KAAAoa,iBACApa,KAAAqa,iBACAra,KAAAsa,SASA/H,GAAAzQ,UAAAjL,UAAA,SAAA6S,EAAAzb,GACA,eAAAyb,GAAAzb,EAAAssB,QACAva,KAAAwa,YAAAvsB,EAAAE,QACA6R,KAAA8F,KAAA9F,KAAAwa,aACAjtB,KAAA,uBACAY,QAAAF,EAAAssB,UAEAva,KAAA8F,KAAA,aACA,gBAAA4D,GAAA,UAAAzb,EAAAV,KACAyS,KAAAkL,eAAAjd,EAAAE,YACA,gBAAAub,GAAA,UAAAzb,EAAAV,WACAyS,MAAAkL,eACAlL,KAAAmT,cACA,CACA,IAAAnT,KAAAwa,aAAAvsB,EAAAE,QAGA,MAFA6R,MAAAwa,YAAAvsB,EAAAE,YACA6R,MAAA8F,KAAA,QAGA,cAAA7X,EAAAV,MAAAU,EAAAwsB,GAEA,WADAza,MAAA0a,SAAAzsB,EAAAwsB,GAGA,cAAAxsB,EAAAV,KAEA,WADAyS,MAAApS,MAAAK,EAAAwsB,GAAAxsB,UAGA,IAAAA,EAAAwsB,GACAza,KAAAsa,MAAArsB,EAAAwsB,IACAza,KAAAsa,MAAArsB,EAAAwsB,IAAA,UAAAxsB,WAEA+R,KAAAvS,MAAAE,KAAA,iDAAAM,EAAAwsB,QAEA,CACA,CAAAxsB,UACAib,EAAAyR,SAAA3a,KAAAsa,MAAA,SAAArH,GACAA,EAAA,UAAAhlB,gBAiBAskB,EAAAzQ,UAAAiS,aAAA,WACA,GAAA6G,GAAA5a,KAAA6a,0BACAxB,EAAA1X,MAAAG,UAAA2F,MAAAza,KAAAsV,UAAA,EAIA,OAHA+W,GAAApsB,SACA2tB,IAAAvkB,KAAA+T,MAAAwQ,MAAA/E,OAAAwD,KAEA,GAAAuB,IAWArI,EAAAzQ,UAAAgZ,YAAA,SAAA1tB,GACA,gBAAA2tB,EAAAvK,GAEA,qBAAAuK,IAAAzd,SAAAkT,EAEA,WADAxQ,MAAA0F,KAAAtY,EAAA2tB,EAKA,IAAAtP,GAAAre,EAAA,UACA8b,GAAAyR,SAAA3a,KAAAma,OAAA,SAAApoB,EAAAiB,GACA,MAAAjB,KAAAgpB,GACA/a,KAAAyL,GAAAzY,GACAgN,KAAAyL,GAAAzY,GAAAkS,KAAAsL,GAEAxQ,KAAAyL,GAAAzY,IAAAwd,IAEA,GANA,QAQAna,KAAA2J,QACA3J,KAAA2J,OAQAuS,EAAAzQ,UAAAoR,kBAAA,WACA,GAAAlF,GAAA,SAAA2F,GACA,GAAA0F,GAAA1X,MAAAG,UAAA2F,MAAAza,KAAAsV,UAAA,EACA,OAAA+W,GAAApsB,OAAA,EACA0mB,EAAAI,aAAA3J,MAAAuJ,EAAA0F,GAEA1F,EAAAI,gBAEA1d,QAAA2J,KAuBA,OArBAgO,GAAAhe,MAAA,SAAAijB,GACAA,EACA/J,EAAAyR,SAAA3a,KAAAma,OAAA,SAAApoB,EAAAiB,GACA,MAAAjB,KAAAkhB,GACAjT,KAAA0a,SAAA1nB,GACAgN,KAAA8F,KAAA9F,KAAAwa,aACAjtB,KAAA,QACAktB,GAAAznB,KAEA,GANA,QAQAqD,KAAA2J,OAGAA,KAAAmT,WAEA9c,KAAA2J,MAEAgO,EAAA/d,QAAA+P,KAAA8a,YAAA,SACA9M,EAAAjX,QAAAiJ,KAAA8a,YAAA,SAEA9M,GAUAuE,EAAAzQ,UAAA+Y,wBAAA,WACA,GAAA7nB,GAAAuf,EAAA2H,QACA,OAAAla,MAAAia,aAAA5jB,QAEA,SAAArD,EAAAgoB,EAAAC,GACAjb,KAAAma,OAAAnnB,GAAAgoB,EACAhb,KAAAsa,MAAAtnB,GAAAioB,GACA5kB,KAAA2J,KAAAhN,GACAgN,KAAAkb,OAAA7kB,KAAA2J,KAAAhN,GACAgN,KAAAvS,QAYA8kB,EAAAzQ,UAAAoZ,OAAA,SAAAT,EAAA9Q,EAAA9F,GACAA,IACA4W,GAAA,GAEAza,KAAAwa,YACAxa,KAAA8F,KAAA9F,KAAAwa,aAAAC,KAAAltB,KAAA,UAAAU,QAAA0b,IAEA3J,KAAA0F,KAAA,QAAA1F,KAAAkb,OAAA7kB,KAAA2J,KAAAya,EAAA9Q,KASA4I,EAAAzQ,UAAA4Y,SAAA,SAAA1nB,GACAgN,KAAAsa,MAAAtnB,IACAgN,KAAAsa,MAAAtnB,GAAA,eAEAgN,MAAAsa,MAAAtnB,GACAgN,KAAAoa,cAAApnB,IACAkW,EAAAyR,SAAA3a,KAAAoa,cAAApnB,GAAA,SAAA0mB,GACAA,YAGA1Z,MAAAma,OAAAnnB,SACAgN,MAAAoa,cAAApnB,SACAgN,MAAAqa,cAAArnB,IASAuf,EAAAzQ,UAAAlU,MAAA,SAAAoF,EAAA/E,GACA+E,GAAAgN,KAAAqa,cAAArnB,GACAkW,EAAAyR,SAAA3a,KAAAqa,cAAArnB,GAAA,SAAA0mB,GACAA,EAAAzrB,KAEA+E,GACAgN,KAAA8F,KAAA,QAAA7X,IASAskB,EAAAzQ,UAAAqR,QAAA,WACAnT,KAAAkL,gBACAlL,KAAA8F,KAAA9F,KAAAkL,gBACA3d,KAAA,kBACA4d,QAAA,UAIAjC,EAAAyR,SAAA3a,KAAAsa,MAAA,SAAAxU,EAAA9S,GACAgN,KAAA0a,SAAA1nB,IACAqD,KAAA2J,OAEAA,KAAA8F,KAAA,SACA9F,KAAA2F,MAEA3F,KAAAwa,YAAA,MAQAjI,EAAAzQ,UAAAC,SAAA,WACA,MAAA/B,MAAAwa,YACA,aAAAxa,KAAAwa,YAAA,IAEA,sBAUAjI,EAAA2H,OAAA,WAIA,MAHA3H,GAAAvf,KACAuf,EAAAvf,GAAA,GAEAuf,EAAAvf,IAAA,GAaAuf,EAAA4I,kBAAA,SAAAC,EAAA5tB,EAAAC,GACA,GAAA4tB,MACAptB,EAAAskB,EAAA+I,QAAAF,EAAA5tB,EAAA6tB,GAAA,EAAA5tB,EACA,QACAsB,KAAAd,EACAe,OAAAqsB,IAcA9I,EAAAgJ,kBAAA,SAAAH,EAAAI,EAAA/tB,GACA,MAAA8kB,GAAA+I,QAAAF,EAAAI,EAAAzsB,KAAAysB,EAAAxsB,QAAA,EAAAvB,IAcA8kB,EAAA+I,QAAA,SAAAF,EAAAngB,EAAAogB,EAAAI,EAAAhuB,GAEA,mCAAA2tB,EAIA,WADA3tB,GAAAG,MAAA,sDAEA,0BACA,MAAA0P,OACA,WAAArC,EACA,WACA,IAAAqC,SAAA8d,EAEA,WADA3tB,GAAAG,MAAA,oDAAAqN,EAIA,QAAAmgB,GACA,aACA,MAAAM,QAAA,IAAAzgB,CACA,cACA,MAAA0gB,QAAA,GAAA1gB,CACA,eACA,MAAA2gB,SAAA3gB,KAAA,EACA,cAEA,yBAAAA,GACAqC,OAEAsR,KAAAC,MAAAD,KAAAW,UAAAtU,GAEA,YACA,MAAAwgB,GACAxgB,YAAA8U,OACAsL,EAAAnW,KAAAjK,GACAogB,EAAApuB,OAAA,IAEAQ,EAAAG,MAAA,yCAAAqN,IACAogB,EAAAnW,KAAA,GAAA6K,WACAsL,EAAApuB,OAAA,GAGAouB,EAAApgB,EAEA,cACA,MAAAwgB,IACAJ,EAAAnW,KAAAqN,EAAAsJ,gBAAA5gB,EAAAxN,IACA4tB,EAAApuB,OAAA,GAEAslB,EAAAsJ,gBAAAR,EAAApgB,GAAAxN,EAEA,aACA,MAAAwN,GAEA,GAAAiX,GAAAxlB,CACA,IAAAiV,MAAAC,QAAAwZ,IAAA9d,SAAArC,EAAA,CAGA,GAFAiX,KACAxlB,EAAA,EACA,IAAA0uB,EAAAnuB,QAAA,UAAAmuB,EAAA,GAEA,IAAA1uB,EAAA,EAAAA,EAAAuO,EAAAhO,OAAAP,GAAA,EACAwlB,EAAAhN,KAAAqN,EAAA+I,QAAAF,EAAA,GAAAngB,EAAAvO,GAAA2uB,EACAI,EAAAhuB,QAGA,KAAAf,EAAA,EAAAA,EAAA0uB,EAAAnuB,OAAAP,GAAA,EAEAwlB,EAAAhN,KADA5H,SAAArC,EAAAvO,GACA6lB,EAAA+I,QAAAF,EAAA1uB,GAAAuO,EAAAvO,GAAA2uB,EACAI,EAAAhuB,GAEA6P,OAIA,OAAA4U,GACA,sBAAAkJ,IAAA9d,SAAArC,GACAiX,KACAhJ,EAAAyR,SAAAS,EAAA,SAAA1B,EAAAtsB,GACAkQ,SAAArC,EAAA7N,KACA8kB,EAAA9kB,GAAAmlB,EAAA+I,QAAA5B,EAAAze,EAAA7N,GAAAiuB,EAAAI,EACAhuB,MAGAykB,OAEAzkB,GAAAG,MAAA,8BAAAwtB,IAWA7I,EAAAsJ,gBAAA,SAAAC,EAAAruB,GACA,MAAAquB,GAIAA,YAAAhM,aACAgM,EACA,gBAAAA,EAAA5rB,YAAA9C,MACA,mBAAA0uB,GAAAha,UAGA,GAAAia,UAAAD,GAAA7sB,QAEAxB,EAAAG,MAAA,wCACAkuB,GAAA,KAAAlN,KAAAW,UAAAuM,IACA,GAAAhM,aAAA,IAbA,GAAAA,aAAA,IA2BAyC,EAAAyJ,sBAAA,SAAAhB,GACA,GAAAiB,GAAAnuB,IACA,oBAAAktB,GACA,MAAAA,EAEA,KAAAiB,IAAAjB,GACAA,EAAA/O,eAAAgQ,IACApa,OAAAqa,eAAApuB,EAAAmuB,GACAzuB,MAAA+kB,EAAAyJ,sBAAAhB,EAAAiB,IACAE,UAAA,EACAC,YAAA,GAIA,OAAAtuB,IAGAX,EAAAJ,QAAAwlB,oCCvdA,GAAArJ,GAAAzc,EAAA,UAQA4vB,EAAA,WACArc,KAAAhN,GAAA,QACAgN,KAAAwa,aAAA,EACAxa,KAAAuG,QAAA,EACA2C,EAAAK,aAAAvJ,MAOAqc,GAAAC,QAAA,qCAOAD,EAAAva,UAAAC,SAAA,WACA,mBAQAsa,EAAAva,UAAAya,UAAA,SAAAC,GACAxc,KAAAwc,QACAxc,KAAAtS,KAAA,qBAEAsS,KAAAwc,SACAxc,KAAA8F,KAAA,WAUAuW,EAAAva,UAAAjL,UAAA,SAAA6S,EAAAzb,GACA,YAAAyb,GAAAzb,EAAAE,UAAA6R,KAAAwa,cACAxa,KAAAwa,YAAAvsB,EAAAE,QACA6R,KAAAuG,OAAAtY,EAAAsY,OACAvG,KAAAuG,OAAAnC,OAAAkF,UAEAtJ,KAAAuG,OAAAnC,OAAAkF,QADA,mBAAAA,SACAA,QAEAtJ,KAAAzR,UAAA,YAGAyR,KAAA8F,KAAA;EAaAuW,EAAAva,UAAA2a,OAAA,SAAAhT,EAAAC,EAAA2P,GACA,GAAA3sB,GAAAgwB,EAAAC,IACA,oBAAAtD,IAAA3P,EACA,IACAgT,EAAA9N,KAAAC,MAAAwK,GACAqD,YAAA/a,SACA0X,EAAAqD,GAEA,MAAAzwB,IAKA,mBAAAotB,GACAsD,EAAAzX,KAAAmU,OAEA,KAAA3sB,EAAA,EAAAA,EAAA2sB,EAAApsB,OAAAP,GAAA,EACAiwB,EAAAzX,KAAAmU,EAAA3sB,GAGA,OAAAsT,MAAAwa,gBAIAxa,MAAA8F,KAAA9F,KAAAwa,aACA/Q,WACAC,SACAkT,OAAA,EACAzR,QAAA,QACAxB,IAAAiF,KAAAW,UAAAoN,SARA3c,MAAAwF,GAAA,QAAAxF,KAAAyc,OAAApmB,KAAA2J,KAAAyJ,EAAAC,EAAAiT,KAkBAN,EAAAva,UAAA0H,MAAA,SAAAvb,GACA,IAAA+R,KAAAwc,OAEA,WADAxc,MAAA0F,KAAA,SAAA1F,KAAAwJ,MAAAnT,KAAA2J,KAAA/R,GAIA,IAAAorB,GAAAzP,KAAAld,EAAA,CAEA,IADA2sB,EAAAzK,KAAAC,MAAA5gB,EAAA0b,KACA,gBAAA0P,GACAzP,EAAA1E,KAAAmU,OAEA,MAAA/b,SAAA+b,EAAA3sB,IACAkd,EAAA1E,KAAAmU,EAAA3sB,IACAA,GAAA,CAGAsT,MAAAwc,OAAAvuB,EAAAwb,UAAAzc,KAAAgT,KAAAwc,OAAAvuB,EAAAyb,OAAAE,EAAA,eAOAyS,EAAAva,UAAAxU,IAAA,WACA0S,KAAAyc,OAAA,MAAAnf,OAAAgF,YAOA+Z,EAAAva,UAAApU,KAAA,WACAsS,KAAAyc,OAAA,OAAAnf,OAAAgF,YAOA+Z,EAAAva,UAAArU,MAAA,WACAuS,KAAAyc,OAAA,QAAAnf,OAAAgF,YAOA+Z,EAAAva,UAAAnU,KAAA,WACAqS,KAAAyc,OAAA,OAAAnf,OAAAgF,YAOA+Z,EAAAva,UAAAlU,MAAA,WACAoS,KAAAyc,OAAA,QAAAnf,OAAAgF,YASA+Z,EAAAva,UAAAvT,UAAA,SAAAnB,GACA,GAAAE,GAAA,SAAAmc,EAAAC,GACA,GAAA2P,GAAA1X,MAAAG,UAAA+a,OAAA7vB,KAAAsV,UAAA,EACAtC,MAAAyc,OAAAhT,EAAAC,EAAA2P,IAEAmD,GACA3S,SAAA,EAKA,OAHAwS,GAAAC,OAAA9V,QAAA,SAAA6C,GACAmT,EAAAnT,GAAA/b,EAAA+I,KAAA2J,KAAAqJ,EAAAjc,IACAiJ,KAAA2J,OACAwc,GAWAH,EAAAva,UAAAgb,eAAA,SAAAC,GACA,gBAAA3vB,GACA,GAAAsoB,GAAAqH,EAAA3vB,GACA6B,KACA+tB,EAAAX,EAAAC,OACAW,EAAA,KACAnvB,IAiBA,OAhBA4nB,GAAA7X,KAAA,SAAA2e,GACAS,EAAAT,EACAvtB,EAAAuX,QAAA,SAAA0W,GACAD,EAAAC,EAAA,IAAA9S,MAAA6S,EAAAC,EAAA,QAGAF,EAAAxW,QAAA,SAAA2W,GACArvB,EAAAqvB,GAAA,WACA,GAAA9D,GAAA1X,MAAAG,UAAA+a,OAAA7vB,KAAAsV,UAAA,EACA2a,GACAA,EAAAjd,MAAAoK,MAAA6S,EAAA5D,GAEApqB,EAAAiW,MAAAlF,KAAAqZ,KAEAhjB,KAAA8mB,KAEArvB,IAIAX,EAAAJ,QAAAsvB,iDCnOA,GAYAe,GAZA7L,EAAA9kB,EAAA,eAAA8X,QAEAyU,EAAAvsB,EAAA,SACA4vB,EAAA5vB,EAAA,WACA4wB,EAAA5wB,EAAA,SACA6wB,EAAA7wB,EAAA,aACA8wB,EAAA9wB,EAAA,YACA+wB,EAAA/wB,EAAA,iBACAgxB,EAAAhxB,EAAA,cACAyc,EAAAzc,EAAA,UACAotB,EAAAptB,EAAA,YAGAixB,EAAA,WACA,YAGA,oBAAAtZ,IAAA9G,SAAA8G,EAAAtC,UACAsb,EAAAhZ,EAGAlM,WAAA,WACAklB,EAAApd,MACA,GAGA0d,IAUA,IAAA3vB,GAAA,SAAA4vB,EAAArK,EAAA/M,GACA,YACA,IAMAqX,GAQAC,EACAC,EAfArwB,EAAA,GAAA4uB,GACAxI,EAAA,GAAAwJ,GAAA5vB,GACAsoB,EAAA,GAAA0H,GAAAhwB,GACAJ,EAAA,GAAA2rB,GAAAvrB,GACAglB,EAAA,GAAA6K,GAAAzJ,EAAAkC,EAAA1oB,GACA4tB,EAAA,GAAAuC,GAAA/K,GAEAsL,GACAtwB,MAAA,MACA6lB,WACA0K,cAAAL,GAAA,mBAAAA,GAAA,SAEAA,EAAAM,SADA/U,EAAAgV,mBAKAzE,EAAA,WACApsB,EAAAosB,UACAhH,EAAAlc,UAiCA,OA9BAgQ,IACA2C,EAAAiV,MAAAJ,EAAAxX,GAAA,GAEAwX,EAAA3Z,OAAAgZ,EACAO,GACAzU,EAAAiV,MAAAJ,EAAAJ,GAAA,GAMAA,EAAAzE,UAAA1S,QAAA,SAAA8D,GACA,GAAAld,EACA,KAAAkd,EAAAld,KAAAqrB,QAAA,UACA,kBAAAnO,GAAAqB,WACAve,EAAAkd,EAAAld,KAAAgxB,OAAA,GAGA9T,EAAAqB,SADApF,KAAAnZ,GACAmZ,EAAAnZ,GACA2wB,EAAA3wB,GACA2wB,EAAA3wB,GAEAkQ,WAKAuc,EAAAlO,SAAAgS,EAAAzE,UAAA7rB,GACA0oB,EAAApK,SAAAgS,EAAAU,eAEA,GAAA9M,GAAA,SAAAnO,EAAAW,GACA,GAAAga,EAAAC,cACAF,EAAAC,EAAAO,SACAT,EAAA,GAAAC,GAAA,WAAA/H,GACAtD,EAAA1kB,MAAA8vB,GAGApL,EAAA/M,KAAA,WAAA+M,EAAA1kB,MAAAsI,KAAAoc,EAAAhlB,QACA,CACAglB,EAAA1kB,MAAAN,GACAmwB,EAAA,GAAAL,GAAA9K,EAAAsD,EAAAgI,EAGA,IAAAQ,GAAAC,CACAD,GAAA,SAAAtwB,GACAZ,EAAAksB,QAAA,gBACAhT,OAAAwX,IACAlgB,KAAA,SAAAyM,GACA,GAAAkS,GAAA,GAAAlS,GAAAgP,IACA7rB,GAAA8uB,UAAAC,GACAvuB,GACAR,EAAAG,MAAAK,MAIAuwB,EAAA,SAAAlL,GACA,MAAAyC,GAAApiB,IAAAoqB,EAAAxF,SAAAjF,GAAAzV,KACA,SAAA4gB,GACA,MAAAb,GAAAjqB,OAAA8qB,KAEA5gB,KAAA,SAAAkd,GAEA,MADAtI,GAAA1kB,MAAAgtB,GACAE,EAAAyD,YAAA3D,EAAA1tB,EAAA0tB,EAAAzH,aAKAyK,EAAAvB,OACAgC,EAAAT,EAAAvB,QAAA3e,KAAA,SAAAoV,GACA,YAAAA,EAAA0L,SAAAtxB,IACAkxB,EAAA,4CACAtL,EAAA0L,SAAAtxB,KAEAI,EAAA8uB,UAAAtJ,EAAA0L,aAEAJ,GAEAA,IAIAC,EAAAT,EAAAzK,UAAAzV,KAAA,SAAAoV,GAEA,MADAA,GAAA/c,KAAAwP,KAAA,QAAA+T,GACAxG,EAAA0L,UACA,SAAAhwB,GAEA,KADAlB,GAAAG,MAAA,gCAAAe,GACAA,IACAkP,KAAAuF,EAAAW,GAGA8P,EAAA/N,KAAA,SAAAiY,KAIA5wB,GAAAJ,QAAAgB,uRCzJA,GAAAmb,GAAAzc,EAAA,UASA4wB,EAAA,SAAA5vB,GACAuS,KAAAvS,QACAuS,KAAAuG,UACAvG,KAAA4e,QACA5e,KAAA6e,UAEA3V,EAAAK,aAAAvJ,MACAA,KAAAwF,GAAA,kBAAAe,GACA2C,EAAAiV,MAAAne,KAAAuG,WACAlQ,KAAA2J,OASAqd,GAAAvb,UAAAjL,UAAA,SAAA6S,EAAAzb,GACA,GAAAV,GAAAuxB,EAAA9e,KAAA6e,OAAAnV,EACA,OAAAoV,MAAAC,IAKA/e,KAAA4e,KAAAE,EAAAC,OAMA9wB,EAAA2uB,QAAAkC,EAAAlC,OAAA5c,KAAAuG,QAAAvG,KAAAuG,OAAAyY,QACAzxB,EAAAU,EAAAV,KACA,YAAAU,EAAAV,MAAAU,WACA,WAAAA,UAAAgxB,OACA1xB,EAAA,UAAAU,UAAAV,KACA,WAAAU,EAAAV,MAAAU,WACA,WAAAA,UAAAV,KACAA,EAAA,UAAAU,UAAAb,KACA,YAAAa,EAAAV,MAAAU,WACA,UAAAA,UAAAV,OACAA,EAAA,SAAAU,UAAAb,MAEA4S,KAAAvS,YAAAuS,KAAA4e,KAAAE,EAAApV,QAAA3H,WACA,KAAAxU,EAAA,MACAyS,KAAA4e,KAAAE,EAAAC,KAAAhd,WAAA,IAAA+c,EAAA9L,WAGAhT,MAAA4e,KAAAE,EAAAC,KAAAloB,UAAAioB,EAAA9L,KAAA/kB,QAtBA+R,MAAAvS,MAAAE,KAAA,kCAAAmxB,EAAAC,SALA/e,MAAAvS,MAAAE,KAAA,4CAAA+b,IAoCA2T,EAAAvb,UAAAgS,eAAA,SAAApK,GACA,GAAAoV,GAAA9e,KAAA6e,OAAAnV,EACA,OAAAoV,GAGA9e,KAAA4e,KAAAE,EAAAC,KAFA,MAWA1B,EAAAvb,UAAAod,UAAA,SAAAxV,GACA,MAAAA,GAGA1J,KAAA4e,KAAAlV,EAAA1W,IAIAgN,KAAA4e,KAAAlV,EAAA1W,KAHAgN,KAAAvS,MAAAE,KAAA,yBAAA+b,EAAA1W,GAAA,MACA,IAJA,GAgBAqqB,EAAAvb,UAAA6J,SAAA,SAAAoT,EAAAI,GACA,OAAAnf,KAAA4e,KAAAG,EAAA/rB,KAAAmsB,GACAnf,KAAA4e,KAAAG,EAAA/rB,IAAA+rB,GACA,IAEA,GAaA1B,EAAAvb,UAAAsd,WAAA,SAAAL,GACA,MAAA/e,MAAA4e,KAAAG,EAAA/rB,WAGAgN,MAAA4e,KAAAG,EAAA/rB,KACA,IAHA,GAeAqqB,EAAAvb,UAAAud,QAAA,SAAA3V,EAAAoV,EAAA9L,EAAA4J,GAEA,GADAlT,EAAA1J,KAAAkf,UAAAxV,GACA,CAGA,IAAAoV,EAEA,WADA9e,MAAAvS,MAAAE,KAAA,6CAAA+b,EAAA1W,GAIA,IAAAssB,GAAAtf,KAAAuf,eAWA,OAVAvf,MAAA6e,OAAAS,IACAP,IAAAD,EACA9L,OACAtJ,SAAA1W,GACA4pB,SAEA,kBAAAlT,GAAAlE,IACAkE,EAAAlE,GAAA8Z,EAAAtf,KAAAnJ,UAAAR,KAAA2J,KAAAsf,IAGAA,IAUAjC,EAAAvb,UAAA0d,UAAA,SAAA9V,EAAAsJ,GAEA,GADAtJ,EAAA1J,KAAAkf,UAAAxV,GACA,CAIA,GAAA4V,GAAAtf,KAAA6e,OAAA7L,EACA,OAAAsM,GAEAA,EAAA5V,WAAA1W,IACAgN,KAAAvS,MAAAE,KAAA,QAAAqlB,EAAA,4BAAAtJ,EAAA1W,KACA,UAGAgN,MAAA6e,OAAA7L,GACA,kBAAAtJ,GAAA/D,KACA+D,EAAA/D,IAAA2Z,IAEA,IAVA,IAiBAjC,EAAAvb,UAAA4Y,SAAA,WACAxR,EAAAyR,SAAA3a,KAAA4e,KAAA,SAAAlV,GACA,kBAAAA,GAAA/D,KACA+D,EAAA/D,QAGA3F,KAAA4e,QACA5e,KAAA6e,WASAxB,EAAAvb,UAAAyd,cAAA,WACA,MAAArW,GAAA5a,SAGAnB,EAAAJ,QAAAswB,oCCjNA,GAAAnU,GAAAzc,EAAA,UAUAgzB,EAAA,SAAAryB,EAAA2oB,GACA/V,KAAAhN,GAAA,OAAAwa,KAAAC,SACAzN,KAAA5S,OACA4S,KAAA+V,WACA/V,KAAAuG,UACAvG,KAAAqV,IAAA,KAEAnM,EAAAK,aAAAvJ,MACAkJ,EAAAiV,MAAAne,KAAAyf,EAAA3d,WAWA2d,GAAA3d,UAAAjL,UAAA,SAAAmc,EAAA/kB,GACA,YAAA+kB,GAAAhT,KAAAkL,eAOAlL,KAAA0f,eAAA1M,EAAA/kB,IANA+R,KAAAkL,gBAAAjd,EAAAE,UACA6R,KAAAkL,eAAAjd,EAAAE,QACA+a,EAAAiV,MAAAne,KAAAuG,OAAAtY,EAAAsY,QACAvG,KAAA2f,UAYAF,EAAA3d,UAAA8d,gBAAA,SAAApP,GACAxQ,KAAAjJ,QAAAyZ,GAQAiP,EAAA3d,UAAA/K,QAAA,aAUA0oB,EAAA3d,UAAA+d,YAAA,SAAA7M,EAAA/kB,GACA,YAAA+kB,GAAAhT,KAAAkL,iBACA8H,EAAAhT,KAAAkL,gBAEAlL,KAAA8F,KAAAkN,EAAA/kB,IAGAd,EAAAJ,QAAA0yB,oCCvEA,GAAAA,GAAAhzB,EAAA,WASAqzB,EAAA,SAAA9sB,EAAA+iB,GACA0J,EAAAzyB,KAAAgT,KAAAhN,EAAA+iB,GACA/iB,IACAgN,KAAAhN,MASA8sB,GAAAhe,UAAA6d,MAAA,WACA3f,KAAAuG,OAAAyX,cACAhe,KAAA+f,gBAEA/f,KAAAggB,eASAF,EAAAhe,UAAAme,KAAA,aASAH,EAAAhe,UAAAC,SAAA,WACA,iBAAA/B,KAAAhN,GAAA,KAQA8sB,EAAAhe,UAAAie,cAAA,WACA,GAAAG,GAAA,SAAAvW,GACA3J,KAAA6f,YAAAlW,EAAA9T,KAAAmd,KAAArJ,EAAA9T,KAAA5H,UACAoI,KAAA2J,KACAA,MAAAgb,IAAAhb,KAAAuG,OAAAnC,OACApE,KAAAgb,IAAApO,iBAAA,UAAAsT,GAAA,GACAlgB,KAAAigB,KAAA,WACAjgB,KAAAgb,IAAAxF,oBAAA,UAAA0K,GAAA,SACAlgB,MAAAgb,KAEAhb,KAAA8F,KAAA,WACA9F,KAAAgb,IAAApkB,YAAA,uBAOAkpB,EAAAhe,UAAAke,YAAA,WACA,GAAAG,EAGAA,GAAA,GAAAC,QAAApgB,KAAAuG,OAAAmD,OAAA,IAAA1J,KAAAhN,IAEAmtB,EAAAvT,iBAAA,iBAAAje,GACAqR,KAAAjJ,QAAApI,IACA0H,KAAA2J,OAAA,GACAmgB,EAAAvT,iBAAA,mBAAAuT,EAAAxW,GACA,MAAA3J,MAAAgb,QAKAhb,MAAA6f,YAAAlW,EAAA9T,KAAAmd,KAAArJ,EAAA9T,KAAA5H,UAJA+R,KAAAgb,IAAAmF,MACAngB,MAAA8F,KAAA,aAIAzP,KAAA2J,KAAAmgB,IAAA,GACAngB,KAAAigB,KAAA,WACAE,EAAAE,YACArgB,KAAAgb,WACAhb,MAAAgb,MAYA8E,EAAAhe,UAAA4d,eAAA,SAAA1M,EAAA/kB,GACA,YAAA+kB,GAAA,UAAA/kB,EAAAV,MACA,YAAAU,EAAAE,QACA6R,KAAAigB,OAEAjgB,KAAAgb,IACAhb,KAAAgb,IAAApkB,aACAoc,OACA/kB,YAGA+R,KAAA0F,KAAA,UAAA1F,KAAAnJ,UAAAR,KAAA2J,KAAAgT,EAAA/kB,KAKAd,EAAAJ,QAAA+yB,qCCvHA,GAAA5W,GAAAzc,EAAA,UACA6zB,EAAA7zB,EAAA,oBAWA6wB,EAAA,SAAAzJ,EAAAkC,EAAA1oB,GACA2S,KAAAhN,GAAA,UACAgN,KAAAuG,UACAvG,KAAAugB,gBACAvgB,KAAAwgB,aACAxgB,KAAAwgB,UAAAxgB,KAAAhN,OACAgN,KAAAygB,kBAEAzgB,KAAAvS,MAAAomB,EAAApmB,MACAuS,KAAA6T,MACA7T,KAAA+V,WACA/V,KAAA3S,MAEA2S,KAAA+S,SAAA,KACA/S,KAAA0T,cAEA1T,KAAA6T,IAAArO,GAAA,kBAAAe,GACA2C,EAAAiV,MAAAne,KAAAuG,UACAvG,KAAA8F,KAAA,WACAzP,KAAA2J,OAEAkJ,EAAAK,aAAAvJ,MACAA,KAAA6T,IAAAlI,SAAA3L,MAQAsd,GAAAxb,UAAAC,SAAA,WACA,4BAmBAub,EAAAxb,UAAAjL,UAAA,SAAAmc,EAAA/kB,GACA,GAAAyyB,GAAAC,EAAA3gB,KAAAugB,aAAAvN,EACA,KAAA2N,EAEA,WADA3gB,MAAAvS,MAAAE,KAAA,2BAAAqlB,EAKA,IAFA0N,EAAA1gB,KAAA6T,IAAAC,eAAA6M,GAEA3gB,KAAA+S,UAAA4N,IAAA3gB,KAAA+S,UACA/S,KAAA0T,WAAAV,GASA,WAPAhT,MAAA8F,KAAA9F,KAAA+S,UACAxlB,KAAA,aACA4d,QAAA,SACAyR,OAAA,EACA5J,OACA/kB,WAKA,cAAAA,EAAAkd,QAEA,WADAnL,MAAAvS,MAAA+b,MAAAvb,EAIA,aAAAA,EAAAkd,QACAnL,KAAAyT,WAAAiN,EAAAzyB,EAAAb,KAAAa,EAAAwsB,GAAAxsB,EAAA2yB,kBACA,oBAAA3yB,EAAAkd,QACAnL,KAAAyT,WAAAiN,EAAAzyB,EAAAb,KAAA,GAAAkzB,GAAAtgB,WACA,iBAAA/R,EAAAkd,QAEA,OAAAnL,KAAA+S,WACA/S,KAAA+S,SAAA4N,GAEA3gB,KAAA0T,WAAAzlB,EAAA+kB,OAAA,EACAhT,KAAA8F,KAAA,gBACA,iBAAA7X,EAAAkd,QACAnL,KAAA+V,SAAA8K,YAAA5yB,EAAAorB,KAAA,IACArZ,KAAA+V,SAAA+K,aAAA7yB,EAAA8yB,QAAA9yB,EAAAorB,KAAA,QACA,aAAAprB,EAAAkd,QAAA,CACA,GAAAnL,KAAAiL,MAAA0V,IAAA3gB,KAAA+S,SAEA,YADA,GAAA/S,MAAAiL,MAAApU,UAAA6pB,EAAAzyB,UAGA+R,MAAAuZ,QAAA,SAAAkB,EAAAxP,GACAjL,KAAA6T,IAAAhd,UAAA4jB,GACAltB,KAAA,OACA0d,UAEA5U,KAAA2J,KAAA2gB,QACA,cAAA1yB,EAAAkd,QACAnL,KAAAzJ,QAAAmqB,OACA,eAAAzyB,EAAAkd,QAKA,MAFAnL,MAAAvS,MAAAE,KAAA,4BAAAM,EAAAkd,aACAnL,MAAAvS,MAAAH,IAAAshB,KAAAW,UAAAthB,GAHA+R,MAAAghB,WAAAN,EAAAzyB,EAAAwsB,MAcA6C,EAAAxb,UAAAmf,QAAA,SAAAC,GACA,MAAAlhB,MAAA6T,IAAAC,eAAA9T,KAAAugB,aAAAW,KAQA5D,EAAAxb,UAAA/T,MAAA,SAAAmI,GACA,IAAAA,EAAAlD,GAEA,MADAgN,MAAAvS,MAAAE,KAAA,yCACA,CAGA,IAAAqS,KAAAugB,aAAArqB,EAAAlD,IAEA,MADAgN,MAAAvS,MAAAE,KAAA,kCAAAuI,EAAAlD,KACA,CAGA,KAAAgN,KAAAuG,OAAAnC,OAEA,WADApE,MAAA0F,KAAA,SAAA1F,KAAAjS,MAAAsI,KAAA2J,KAAA9J,GAIA8J,MAAA6T,IAAAlI,SAAAzV,EACA,IAAA8c,GAAAhT,KAAA6T,IAAAwL,QAAArf,KAAA9J,EAAAlD,GAAA,WACAunB,EAAAva,KAAA6T,IAAAwL,QAAAnpB,EAAA8J,KAAAhN,GAAAkD,EAAAlD,GAgBA,OAfAgN,MAAAugB,aAAArqB,EAAAlD,IAAAggB,EACAhT,KAAAwgB,UAAAtqB,EAAAlD,KAAAunB,GACAva,KAAAygB,eAAAzN,GAAAuH,EACAva,KAAAygB,eAAAlG,GAAAvH,EAEA9c,EAAAirB,SACAnhB,KAAA8F,KAAA,aAAA9S,GAAAkD,EAAAlD,GAAAmuB,QAAAjrB,EAAAirB,UAGAnhB,KAAA6T,IAAAhd,UAAAmc,GACAzlB,KAAA,QACAY,QAAAosB,EACAhU,OAAAvG,KAAAuG,UAGA,GAQA+W,EAAAxb,UAAAvL,QAAA,SAAAL,GACA,IAAAA,EAQA,MANAgT,GAAAyR,SAAA3a,KAAAugB,aAAA,SAAAvN,GACAhT,KAAA6T,IAAAhd,UAAAmc,GACAzlB,KAAA,WAEA8I,KAAA2J,WACAA,MAAA6T,IAAA6G,UAIA,KAAAxkB,EAAAlD,GAEA,MADAgN,MAAAvS,MAAAE,KAAA,0CACA,CAGAuI,GAAAirB,SACAnhB,KAAA8F,KAAA,gBAAA9S,GAAAkD,EAAAlD,GAAAmuB,QAAAjrB,EAAAirB,gBAIAnhB,MAAAugB,aAAArqB,EAAAlD,GAGA,IAAAtG,EACA,KAAAA,EAAAsT,KAAAwgB,UAAAtqB,EAAAlD,IAAA/F,OAAA,EAAAP,GAAA,EAAAA,GAAA,EACAsT,KAAAghB,WAAA9qB,EAAA8J,KAAAwgB,UAAAtqB,EAAAlD,IAAAtG,UAIAsT,MAAAwgB,UAAAtqB,EAAAlD,IACAgN,KAAA6T,IAAAuL,WAAAlpB,IAaAonB,EAAAxb,UAAA2R,WAAA,SAAAvd,EAAA9I,EAAA0xB,EAAAsC,EACAC,GACA,IAAArhB,KAAAuG,OAAAnC,OAGA,WAFApE,MAAA0F,KAAA,SACA1F,KAAAyT,WAAApd,KAAA2J,KAAA9J,EAAA9I,EAAA0xB,EAAAsC,GAIA,KAAAphB,KAAAugB,aAAArqB,EAAAlD,IAEA,WADAgN,MAAAvS,MAAAE,KAAA,gDAIA,KAAAqS,KAAAugB,aAAAzB,EAAA9rB,KACAgN,KAAAjS,MAAA+wB,MAAA,EAEA,WADA9e,MAAAvS,MAAAE,KAAA,uCAIA,IAGA4sB,GAHAqC,EAAAkC,EAAAlC,QAAA,EACA0E,EAAAF,GAAA,UACAG,EAAAvhB,KAAA6T,IAAAwL,QAAAnpB,EAAA4oB,EAAA9rB,GAAAsuB,EAAA1E,EAIAkC,GAAA9e,KAAA6T,IAAAC,eAAAyN,GACAhH,EAAAva,KAAA6T,IAAAwL,QAAAP,EAAA5oB,EAAAlD,GAAA5F,EAAAwvB,GAEA5c,KAAAygB,eAAAc,GAAAhH,EACAva,KAAAwgB,UAAAtqB,EAAAlD,IAAAkS,KAAAqc,GACAvhB,KAAAygB,eAAAlG,GAAAgH,EACAvhB,KAAAwgB,UAAA1B,EAAA9rB,IAAAkS,KAAAqV,GAEA8G,EACArhB,KAAA6T,IAAAhd,UAAAmJ,KAAAugB,aAAAzB,EAAA9rB,KACAzF,KAAA,aACAH,KAAAk0B,EACAnzB,QAAAosB,EACAA,QAAAgH,IAGAvhB,KAAA6T,IAAAhd,UAAAmJ,KAAAugB,aAAArqB,EAAAlD,KACA5F,OACAG,KAAA,aACAY,QAAAozB,EACAhH,aAWA+C,EAAAxb,UAAAkf,WAAA,SAAA9qB,EAAA9I,GACA,GAEAV,GAFA6tB,EAAAva,KAAA6T,IAAAC,eAAA1mB,GACAo0B,EAAAxhB,KAAAygB,eAAArzB,EAGA,OAAAmtB,IAAAiH,EAKAxhB,KAAA6T,IAAAC,eAAA0N,GAAAxuB,KAAAkD,EAAAlD,OACAgN,MAAAvS,MAAAE,KAAA,iCAAAP,IAKAV,EAAAsT,KAAAugB,aAAArqB,EAAAlD,IACAtG,GACAsT,KAAA6T,IAAAhd,UAAAnK,GACAa,KAAA,QACAY,QAAAf,IAGAV,EAAAsT,KAAAugB,aAAAhG,EAAAvnB,IACAtG,GACAsT,KAAA6T,IAAAhd,UAAAnK,GACAa,KAAA,QACAY,QAAAqzB,IAKAxhB,KAAA6T,IAAA2L,UAAAtpB,EAAA9I,GACA4S,KAAA6T,IAAA2L,UAAAjF,EAAAiH,SAEAxhB,MAAAygB,eAAArzB,SACA4S,MAAAygB,eAAAe,GACAxhB,KAAAyhB,WAAAlH,EAAAvnB,GAAAwuB,OACAxhB,MAAAyhB,WAAAvrB,EAAAlD,GAAA5F,QAhCA4S,MAAAvS,MAAAE,KAAA,2CAAAP,IA0CAkwB,EAAAxb,UAAA2f,WAAA,SAAAzuB,EAAA5F,GACA,GAAAV,EACA,IAAAsT,KAAAwgB,UAAAxtB,GACA,IAAAtG,EAAA,EAAAA,EAAAsT,KAAAwgB,UAAAxtB,GAAA/F,OAAAP,GAAA,EACA,GAAAsT,KAAAwgB,UAAAxtB,GAAAtG,KAAAU,EAAA,CACA4S,KAAAwgB,UAAAxtB,GAAA6pB,OAAAnwB,EAAA,EACA,SAYA4wB,EAAAxb,UAAAyX,QAAA,SAAA3F,GACA5T,KAAAiL,KACA2I,EAAA5T,KAAAiL,MAEAjL,KAAA3S,IAAAksB,QAAA,OAAAvZ,MAAAnC,KAAA,SAAAoN,GACAjL,KAAAiL,OAAAqO,KACA1F,EAAA5T,KAAAiL,OACA5U,KAAA2J,MAAA,WACA4T,EAAAtW,WAKAnQ,EAAAJ,QAAAuwB,0DCzWA,GAAApU,GAAAzc,EAAA,UACAi1B,EAAAj1B,EAAA,cAWAk1B,EAAA,SAAAC,EAAAtO,EAAAuO,EAAAjE,GACA5d,KAAA3S,IAAAuwB,EAAAvwB,IACA2S,KAAA4d,SACA5d,KAAA+V,SAAA6H,EAAA7H,SACA/V,KAAAvS,MAAAmwB,EAAAnwB,MAEAuS,KAAAuG,UAEAvG,KAAAhN,GAAA4uB,EAAApU,KAAAC,SACAzN,KAAAgW,WAAA4L,EACA5hB,KAAAsT,WACAtT,KAAAmhB,SAAAnhB,KAAAgW,YAAAH,OAAAgM,GAEA7hB,KAAA4c,MAAA5c,KAAAsT,SAAAsJ,QAAA,EAEA5c,KAAA8hB,mBACA9hB,KAAA+hB,mBACA/hB,KAAAgiB,qBACAhiB,KAAAiiB,SAAA,EAEA/Y,EAAAK,aAAAvJ,MASA2hB,GAAA7f,UAAAjL,UAAA,SAAAmc,EAAA/kB,GACA,eAAA+kB,EAAA,CACA,aAAA/kB,EAAAV,KAQA,MAPAyS,MAAAkL,eAAAjd,EAAAE,QACA+a,EAAAiV,MAAAne,KAAAuG,OAAAtY,EAAAsY,QACAvG,KAAA8F,KAAA9F,KAAAkL,gBACA3d,KAAA,gBACA4d,QAAA,aAEAnL,MAAA2f,OAEA,mBAAA1xB,EAAAV,MAAAU,EAAAE,QAAA,CACA6R,KAAAvS,YAAAuS,KAAA,uBAAA/R,EAAAb,MACA4S,KAAA8hB,gBAAA7zB,EAAAb,MAAAa,EAAAE,QACAmP,SAAA0C,KAAA+hB,gBAAA9zB,EAAAb,QACA4S,KAAA+hB,gBAAA9zB,EAAAb,OAAA,EAEA,IAAAuc,IACApc,KAAA,+BACAY,QAAAF,EAAAssB,QAOA,OALAva,MAAAsT,SAAA4O,cACAliB,KAAAsT,SAAA4O,aAAAj0B,EAAAb,QACAuc,EAAAtc,IAAA2S,KAAAsT,SAAA4O,aAAAj0B,EAAAb,MAAAC,SAEA2S,MAAA8F,KAAA7X,EAAAE,QAAAwb,GAEA,GAAA1b,EAAAgd,KAGA,MAFAjL,MAAAiL,KAAA,GAAAhd,GAAAgd,SACAjL,MAAA8F,KAAA,OAAA7X,EAAAgd,KAEA,WAAAhd,EAAAV,MAEAU,EAAAE,SAAA,YAAAF,EAAAE,SACA6R,KAAAigB,OAEAjgB,KAAAmiB,eAAAl0B,EAAAE,SAAA,IAEA6R,KAAA9J,KAAAW,UAAAmc,EAAA/kB,OAEA,CACA,IAAA+R,KAAA8hB,gBAAA9O,MAAA,IACAhT,KAAA8hB,gBAAA9O,KAAA/kB,EAAAE,QA6BA,MA5BA6R,MAAAvS,YAAAuS,KAAA,qCAAAgT,GACAhT,KAAA8hB,gBAAA9O,GAAA/kB,EAAAE,aACAmP,SAAA0C,KAAA+hB,gBAAA/O,KACAhT,KAAA+hB,gBAAA/O,IAAA,EAGAhT,KAAAsT,SAAA8O,UAAApiB,KAAAqiB,YACAriB,KAAA9J,KAAAW,UAAAmJ,KAAAqiB,aACA90B,KAAA,aACAY,QAAA6kB,EACA3lB,IAAAY,EAAAZ,MAEA2S,KAAAsT,SAAA8O,SACApiB,KAAA0F,KAAA,uBAAAsN,EAAA3lB,GACA2S,KAAA9J,KAAAW,UAAAmJ,KAAAqiB,aACA90B,KAAA,aACAY,QAAA6kB,EACA3lB,SAEAgJ,KAAA2J,KAAAgT,EAAA/kB,EAAAZ,OAEA2S,KAAA8hB,gBAAA,YAAA7zB,EAAAE,UACA6R,KAAA8hB,gBAAA,WAAA7zB,EAAAE,QACA6R,KAAA0F,KAAA,gCAAAsN,GACAhT,KAAA+hB,gBAAA/O,GAAAhT,KAAA+hB,gBAAA,YACA1rB,KAAA2J,KAAAgT,MAIA,IAAAhT,KAAAiiB,QAGA,GAAAjiB,KAAA+hB,gBAAA/O,MAAA,EACA1J,QAAA3b,KAAA,uCACAqS,KAAA0F,KAAA,uBAAA1F,KAAAnJ,UAAAR,KAAA2J,KAAAgT,EAAA/kB,QACA,KAAA+R,KAAA+hB,gBAAA/O,GAEA,WADAhT,MAAAvS,MAAAG,MAAA,2BAAAolB,EAGAhT,MAAA9J,KAAAW,UAAAmJ,KAAA+hB,gBAAA/O,GAAA/kB,OATA+R,MAAA0F,KAAA,QAAA1F,KAAAnJ,UAAAR,KAAA2J,KAAAgT,EAAA/kB,MAuBA0zB,EAAA7f,UAAAqgB,eAAA,SAAAnP,EAAAsP,GACA,GAAArQ,GACA7E,EAAAkV,EAAAtiB,KAAA+hB,gBAAA/hB,KAAA8hB,eAGA,KAAA7P,IAAA7E,GACA,GAAAA,EAAA6E,KAAAe,EAAA,CACAsP,EACAtiB,KAAA8F,KAAA9F,KAAAkL,gBACA3d,KAAA,mBACA4d,QAAA,SACAsP,GAAAza,KAAA8hB,gBAAA7P,KAEAjS,KAAA9J,MACA8J,KAAA9J,KAAAW,UAAA,WACAtJ,KAAA,QACAY,QAAA6R,KAAA+hB,gBAAA9P,WAGAjS,MAAA8hB,gBAAA7P,SACAjS,MAAA+hB,gBAAA9P,EAGA,KAAAA,IAAAjS,MAAA8hB,gBACA,GAAA9hB,KAAA8hB,gBAAA7V,eAAAgG,IACAjS,KAAAgiB,kBAAAvJ,QAAAxG,GAAA,EACA,QAMA,OADAjS,MAAAigB,QACA,EAGA,UASA0B,EAAA7f,UAAA6d,MAAA,WACA,GAAA7B,EACA,OAAA9d,MAAAiiB,SAAAjiB,KAAA9J,MACA,OAEA8J,KAAAkL,iBACAlL,KAAAuiB,YACAzE,EAAA9d,KAAAuG,OAAA+X,SACAte,KAAA9J,KAAA,GAAA4nB,GAAA9d,KAAAsT,SAAAlmB,KAAA4S,KAAA+V,UAEA/V,KAAA9J,KAAAsP,GAAAxF,KAAA6f,YAAAxpB,KAAA2J,OACAA,KAAA9J,KAAA0pB,gBAAA,SAAAjxB,GACAqR,KAAAvS,MAAAE,KAAA,gBAAAgB,GACAqR,KAAA8F,KAAA9F,KAAAkL,gBACAC,QAAA,WAEA9U,KAAA2J,OAEAA,KAAA9J,KAAAW,UAAA,WACA1I,QAAA,UACAoY,OAAAvG,KAAAuG,SAIAvG,KAAA9J,KAAAW,UAAA,WACAtJ,KAAA,WACA4d,QAAA,WACA6H,KAAA,UAEAhT,KAAA9J,KAAAW,UAAA,WACAtJ,KAAA,WACA4d,QAAA,WACA6H,KAAA,SAIAhT,KAAA9J,KAAAW,UAAA,WACAtJ,KAAA,4BACA4d,QAAA,cACA/d,KAAA,mBAUAu0B,EAAA7f,UAAAme,KAAA,WACAjgB,KAAAiiB,UAGAjiB,KAAA8F,KAAA,SACA9F,KAAA9J,OACA8J,KAAA9J,KAAAyP,MACA3F,KAAA9J,KAAAW,UAAA,WACAtJ,KAAA,QACAY,QAAA,YAEA6R,KAAA9J,KAAA+pB,aACAjgB,MAAA9J,YAEA8J,MAAA4d,OACA5d,KAAAiiB,SAAA,IAQAN,EAAA7f,UAAAC,SAAA,WACA,iBAAA/B,KAAAsT,SAAAlmB,KAAA,KAWAu0B,EAAA7f,UAAA+d,YAAA,SAAAzyB,EAAAa,GACA,GAAA+R,KAAA+hB,gBAAA30B,MAAA,GAAAa,EAAAE,QAGA,MAFA6R,MAAA+hB,gBAAA30B,GAAAa,EAAAE,YACA6R,MAAA8F,KAAA,uBAIA,gBAAA1Y,EACA,aAAAa,EAAA+kB,MAAA/kB,UACA+R,KAAAvS,MAAAgvB,OAAAxuB,UAAAwb,SACAxb,UAAAyb,QAAA1J,KAAA+B,WACA9T,UAAA0b,SACA,aAAA1b,EAAA+kB,MAAA/kB,UAAA,CACA,IAAA+R,KAAAiL,KAEA,WADAjL,MAAA0F,KAAA,OAAA1F,KAAA6f,YAAAxpB,KAAA2J,KAAA5S,EAAAa,KAGA,aAAAA,UAAAV,MACA,YAAAU,UAAAV,QACAU,UAAAolB,MAAArT,KAAA9J,KAAAW,UAAAR,KAAA2J,KAAA9J,KAAA,WACA8J,KAAA8hB,gBAAA7zB,UAAA+E,KAAA,GAEAgN,KAAAiL,KAAApU,UAAAmJ,KAAA/R,eACA,gBAAAA,EAAAb,MAAA4S,KAAAqiB,YAWA,eAAAp0B,EAAAV,MACAyS,KAAA+hB,gBAAA9zB,EAAAb,MAAAa,EAAAE,QACA6R,KAAA9J,KAAAW,UAAA5I,EAAAE,SACAZ,KAAA,uBACAY,QAAAF,EAAAssB,UAEAva,KAAA8F,KAAA,yBACA,UAAA7X,EAAAV,MACAyS,KAAAmiB,eAAAl0B,EAAAE,SAAA,IAlBA6R,KAAAqiB,YAAAp0B,EAAAE,QACA6R,KAAA9J,KAAAW,UAAAmJ,KAAAqiB,aACA90B,KAAA,iBACAyF,GAAAgN,KAAAgW,WACAwM,MAAAxiB,KAAAhN,GACAsgB,SAAAtT,KAAAsT,SACA6N,QAAAnhB,KAAAmhB,QACAhzB,QAAAF,EAAAssB,UAEAva,KAAA8F,KAAA,oBAWA,gBAAA1Y,GAAA,UAAAa,EAAAV,MAAAyS,KAAAiiB,QAGA,gBAAA70B,GAAA,YAAAa,EAAAV,KACAyS,KAAA+V,SAAApiB,IAAAqM,KAAAgW,WAAA/nB,EAAA4H,MAAAgI,KAAA,SAAA7K,EAAA6C,GACAmK,KAAA9J,KAAAW,UAAAmJ,KAAAqiB,aACA90B,KAAA,mBACAyF,KACA6C,UAEAQ,KAAA2J,KAAA/R,EAAA+E,IAAA,WACAgN,KAAAvS,MAAAE,KAAA,oCACA0I,KAAA2J,OAEAA,KAAA8F,KAAA9F,KAAA8hB,gBAAA10B,GAAAa,IAbA+R,KAAAiiB,SAAA,EACAjiB,KAAA8F,KAAA,SAcA,WASA6b,EAAA7f,UAAArV,QAAA,SAAAW,EAAAkmB,GACAtT,KAAAgiB,kBAAA9c,KAAA9X,GACA4S,KAAAyiB,cAAAnP,EAAAlmB,GAAA4S,SAAA,SAAArR,GACAqR,KAAA9J,KAAAW,UAAAmJ,KAAAqiB,aACA90B,KAAA,kBACAyF,GAAA5F,EACAQ,MAAAe,EAAAV,WAEAoI,KAAA2J,QAWA2hB,EAAA7f,UAAA2gB,cAAA,SAAAroB,EAAAhN,GACA,MAAA4S,MAAA+V,SAAApiB,IAAAqM,KAAAgW,WAAA5b,GACAyD,KAAA,SAAAzD,GACA,MAAA4F,MAAA4d,OAAAjqB,IAAAqM,KAAAmhB,QAAA/mB,IACA/D,KAAA2J,OACAnC,KAAA,SAAA6kB,GASA,MARA1iB,MAAA2iB,UAAAv1B,EAAAs1B,EAAApP,UACAtT,KAAA8F,KAAA9F,KAAAkL,gBACA3d,KAAA,WAAAH,EACA+d,QAAA,OACA/d,OACAwzB,aAAAxzB,EAAA,IAAA4S,KAAAhN,GACAynB,GAAAiI,IAEAA,GACArsB,KAAA2J,OAdAA,SAeA,SAAArR,GAEA,KADAqR,MAAAvS,MAAAE,KAAAqS,KAAA+B,WAAA,wBAAA3U,EAAAuB,GACAA,GACA0H,KAAA2J,QAQA2hB,EAAA7f,UAAAygB,UAAA,WACA,GAAA71B,GAAAU,EAAAs1B,EAAAnW,GAAA,UAEA,IAAAvM,KAAAsT,SAAAsP,YACA,IAAAl2B,EAAA,EAAAA,EAAAsT,KAAAsT,SAAAsP,YAAA31B,OAAAP,GAAA,EACAU,EAAA4S,KAAAsT,SAAAsP,YAAAl2B,GACA6f,EAAAkM,QAAArrB,GAAA,OAAAA,EAAAqrB,QAAA,WACAlM,EAAArH,KAAA9X,GACA4S,KAAAgiB,kBAAA9c,KAAA9X,GACAs1B,EAAA,GAAAhB,GAAA1hB,KAAA3S,IAAAsG,IAAAvG,GAAAgsB,WAAApZ,KAAAvS,OACAuS,KAAA3S,IAAAmsB,YAAApsB,EAAAs1B,EAAA1iB,MAEAA,KAAA8F,KAAA9F,KAAAkL,gBACA3d,KAAA,gBAAAH,EACA+d,QAAA,OACA/d,OACAqtB,GAAAiI,IAgBA,KAXA1iB,KAAAsT,SAAA4O,cACAhZ,EAAAyR,SAAA3a,KAAAsT,SAAA4O,aAAA,SAAA9a,EAAAha,GACAmf,EAAAkM,QAAArrB,GAAA,IACAmf,EAAArH,KAAA9X,GACA4S,KAAAgiB,kBAAA9c,KAAA9X,IAGA4S,KAAAyiB,cAAArb,EAAAhN,IAAAhN,IACAiJ,KAAA2J,OAGAtT,EAAA,EAAAA,EAAA6f,EAAAtf,OAAAP,GAAA,EACAsT,KAAA8hB,gBAAAvV,EAAA7f,IAAAsT,KAAA8hB,gBAAAvV,EAAA7f,MAAA,EACAsT,KAAA+hB,gBAAAxV,EAAA7f,KAAA,GAUAi1B,EAAA7f,UAAA6gB,UAAA,SAAAD,EAAApP,GACA,GAAAA,EAAA,CAGA,IAAAtT,KAAAqiB,YAEA,WADAriB,MAAA0F,KAAA,cAAA1F,KAAA2iB,UAAAtsB,KAAA2J,KAAA0iB,EAAApP,GAIA,IAAAuP,EAIAA,IACAz1B,KAAAkmB,EAAAlmB,KACA01B,KAAAxP,EAAAwP,KACAxT,YAAAgE,EAAAhE,YACAjiB,IAAAimB,EAAAjmB,KAGA2S,KAAA9J,KAAAW,UAAAmJ,KAAAqiB,aACA90B,KAAA,WACAH,KAAAs1B,EACApP,SAAAuP,MAIA11B,EAAAJ,QAAA40B,oDCncA,GAAApQ,GAAA9kB,EAAA,eAAA8X,QAGAmd,GADAj1B,EAAA,wBACAA,EAAA,eACA+wB,EAAA/wB,EAAA,iBACAyc,EAAAzc,EAAA,UAUA6zB,EAAA,SAAA7N,GACAzS,KAAAuG,UACAvG,KAAAyS,UACAzS,KAAAvS,MAAAglB,EAAAhlB,MACAuS,KAAAib,OAAA,GAAAuC,GAAAxd,KAAAyS,SACAzS,KAAA3S,IAAA2S,KAAAyS,QAAAplB,IACA2S,KAAA+iB,aACA/iB,KAAAkZ,aAEAlZ,KAAAhN,GAAA,iBACAgN,KAAAgjB,aAAA,EACAhjB,KAAAijB,YACAjjB,KAAAkjB,gBAEAha,EAAAK,aAAAvJ,MAaAsgB,GAAAxe,UAAAjL,UAAA,SAAAmc,EAAA/kB,GACA,eAAA+kB,GACAhT,KAAAkL,gBAAAjd,EAAAE,UACA6R,KAAAkL,eAAAjd,EAAAE,QACA+a,EAAAiV,MAAAne,KAAAuG,OAAAtY,EAAAsY,aAEA,gBAAAyM,GAAAhT,KAAAwiB,MAeA,YAAAxP,GAAA,qBAAA/kB,EAAAV,MACAyS,KAAAijB,SAAAh1B,EAAA+E,KACAgN,KAAAijB,SAAAh1B,EAAA+E,IAAA/E,EAAA4H,YACAmK,MAAAijB,SAAAh1B,EAAA+E,KACA,YAAAggB,GAAA,oBAAA/kB,EAAAV,MACAyS,KAAAkjB,aAAAj1B,EAAA+E,KACAgN,KAAAkjB,aAAAj1B,EAAA+E,IAAAmK,SAAAG,OAAArP,EAAAL,aACAoS,MAAAkjB,aAAAj1B,EAAA+E,KACA,YAAAggB,GAAA,aAAA/kB,EAAAV,MACAyS,KAAA8F,KAAA,WAAA7X,GACA+R,KAAAmjB,eAAAl1B,EAAAb,KAAAa,EAAAqlB,WACA,YAAAN,GAAA,eAAA/kB,EAAAV,OAEAU,EAAAZ,KAAA2S,KAAAkZ,UAAAjrB,EAAAZ,KACA2S,KAAAyS,QAAAgB,WAAAzT,KAAAkZ,UAAAjrB,EAAAZ,KAAAY,EAAAE,QACA6R,KAAA9J,KAAAjI,EAAAE,UACA6R,KAAAojB,aACAn1B,EAAAZ,MAAA2S,KAAAojB,YAAA/1B,KAAAY,EAAAZ,IAIA2S,KAAA0F,KAAA,QAAA1F,KAAAnJ,UAAAR,KAAA2J,KAAAgT,EAAA/kB,IAHA+R,KAAAyS,QAAAgB,WAAAzT,KAAAojB,YAAAn1B,EAAAE,QACA6R,KAAA9J,KAAAjI,EAAAE,cAlCA,CAEA6R,KAAA9J,KAAA8J,KAAAyS,QAAAoB,IAAAC,eAAA7lB,EAAAE,SACA6R,KAAAqjB,gBAAAp1B,EAAAE,QACA6R,KAAAwiB,MAAAv0B,EAAAu0B,MACAxiB,KAAAmhB,QAAAlzB,EAAAkzB,OAEA,IAAAmC,GAAAtjB,KAAAujB,WAAAt1B,EAAAqlB,SAEAtT,MAAAwjB,YAAAv1B,EAAAqlB,SAAAgQ,GAAAzlB,KAAA,WACA,MAAAmC,MAAAuiB,UAAAe,IACAjtB,KAAA2J,OAAAnC,KAAAmC,KAAAyjB,YAAAptB,KAAA2J,KAAA/R,EAAA+E,GACA/E,EAAAqlB,SAAAyL,IAAA2E,SAAA7lB,KAAA,cAAAlP,GACAqR,KAAAvS,MAAAG,MAAA,2BAAAoS,KAAAwiB,MAAA,KAAA7zB,IACA0H,KAAA2J,SAgCAsgB,EAAAxe,UAAAC,SAAA,WACA,8BAWAue,EAAAxe,UAAA0hB,YAAA,SAAAlQ,EAAAqQ,GACA,MAAA3jB,MAAAib,OAAAyD,YAAA1e,KAAA9J,KAAA8J,KAAA3S,IAAAimB,GAAA,GAAAzV,KACA,SAAAkI,GACA,GAAArZ,GAAA,CAGA,IAFAqZ,EAAA7P,KAAA7I,IAAA0Y,EAAA4Y,SAAAtxB,IACA2S,KAAAojB,YAAArd,EAAA7P,KACA6P,EAAA4Y,SAAAtxB,IACA,IAAAX,EAAA,EAAAA,EAAAi3B,EAAA12B,OAAAP,GAAA,EACA,GAAAi3B,EAAAj3B,GAAAU,OAAA2Y,EAAA4Y,SAAAtxB,KAAAs2B,EAAAj3B,GAAAk3B,IAAAxB,SAAA,CACAuB,EAAA9G,OAAAnwB,EAAA,EACA,OAIAsT,KAAAuG,OAAAnC,OAAAyF,QAAA9D,EAAA4Y,UACAtoB,KAAA2J,QAYAsgB,EAAAxe,UAAAmS,WAAA,SAAA5mB,EAAA8P,GACA,GAAAnK,GAAAkW,EAAA5a,OAKA,OAJA0R,MAAAkjB,aAAAlwB,IACA5F,KAAAC,EACA8P,YAEAnK,GAYAstB,EAAAxe,UAAAiP,OAAA,SAAA3jB,EAAAg1B,EAAAhX,GACA,GAAAyY,GAAA7jB,KAAAuG,OAAAnC,OAAAyF,OAkBA,OAhBAuY,KACApiB,KAAAkZ,UAAA9rB,GAAAge,EAAAlV,MAGA2tB,EAAAz2B,KACAy2B,EAAAz2B,GAAAge,EAAAuT,SACA3e,KAAA+iB,UAAA31B,KACAy2B,EAAAz2B,GAAAkmB,SAAAtT,KAAA+iB,UAAA31B,KAIA4S,KAAAgjB,cAAA,EACA,IAAAhjB,KAAAgjB,cACAhjB,KAAA8F,KAAA,SAGA+d,EAAAz2B,IAYAkzB,EAAAxe,UAAAygB,UAAA,SAAAoB,GACA,GAAAj3B,GAAA4d,EAAAW,EACA6Y,EAAA,SAAA12B,EAAA4lB,EAAArJ,GACA,mBAAAqJ,GAAArJ,EAAAvc,UAEA22B,EAAA,SAAA7G,EAAAvT,GACA,GAAAyP,IACAhsB,KAAA8vB,EAAA7vB,IAKA+rB,cAHAzP,EAAA2J,SAAAjmB,KAAAsc,EAAA2J,SAAAjmB,IAAA6vB,EAAA7vB,KAGAsc,EAAA2J,SAAAjmB,IAAA6vB,EAAA7vB,KAFA,KAIA2S,KAAAib,OAAA+I,YAAAhkB,KAAA9J,KAAAgnB,EAAA9vB,KAAAgsB,GAAAvb,KACAmC,KAAA+Q,OAAA1a,KAAA2J,KAAAkd,EAAA9vB,MAAA,KAEAiJ,KAAA2J,MACApC,EAAA,GAAA2T,GAAA,SAAAnO,GACApD,KAAA0F,KAAA,QAAAtC,IACA/M,KAAA2J,MAEA,KAAAtT,EAAA,EAAAA,EAAAi3B,EAAA12B,OAAAP,GAAA,EACAi3B,EAAAj3B,GAAAW,MAAAs2B,EAAAj3B,GAAAk3B,IACA5jB,KAAA+iB,UAAAY,EAAAj3B,GAAAU,MACA22B,EAAAJ,EAAAj3B,IACA4mB,SAAAtT,KAAA+iB,UAAAY,EAAAj3B,GAAAU,QAGA4S,KAAA0F,KAAAoe,EAAAztB,QAAAstB,EAAAj3B,GAAAU,MACA22B,EAAA1tB,KAAA2J,KAAA2jB,EAAAj3B,KAGAsT,KAAAib,OAAA+I,YAAAhkB,KAAA9J,KAAAytB,EAAAj3B,GAAAU,KAAAu2B,EAAAj3B,GAAAk3B,KAAA/lB,KACAmC,KAAA+Q,OAAA1a,KAAA2J,KAAA2jB,EAAAj3B,GAAAU,KAAAu2B,EAAAj3B,GAAAk3B,KACAD,EAAAj3B,GAAAk3B,IAAAxB,WAGApiB,KAAAgjB,cAAA,CA8CA,OA1CAhjB,MAAAyS,QAAAsD,SAAA8K,YAAA,SAAAvN,EAAAlZ,EAAAgJ,GACA,GAAApQ,GAAAkW,EAAA5a,OAOA,OANA0R,MAAAijB,SAAAjwB,GAAAoQ,EACApD,KAAA8F,KAAA9F,KAAAqjB,iBACA91B,KAAA,UACAyF,KACA6C,KAAAuE,KAEA,GACA/D,KAAA2J,OAGAA,KAAAgjB,cAAA,EAEA/X,EAAAjL,KAAA3S,IAAAsG,IAAA,QAAAylB,WACA9O,EAAA,GAAAoX,GAAAzW,EAAAjL,KAAAvS,OACAuS,KAAAyS,QAAA8G,QAAA,SAAA0K,GACA,GAAAA,GAAAjkB,KAAAyS,SAAAyB,MAAAlU,KAAAmhB,QAAAnhB,MACAsK,EAAAyJ,eAAAmQ,oBAAAD,IACA5tB,KAAA2J,OAEAA,KAAA8F,KAAA9F,KAAAkL,gBACA3d,KAAA,eACA4d,QAAA,OACA/d,KAAA,OACAqtB,GAAAnQ,IAGAtK,KAAAib,OAAA+I,YAAA1Z,EAAA,WACAld,KAAA,OACAgsB,WAAAnO,IACApN,KAAA,SAAAoN,GACAA,EAAA0T,SAAAwF,cAAAnkB,KAAAvS,MAAAqvB,eACA7R,EAAA0T,WAAApwB,WACAyR,KAAA+Q,OAAA,UAAA9F,IACA5U,KAAA2J,OAGA,IAAAA,KAAAgjB,cACAhjB,KAAA8F,KAAA,SAGAlI,GAYA0iB,EAAAxe,UAAAqhB,eAAA,SAAA/1B,EAAAkmB,GACA,GAAAuQ,GAAA7jB,KAAAuG,OAAAnC,OAAAyF,OAEAga,MAAAz2B,GACAy2B,EAAAz2B,GAAAkmB,WAEAtT,KAAAkjB,aAAA91B,GACA4S,KAAAib,OAAA+I,YAAAhkB,KAAA9J,KAAA9I,EACA4S,KAAAib,OAAAmJ,OAAA9Q,EAAAtT,KAAA3S,IAAA2S,KAAAkjB,aAAA91B,GAAAC,MACAwQ,KACAmC,KAAA+Q,OAAA1a,KAAA2J,KAAA5S,GAAA,IACAyQ,KAAA,SAAAuN,GACApL,KAAAkjB,aAAA91B,GAAA+P,SAAAiO,SACApL,MAAAkjB,aAAA91B,IACAiJ,KAAA2J,OAEAA,KAAA+iB,UAAA31B,GAAAkmB,GAUAgN,EAAAxe,UAAAyhB,WAAA,SAAAjQ,GACA,GAAA5mB,GAAAsuB,EAAAqJ,KAAAC,GAAA,OAEA,IAAAhR,EAAAsP,YACA,IAAAl2B,EAAA,EAAAA,EAAA4mB,EAAAsP,YAAA31B,OAAAP,GAAA,EACAsuB,GACA5tB,KAAAkmB,EAAAsP,YAAAl2B,GACAk3B,IAAAtmB,QAEA0d,EAAA4I,IAAA5jB,KAAA3S,IAAAsG,IAAAqnB,EAAA5tB,MACAk3B,EAAA7L,QAAAuC,EAAA5tB,MAAA,GAAA4tB,EAAA4I,MACAS,EAAAnf,KAAA8V,GACAsJ,EAAApf,KAAA8V,EAAA5tB,MAqBA,IAhBAkmB,EAAA4O,cACAhZ,EAAAyR,SAAArH,EAAA4O,aAAA,SAAA9a,EAAAha,GACA4tB,GACA5tB,OACAC,IAAA+Z,EAAA/Z,KAEAi3B,EAAA7L,QAAArrB,GAAA,IACAga,EAAA/Z,MACA2tB,EAAA4I,IAAA5jB,KAAA3S,IAAAsG,IAAAyT,EAAA/Z,MAEAg3B,EAAAnf,KAAA8V,GACAsJ,EAAApf,KAAA9X,KAEAiJ,KAAA2J,OAGAsT,EAAA8O,SACA,IAAA11B,EAAA,EAAAA,EAAA4mB,EAAA8O,SAAAn1B,OAAAP,GAAA,GAMA,GALAsuB,GACA5tB,KAAAkmB,EAAA8O,SAAA11B,GACAk3B,IAAAtmB,QAEA0d,EAAA4I,IAAA5jB,KAAA3S,IAAAsG,IAAAqnB,EAAA5tB,MACA4tB,EAAA4I,IACA5I,EAAA4I,IAAAxB,UAAA,MACA,KAAA9O,EAAAjmB,MAAAimB,EAAAjmB,IAAA2tB,EAAA5tB,MAMA,CACA4S,KAAAvS,MAAAE,KAAA,4BAAAqtB,EAAA5tB,KACA,wCAEA,UATA4tB,EAAA4I,KACAx2B,KAAA4tB,EAAA5tB,KACAgsB,WAAA9F,EAAAjmB,IAAA2tB,EAAA5tB,MACAg1B,UAAA,GASAkC,EAAA7L,QAAAuC,EAAA5tB,MAAA,IACAi3B,EAAAnf,KAAA8V,GACAsJ,EAAApf,KAAA8V,EAAA5tB,OAKA,MAAAi3B,IASA/D,EAAAxe,UAAA2hB,YAAA,SAAAxoB,EAAAspB,GAEA,GAQAC,GACAC,EATAC,EAAA,SAAAhB,EAAAtgB,EAAAW,GACA,IACA/D,KAAAuG,OAAAnC,OAAAvB,cAAA6gB,GACAtgB,GAAA,GACA,MAAAnX,GACA8X,EAAA9X,KAEAoK,KAAA2J,KAIAwkB,GADA,gBAAAD,GACA,EAEAA,EAAAt3B,OAGAw3B,EAAA,SAAAE,GACA,GAAAA,IAAAH,EAIA,WAHAxkB,MAAA8F,KAAA9F,KAAAqjB,iBACA91B,KAAA,SAKA,IAAAm2B,EAEAA,GADA,gBAAAa,GACAA,EAEAA,EAAAI,GAGA3kB,KAAAyS,QAAAsD,SAAApiB,IAAAsH,EAAAyoB,GAAA7lB,KAAA,SAAAzD,GACA4F,KAAA4kB,QAAAF,EAAAtqB,GAAAyD,KAAA,WACA4mB,EAAAE,EAAA,IACAtuB,KAAA2J,QACA3J,KAAA2J,QACA3J,KAAA2J,MAIAA,KAAAuG,OAAAnC,OAAAvB,gBACA6hB,EAAA,SAAAtqB,EAAAgJ,GACA,GAAAsgB,GAAA1jB,KAAAuG,OAAAnC,OAAA3H,SAAAoY,cAAA,SACA6O,GAAArO,IAAAjb,EACAspB,EAAA9W,iBAAA,OAAAxJ,GAAA,GACApD,KAAAuG,OAAAnC,OAAA3H,SAAAkY,KAAAM,YAAAyO,IACArtB,KAAA2J,OAGAykB,EAAA,IAWAnE,EAAAxe,UAAA8iB,QAAA,SAAAF,EAAAtqB,GACA,UAAAmX,GAAAmT,EAAAruB,QAAA+D,IAAAyD,KAAA,SAAAqU,GACA,MAAAA,IACA,SAAAjmB,GACA+T,KAAAvS,MAAAE,KAAA1B,EAAA44B,OACA7kB,KAAAvS,MAAAG,MAAA,iBAAAwM,EAAAnO,GACA+T,KAAAvS,MAAAG,MAAA,kHAEAyI,KAAA2J,QAGA7S,EAAAJ,QAAAuzB,iHC/bA,GAAA/O,GAAA9kB,EAAA,eAAA8X,QACAod,EAAAl1B,EAAA,YACAyc,EAAAzc,EAAA,UAWA8wB,EAAA,SAAA9K,EAAAsD,EAAAxP,GACAvG,KAAA3S,IAAAolB,EAAAplB,IACA2S,KAAAvS,MAAAglB,EAAAhlB,MACAuS,KAAAuY,SAAAhS,EAAAgS,SACAvY,KAAA+V,WAEA/V,KAAAuG,SACAvG,KAAA8kB,YACA9kB,KAAA+kB,YACA/kB,KAAAglB,WACA9b,EAAAK,aAAAvJ,MAEAA,KAAAilB,IAAAxS,EAAAlM,EAAAqX,QACA5d,KAAA8kB,SAAA,GAAA3gB,OAAA,EASAoZ,GAAAzb,UAAAojB,eACA9P,YAAA,EACA/a,aAAA,GAUAkjB,EAAAzb,UAAAqjB,oBACAC,UAAA,SACAC,UAAA,SAYA9H,EAAAzb,UAAAnO,IAAA,SAAAwtB,EAAAnuB,GAIA,MAAAgN,MAAAglB,QAAAhyB,GACA,GAAAue,GAAA,SAAAnO,EAAAW,GACA/D,KAAA0F,KAAA,kBAAA5Y,EAAAJ,GACAsT,KAAArM,IAAA7G,EAAAJ,GAAAmR,KAAAuF,EAAAW,IACA1N,KAAA2J,KAAAmhB,EAAAnuB,KACAqD,KAAA2J,QAEAA,KAAAglB,QAAAhyB,IAAA,EAGAgN,KAAAslB,aAAAtyB,GAAA6K,KAAA,SAAAyV,GACA,GAEA4N,GAFArZ,EAAA7H,KAAAulB,QAAAvlB,KAAAmlB,mBAAA7R,EAAAzL,aACA2d,EAAAxlB,KAAAylB,gBAAAtE,EAAAnuB,EAAA6U,EAEA,OAAA2d,GAAArhB,OACA+c,EAAAlhB,KAAA0lB,UAAAF,EAAAxyB,EAAAmuB,EACA,UAAAtZ,EAAAud,WACA,WAAAvd,EAAAud,WAAAlE,GACAlhB,KAAAvS,MAAAC,KAAA,eAAAwzB,SACAlhB,MAAAglB,QAAAhyB,GACAgN,KAAA8F,KAAA,UACA0f,EAAA/S,QAAAwO,QAAAC,IAEA,GAAAS,GAAA3uB,EAAAsgB,EAAA6N,EAAAnhB,QAIAA,KAAAvS,MAAAG,MAAA,sDACA,IAEAyI,KAAA2J,MAAA,SAAArR,GAEA,KADAqR,MAAAvS,MAAAG,MAAA,0BAAAoF,EAAArE,GACA,GACA0H,KAAA2J,SAYAud,EAAAzb,UAAA2jB,gBAAA,SAAAtE,EAAAnuB,EAAA6U,GACA,GAAAnb,EAGA,eAAAmb,EAAAud,UACA,IAAA14B,EAAA,EAAAA,EAAAsT,KAAA+kB,SAAA93B,OAAAP,GAAA,EACA,GAAAsT,KAAA0lB,UAAA1lB,KAAA8kB,SAAAp4B,GAAAsG,EAAAmuB,EACA,UAAAtZ,EAAAud,WACA,MAAAplB,MAAA8kB,SAAAp4B,EAMA,cAAAmb,EAAAwd,UACA,MAAArlB,MAAA8kB,SAAA,EACA,eAAAjd,EAAAwd,UACA,IAAA34B,EAAA,EAAAA,EAAAsT,KAAA+kB,SAAA93B,OAAAP,GAAA,EACA,GAAAsT,KAAA+kB,SAAAr4B,GAAA0oB,WACA,MAAApV,MAAA8kB,SAAAp4B,EAMA,OAAAsT,MAAA8kB,SAAA,IAYAvH,EAAAzb,UAAA4jB,UAAA,SAAAF,EAAAxyB,EAAAiI,EAAA0qB,GACA,GAAAC,GAAAl5B,EAAA,EAAAm5B,EAAA,CACA,KAAAn5B,EAAA,EAAAA,EAAA84B,EAAAM,QAAA74B,OAAAP,GAAA,EACA,GAAAi5B,GAAAH,EAAAM,QAAAp5B,GAAAO,SAAAgO,EAAAhO,OAAA,GAEA,IADA24B,GAAA,EACAC,EAAA,EAAAA,EAAA5qB,EAAAhO,OAAA44B,GAAA,EACA,OAAAL,EAAAM,QAAAp5B,GAAAm5B,EAAA,GAAApN,QAAAxd,EAAA4qB,IAAA,CACAD,GAAA,CACA,OAOA,GAJA,IAAAJ,EAAAM,QAAAp5B,GAAA,GAAA+rB,QAAAzlB,KACA4yB,GAAA,GAGAA,EACA,MAAAJ,GAAAM,QAAAp5B,GAAA,OAEA,KAAAi5B,GAAA,IAAAH,EAAAM,QAAAp5B,GAAA,GAAA+rB,QAAAzlB,GACA,MAAAwyB,GAAAM,QAAAp5B,GAAA,EAGA,WASA6wB,EAAAzb,UAAAwjB,aAAA,SAAAhS,GACA,MAAAtT,MAAA+V,SAAAgQ,YAAAzS,GAAAzV,KAAA,SAAAhI,GAEA,IACA,MAAA+Y,MAAAC,MAAAhZ,GACA,MAAAlH,GAEA,KADAqR,MAAAvS,MAAAG,MAAA,kBAAA0lB,EAAA,KAAA3kB,GACA,GAAA/B,OAAA,2BAEAyJ,KAAA2J,QASAud,EAAAzb,UAAAmjB,IAAA,SAAA/uB,EAAA0nB,GACA,GAAA4H,IACA/S,QAAAvc,EACA4vB,WAEA9lB,MAAA8kB,SAAA5f,KAAAsgB,GACAxlB,KAAA+kB,SAAA7f,KAAAlF,KAAAulB,QAAAvlB,KAAAklB,cAAAtH,IAEA1nB,EAAAsP,GAAA,qBAAAggB,EAAA93B,GACA,GAAAyzB,KACAA,KAAAtL,OAAAnoB,EAAAyzB,SACAA,EAAA,GAAAzzB,EAAAsF,GACAwyB,EAAAM,QAAA5gB,KAAAic,GACAnhB,KAAAglB,QAAAt3B,EAAAyzB,QAAA,YACAnhB,MAAAglB,QAAAt3B,EAAAyzB,QAAA,IACAnhB,KAAA8F,KAAA,YAEAzP,KAAA2J,KAAAwlB,IACAtvB,EAAAsP,GAAA,wBAAAggB,EAAA93B,GACA,GAAAhB,GAAAs5B,EAAA7E,IAKA,KAJAA,IAAAtL,OAAAnoB,EAAAyzB,SACAA,EAAA,GAAAzzB,EAAAsF,GACAgzB,EAAA7E,EAAApf,WAEArV,EAAA,EAAAA,EAAA84B,EAAAM,QAAA74B,OAAAP,GAAA,EACA,GAAA84B,EAAAM,QAAAp5B,GAAAqV,aAAAikB,EAEA,WADAR,GAAAM,QAAAjJ,OAAAnwB,EAAA,EAIAsT,MAAAvS,MAAAE,KAAA,6BAAAD,EAAAsF,KACAqD,KAAA2J,KAAAwlB,KAYAjI,EAAAzb,UAAAyjB,QAAA,SAAAU,EAAAV,GACA,GAAAz3B,KAMA,OAJAob,GAAAiV,MAAArwB,EAAAm4B,GACAV,GACArc,EAAAiV,MAAArwB,EAAAy3B,GAAA,GAEAz3B,GAGAX,EAAAJ,QAAAwwB,kEC1PA,GAAAhL,GAAA9lB,EAAA,cACAyc,EAAAzc,EAAA,UAWAi1B,EAAA,SAAAkC,EAAAn2B,GACAuS,KAAAhN,GAAAuf,EAAA2H,SACAhR,EAAAK,aAAAvJ,MACAA,KAAAvS,QAEAuS,KAAAoZ,WAAAwK,EACA5jB,KAAAkmB,KAAAxE,EAAAwE,KAAAC,YACAnmB,KAAAuM,YACAvM,KAAAiT,MAAA,KACAjT,KAAAoa,iBACApa,KAAAomB,YAAA,KAEApmB,KAAAma,UACAna,KAAAsa,SASAoH,GAAAwE,MACAC,YAAA,EACAE,aAAA,EACAC,SAAA,GASA5E,EAAA5f,UAAAjL,UAAA,SAAA6S,EAAAzb,GACA,eAAAyb,GAAAzb,EAAAssB,QACAva,KAAAuM,SAAAte,EAAAb,MAAAa,EAAAE,QACA6R,KAAA8F,KAAA7X,EAAAE,SACAZ,KAAA,uBACAY,QAAAF,EAAAssB,UAEAva,KAAA8F,KAAA,aACA,gBAAA4D,GAAA,UAAAzb,EAAAV,KACAyS,KAAAkL,eAAAjd,EAAAE,YACA,gBAAAub,GAAA,UAAAzb,EAAAV,KACAU,EAAAE,UAAA6R,KAAAkL,sBACAlL,MAAAkL,eAEAlL,KAAAhQ,YACA,CACA,IAAAgQ,KAAAuM,SAAA7C,IAAAzb,EAAAE,QAGA,MAFA6R,MAAAuM,SAAA7C,GAAAzb,EAAAE,YACA6R,MAAA8F,KAAA,QAEA,KAAA9F,KAAAuM,SAAA7C,GAEA,WADA1J,MAAAvS,MAAAE,KAAA,qCAAA+b,EAIA,cAAAzb,EAAAV,MAAAU,EAAAwsB,GACAza,KAAA0a,SAAAhR,EAAAzb,EAAAwsB,QACA,IAAAxsB,EAAAwsB,IAAAza,KAAAsa,MAAA5Q,IACA1J,KAAAsa,MAAA5Q,GAAAzb,EAAAwsB,IACAxsB,UAAAwsB,GAAAxsB,EAAAwsB,GACAza,KAAAsa,MAAA5Q,GAAAzb,EAAAwsB,IAAAxsB,eACA,IAAAA,EAAAwsB,IAAAxsB,WACA,cAAAA,UAAAV,KAAA,CACA,GAMAwtB,GANA1B,EAAA9G,EAAAgJ,kBACAvb,KAAAoZ,WAAAlpB,aAAA8P,KAAAoZ,WAAAlpB,YAAA1C,MACAwS,KAAAoZ,WAAAlpB,YAAA1C,SACAS,UACA+R,KAAAvS,MAGAuS,MAAAma,OAAAzQ,KACA1J,KAAAma,OAAAzQ,MACA1J,KAAAsa,MAAA5Q,OAEA1J,KAAAma,OAAAzQ,GAAAzb,EAAAwsB,KAAA,EACAM,EAAA/a,KAAAumB,YAAA7c,EAAAzb,EAAAwsB,GAAApB,GAEArZ,KAAAma,OAAAzQ,IACA1J,KAAAma,OAAAzQ,GAAAzb,EAAAwsB,MACAza,KAAAma,OAAAzQ,GAAAzb,EAAAwsB,IAAAM,WACA/a,KAAAsa,MAAA5Q,GAAAzb,EAAAwsB,IAAAM,EAAAyL,WAGAxmB,MAAAvS,MAAAE,KAAAqS,KAAA+B,WAAA,qBACA6M,KAAAW,UAAAthB,MASAyzB,EAAA5f,UAAA9R,MAAA,WACAgQ,KAAAkL,iBACAlL,KAAA8F,KAAA9F,KAAAkL,gBACA3d,KAAA,mBACA4d,QAAA,gBAEAnL,MAAAkL,gBAEAlL,KAAA8F,KAAA,eAGA9F,MAAAiT,YACAjT,MAAAomB,YACApmB,KAAAma,UACAna,KAAAsa,SACAta,KAAAwa,YAAA,MASAkH,EAAA5f,UAAA4Y,SAAA,SAAAhR,EAAA1W,GAEAgN,KAAAma,OAAAzQ,WAIA1J,MAAAma,OAAAzQ,GAAA1W,SACAgN,MAAAsa,MAAA5Q,GAAA1W,GACAgN,KAAAoa,cAAA1Q,IAAA1J,KAAAoa,cAAA1Q,GAAA1W,KACAkW,EAAAyR,SAAA3a,KAAAoa,cAAA1Q,GAAA1W,GAAA,SAAA0mB,GACAA,YAEA1Z,MAAAoa,cAAA1Q,GAAA1W,MAYA0uB,EAAA5f,UAAAiS,aAAA,WACA,GAAA/T,KAAAiT,MACA,MAAAjT,MAAAiT,KAEA,IAAAwT,GAAA,SAAAnc,GACA,qBAAAA,GACA,SAAA1d,OAAA,YAAAoT,KAAA+B,WACA,2CAgCA,OA7BA/B,MAAAiT,OACAyT,mBAAA,SAAAC,GACAF,EAAAE,GACA3mB,KAAAomB,YAAAO,EACA3mB,KAAAkmB,KAAAxE,EAAAwE,KAAAC,aACA9vB,KAAA2J,MACAkkB,oBAAA,SAAAyC,GACAF,EAAAE,GACA3mB,KAAAomB,YAAAO,EACA3mB,KAAAkmB,KAAAxE,EAAAwE,KAAAG,cACAhwB,KAAA2J,MACA4mB,gBAAA,SAAAD,GACAF,EAAAE,GACA3mB,KAAAomB,YAAAO,EACA3mB,KAAAkmB,KAAAxE,EAAAwE,KAAAI,UACAjwB,KAAA2J,OAGAkJ,EAAAyR,SAAA3a,KAAAoZ,WAAA,SAAAM,EAAAtsB,GACA,OAAAssB,EAAAnsB,MACA,eACAsU,OAAAqa,eAAAlc,KAAAiT,MAAA7lB,GACAI,MAAA+kB,EAAAyJ,sBAAAtC,EAAAlsB,OACA2uB,UAAA,MAIA9lB,KAAA2J,OAEAA,KAAAiT,OASAyO,EAAA5f,UAAAoR,kBAAA,WACA,GAAAlF,GAAA,SAAA2F,GACA,MAAAA,GAAAI,gBACA1d,QAAA2J,KA6CA,OA3CAgO,GAAAhe,MAAA,SAAAijB,GACAA,EACA/J,EAAAyR,SAAA3a,KAAAma,OAAA,SAAA0M,EAAAnd,GACAR,EAAAyR,SAAAkM,EAAA,SAAA90B,EAAAiB,GACA,MAAAjB,KAAAkhB,GACAjT,KAAA0a,SAAAhR,EAAA1W,GACAgN,KAAA8F,KAAA9F,KAAAuM,SAAA7C,IACAnc,KAAA,QACAktB,GAAAznB,KAEA,GANA,QAQAqD,KAAA2J,QACA3J,KAAA2J,OAGAA,KAAAhQ,SAEAqG,KAAA2J,MAEAgO,EAAA/d,QAAA,SAAAgjB,EAAAzC,GAEA,wBAAAyC,IAAA3V,SAAAkT,MACAxQ,MAAA0F,KAAA,QAAAuN,OAIA/J,GAAAyR,SAAA3a,KAAAma,OAAA,SAAA0M,EAAAnd,GACAR,EAAAyR,SAAAkM,EAAA,SAAA90B,EAAAiB,GACA,MAAAjB,KAAAkhB,GACAjT,KAAAoa,cAAA1Q,KACA1J,KAAAoa,cAAA1Q,OAEA1J,KAAAoa,cAAA1Q,GAAA1W,KACAgN,KAAAoa,cAAA1Q,GAAA1W,OAEAgN,KAAAoa,cAAA1Q,GAAA1W,GAAAkS,KAAAsL,IACA,GARA,QAUAna,KAAA2J,QACA3J,KAAA2J,QACA3J,KAAA2J,MAEAgO,GAWA0T,EAAA5f,UAAAykB,YAAA,SAAA7c,EAAAtb,EAAAirB,GACA,IAAArZ,KAAAomB,YAEA,MADApmB,MAAAvS,MAAAG,MAAA,0DACAmtB,SAAAzd,OAAAkpB,MAAAlpB,OAGA,IACAmN,GACAqc,EACA/L,EAHApJ,IAiCA,OA5BAzI,GAAAyR,SAAA3a,KAAAoZ,WAAA,SAAAM,EAAAtsB,GACA,UAAAssB,EAAAnsB,OACAokB,EAAAvkB,GAAAssB,KAIAjP,EAAA,SAAA4K,EAAA0R,EAAA/zB,EAAA5F,EAAAI,GACA,GAAAu5B,EAAA35B,GAAA,CACA,GAAAouB,GAAAjJ,EAAA4I,kBAAA4L,EAAA35B,GAAAI,QACAwS,KAAAvS,MACAuS,MAAA8F,KAAA9F,KAAAuM,SAAA8I,IACA9nB,KAAA,UACAktB,GAAAznB,EACA/E,SACAb,OACAG,KAAA,QACAwB,KAAAysB,EAAAzsB,KACAC,OAAAwsB,EAAAxsB,YAIAqH,KAAA2J,KAAA0J,EAAAiI,EAAAvjB,GAGA04B,EAAA9mB,KAAAomB,YAAA/vB,KAAA+T,MAAApK,KAAAomB,aACApmB,KAAAomB,YAAA3b,GAAAoL,OAAAwD,QACA0B,EAAA,GAAA+L,IAGA/L,WACAyL,MAAA,SAAAtwB,EAAAmf,EAAA1L,GACA,GAAA+P,GAAAjsB,EAAA4rB,EAAA2N,EAAAl5B,CACA,eAAA6b,EAAAsV,OAAA,CACA,qBAAAjf,MAAA2J,EAAApc,MAaA,MAZA2I,GAAAzI,MAAAE,KAAA,+BAAAgc,EAAApc,KAAA,WACA2I,GAAA4P,KAAA5P,EAAAqW,SAAA8I,IACA9nB,KAAA,SACAktB,GAAA9Q,EAAA8Q,GACAxsB,SACAwsB,GAAA9Q,EAAA8Q,GACAltB,KAAA,SACA05B,MAAAtd,EAAAsd,MACA75B,KAAAuc,EAAApc,KACAK,MAAA,+BAAA+b,EAAApc,KAAA,QAqCA,IAhCAmsB,EAAAxjB,EAAAkjB,WAAAzP,EAAApc,MACAE,EAAAyI,EAAAzI,MACA4rB,EAAA9G,EAAAgJ,kBAAA7B,EAAAlsB,MAAAmc,EAAAlc,GAGAK,EAFA,OAAA6b,EAAAsd,MAEA,SAAA7jB,EAAAW,GACAA,GACAtW,EAAAG,MAAAmW;EAIA,SAAAsR,EAAA1L,EAAA+P,EAAAtW,EAAAW,GACA,GAAAyX,GAAAjJ,EAAA4I,kBAAAzB,EAAA5rB,IAAAsV,EACA3V,EACAuS,MAAA8F,KAAA9F,KAAAuM,SAAA8I,IACA9nB,KAAA,SACAktB,GAAA9Q,EAAA8Q,GACAxsB,SACAwsB,GAAA9Q,EAAA8Q,GACAltB,KAAA,SACA05B,MAAAtd,EAAAsd,MACA75B,KAAAuc,EAAApc,KACAwB,KAAAysB,EAAAzsB,KACAC,OAAAwsB,EAAAxsB,OACApB,MAAAmW,MAGA1N,KAAAH,EAAAmf,EAAA1L,EAAA+P,GAEA/X,MAAAC,QAAAyX,KACAA,OAEAnjB,EAAAgwB,OAAAxE,EAAAwE,KAAAC,YACA,IACAr4B,EAAAkS,KAAA2J,EAAApc,MAAA6c,MAAApK,KAAAqZ,IACA,MAAA6N,GACAp5B,EAAAwP,OAAA4pB,EAAAj5B,QAAA,IAAAi5B,EAAArC,WAEA,IAAA3uB,EAAAgwB,OAAAxE,EAAAwE,KAAAG,aACA,IACArmB,KAAA2J,EAAApc,MAAA6c,MAAA2Q,EAAA1B,EAAAxD,OAAA/nB,IACA,MAAAq5B,GACAr5B,EAAAwP,OAAA6pB,EAAAl5B,QAAA,IAAAk5B,EAAAtC,WAEA,IAAA3uB,EAAAgwB,OAAAxE,EAAAwE,KAAAI,SACA,IACAU,EAAAhnB,KAAA2J,EAAApc,MAAA6c,MAAApK,KAAAqZ,GACA2N,KAAAnpB,KACAmpB,EAAAnpB,KAAA/P,IAAAuI,QAAAiH,SAEAxP,EAAAwP,OAAA,4BACAqM,EAAApc,KAAA,KAAAy5B,GAEA,MAAAI,GACAt5B,EAAAwP,OAAA8pB,EAAAn5B,QAAA,IAAAm5B,EAAAvC,UAIAxuB,KAAA0kB,EAAA/a,KAAA0J,KASAgY,EAAA5f,UAAAC,SAAA,WACA,MAAA/B,MAAAwa,YACA,aAAAxa,KAAAwa,YAAA,IAEA,sBAIArtB,EAAAJ,QAAA20B,oDC9YA,GAAAnQ,GAAA9kB,EAAA,eAAA8X,QAEA2E,EAAAzc,EAAA,WACA8lB,EAAA9lB,EAAA,eAEA46B,EAAA,SAAAzD,EAAA1D,EAAApa,EAAArY,GACA,GAAA65B,MACA3V,EAAA,KACA4V,EAAA,KACAN,EAAA,EACA5N,EAAA/W,SAEA4G,GAAAyR,SAAAiJ,EAAA,SAAAlK,EAAAtsB,GACA,OAAAssB,EAAAnsB,MACA,aACAyS,KAAA5S,GAAA,WAGA,GAAAo6B,GAAAP,EACArpB,EAAA,GAAA2T,GAAA,SAAAnO,EAAAW,GACAujB,EAAAE,IACApkB,UACAW,SACAqX,SAAA1B,EAAA5rB,OAGA0tB,EAAAjJ,EAAA4I,kBAAAzB,EAAAlsB,MACAmU,MAAAG,UAAA2F,MAAAza,KAAAsV,UAAA,GACA7U,EASA,OARAw5B,IAAA,EACAnhB,GACAmZ,OAAA,SACA1xB,KAAAH,EACA65B,MAAAO,EACAz4B,KAAAysB,EAAAzsB,KACAC,OAAAwsB,EAAAxsB,SAEA4O,GAEAoC,KAAA5S,GAAAq6B,SAAA,WACA,GAAAjM,GAAAjJ,EAAA4I,kBAAAzB,EAAAlsB,MACAmU,MAAAG,UAAA2F,MAAAza,KAAAsV,UAAA,GACA7U,EACAqY,IACAmZ,OAAA,SACA1xB,KAAAH,EACA65B,MAAA,KACAl4B,KAAAysB,EAAAzsB,KACAC,OAAAwsB,EAAAxsB,SAIA,MACA,aACA2iB,IACAzI,EAAAK,aAAAvJ,MACAunB,EAAAvnB,KAAA8F,WACA9F,MAAA8F,KACA6L,MAEAA,EAAAvkB,GAAAssB,CACA,MACA,gBACA7X,OAAAqa,eAAAlc,KAAA5S,GACAI,MAAA+kB,EAAAyJ,sBAAAtC,EAAAlsB,OACA2uB,UAAA,MAIA9lB,KAAA2J,OAEAkgB,EAAAlgB,KAAA,SAAAzS,EAAAoc,GACA,aAAApc,EAQA,MAPAyS,MAAA2F,KACA3F,KAAA2F,MAEAuD,EAAAyR,SAAA2M,EAAA,SAAAtM,GACAA,EAAAjX,OAAA,iBAEAujB,KAGA,IAAA3d,EAGA,cAAAA,EAAApc,KACA,GAAA+5B,EAAA3d,EAAAsd,OAAA,CACA,GAAA1mB,GAAA+mB,EAAA3d,EAAAsd,OACA7L,EAAA7a,EAAA6a,eACAkM,GAAA3d,EAAAsd,OACAtd,EAAA/b,MACA2S,EAAAwD,OAAA4F,EAAA/b,OAEA2S,EAAA6C,QAAAmP,EAAAgJ,kBAAAH,EAAAzR,EAAAlc,QAGAA,GAAAG,MAAA,wEACA+b,EAAAsd,WAEA,UAAAtd,EAAApc,MACAokB,EAAAhI,EAAAvc,OACAm6B,EAAA5d,EAAAvc,KAAAmlB,EAAAgJ,kBAAA5J,EAAAhI,EAAAvc,MAAAI,MACAmc,EAAAlc,KAGA4I,KAAA2J,OAEAqZ,EAAA9G,EAAA4I,kBACAyI,EAAA1zB,aAAA0zB,EAAA1zB,YAAA1C,MAAAo2B,EAAA1zB,YAAA1C,SACAmU,MAAAG,UAAA2F,MAAAza,KAAAqsB,EAAA,GACA5rB,GAEAqY,GACAvY,KAAA,YACAwB,KAAAsqB,EAAAtqB,KACAC,OAAAqqB,EAAArqB,SAIA7B,GAAAJ,QAAAs6B,sECvHA,GAAAne,GAAAzc,EAAA,WAEA6lB,EAAA,SAAA4N,EAAApa,GACAoD,EAAAK,aAAAvJ,MAEAkgB,EAAAlgB,KAAA,SAAA8F,EAAAvY,EAAAoc,GACA,UAAApc,GAGAuY,EAAA6D,EAAApc,KAAAoc,EAAA1b,UACAoI,KAAA2J,UAAA8F,OAEA9F,KAAA8F,KAAA,SAAAyhB,EAAAh6B,EAAAoc,GACA4d,GAAAh6B,OAAAU,QAAA0b,IAAA,IACAtT,QAAAyP,GAGA3Y,GAAAJ,QAAAulB,qCCjBA,GAAAf,GAAA9kB,EAAA,eAAA8X,QAEA8iB,EAAA56B,EAAA,wBACA6lB,EAAA7lB,EAAA,0BACA8lB,EAAA9lB,EAAA,cACAi1B,EAAAj1B,EAAA,cAUA+wB,EAAA,SAAA/K,GACA,YACAzS,MAAAyS,UAcA+K,GAAA1b,UAAAkiB,YAAA,SAAA9tB,EAAA9I,EAAAgsB,GACA,YACA,IAAAhO,GAAA/d,CACA,WAAAkkB,GAAA,SAAAnO,GACAgW,GACA/rB,EAAA+rB,EAAAhsB,KAEAge,EADAgO,EAAAgJ,SACA,GAAAV,GAAAtI,aAAApZ,KAAAyS,QAAAhlB,OAEA,GAAA8kB,GAAA8U,EAAAhxB,QACA+iB,cACApZ,KAAAyS,QAAAhlB,QAGA2d,EAAA,GAAAmH,GAAAD,EAAAtS,KAAAyS,QAAAhlB,OAGA2d,EAAA1F,KAAA,mBACA,GAAAuN,GAAA7H,EAAA8H,mBACA7lB,KACA4lB,EAAA5lB,OAEA+V,GACAlN,KAAAkV,EACAuT,SAAA1L,MAIAjT,KAAAyS,QAAAgB,WAAAvd,EAAA9I,EAAAge,IACA/U,KAAA2J,QAaAwd,EAAA1b,UAAA4c,YAAA,SAAAxoB,EAAA7I,EAAAimB,EAAAgP,GACA,YACA,IAIAsB,GAJAf,GACAz1B,KAAAkmB,EAAAlmB,KACA01B,KAAAxP,EAAAwP,KACAxT,YAAAgE,EAAAhE,YAoBA,OAjBAgE,GAAA,aACAsQ,EAAAv2B,EAAAsG,IAAA2f,EAAA,aACAsQ,GAAAtQ,EAAAjmB,KAAAimB,EAAAjmB,IAAAimB,EAAA,cACAsQ,GACAx2B,KAAAkmB,EAAA,WACA8F,WAAA9F,EAAAjmB,IAAAimB,EAAA,cAGAgP,GAAAhP,EAAA8O,UACA9O,EAAA8O,SAAA3J,QAAAnF,EAAA,iBACAsQ,EAAAxB,UAAA,EACAE,GACAj1B,EAAAI,MAAAE,KAAA,+EAKAqS,KAAAgkB,YAAA9tB,EAAA,UAAA0tB,GAAA/lB,KACA,SAAAglB,EAAAn1B,GAEA,MADAA,GAAAixB,SAAArL,SAAAuP,EACAn1B,GACA2I,KAAA2J,KAAA6iB,KAaArF,EAAA1b,UAAAsiB,OAAA,SAAA9Q,EAAAoU,EAAAr6B,GACA,YACA,IAAAimB,EAAAjmB,KAAAimB,EAAAjmB,OACA,OACAD,KAAAC,EACA+rB,WAAA9F,EAAAjmB,OAEA,IAAAimB,EAAA,YACA,GAAAsQ,GAAA8D,EAAA/zB,IAAA2f,EAAA,WACA,QAAAsQ,GAAAtQ,EAAAjmB,KAAAimB,EAAAjmB,IAAAimB,EAAA,aAEAlmB,KAAAkmB,EAAA,WACA8F,WAAA9F,EAAAjmB,IAAAimB,EAAA,aAGAsQ,EAEA,UAKAz2B,EAAAJ,QAAAywB,8HCxIA,GAAAjM,GAAA9kB,EAAA,eAAA8X,QAEA2E,EAAAzc,EAAA,UASAgxB,EAAA,SAAAhwB,GACAuS,KAAAvS,QACAuS,KAAA4V,SACA5V,KAAAqe,WAAAre,KAAA2nB,aAAA3nB,KAAA4nB,cACA5nB,KAAA6nB,mBACAC,KAAA9nB,KAAA+nB,aACAC,MAAAhoB,KAAA+nB,aACAE,mBAAAjoB,KAAA+nB,aACAhS,SAAA/V,KAAA+nB,aACAG,OAAAloB,KAAA+nB,aACAhJ,IAAA/e,KAAA+nB,aACAzU,SAAAtT,KAAAmoB,mBAWA1K,GAAA3b,UAAAnO,IAAA,SAAA2f,EAAAlZ,GACA,GAAA6X,GAAArD,KAAAW,WAAA+D,EAAAlZ,GAEA,WAAAmX,GAAA,SAAAnO,EAAAW,GACA/D,KAAA4V,MAAA3D,GACA7O,EAAApD,KAAA4V,MAAA3D,IAEAjS,KAAAoD,QAAAkQ,EAAAlZ,GAAAyD,KAAA,SAAAoU,EAAA7O,EAAA3M,GACAuJ,KAAA4V,MAAA3D,GAAAxb,EAEA2M,EAAA3M,IACAJ,KAAA2J,KAAAiS,EAAA7O,GAAAW,IAEA1N,KAAA2J,QASAyd,EAAA3b,UAAAikB,YAAA,SAAA3rB,GACA,UAAAmX,GAAA,SAAAnO,EAAAW,GACA,GAAA2V,EACA,KAAAtf,EAEA,MADA4F,MAAAvS,MAAAE,KAAA,2CACAoW,GAEA,KAAA2V,IAAA1Z,MAAA6nB,kBACA,GAAA7nB,KAAA6nB,kBAAA5b,eAAAyN,GAAA,CACA,OAAAtf,EAAAqe,QAAAiB,EAAA,OACA,MAAA1Z,MAAA6nB,kBAAAnO,GAAA1sB,KAAAgT,KAAA5F,EAAAgJ,EAAAW,EACA,SAAA3J,EAAAqe,QAAA,iBAAAiB,EACA,MAAA1Z,MAAA6nB,kBAAAnO,GAAA1sB,KAAAgT,KAAA5F,EAAAgJ,EAAAW,GAIAA,KACA1N,KAAA2J,OAcA,IAAAooB,GAAA,SAAA9B,GACA,UAAA/U,GAAA,SAAAnO,EAAAW,GACA,GAAAskB,KACA/B,GAAA9f,QAAA,SAAA5I,GACAA,EAAAC,KAAAuF,EAAA,SAAAzU,GACA05B,EAAAnjB,KAAAvW,GACA05B,EAAAp7B,SAAAq5B,EAAAr5B,QACA8W,EAAAskB,SAgBA5K,GAAA3b,UAAAsB,QAAA,SAAAkQ,EAAAlZ,GACA,UAAAmX,GAAA,SAAAnO,EAAAW,GACA,GAAAuiB,KACA,OAAAhpB,UAAAlD,EACA2J,KAEAmF,EAAAof,YAAAtoB,KAAAqe,UAAA,SAAA9d,GACA+lB,EAAAphB,KAAA,GAAAqM,GAAAhR,EAAAlK,QAAAid,EAAAlZ,MACA/D,KAAA2J,WACAooB,GAAA9B,GAAAzoB,KAAAuF,EAAA,WACAW,EAAA,+BAAA6K,KAAAW,WAAA+D,EAAAlZ,SAEA/D,KAAA2J,QAYAyd,EAAA3b,UAAA+e,YAAA,SAAAtgB,GACAP,KAAAqe,UAAAnZ,KAAA3E,IAWAkd,EAAA3b,UAAAgf,aAAA,SAAAyH,EAAAC,GACA,MAAAxoB,MAAA6nB,kBAAAU,OACAvoB,MAAAvS,MAAAE,KAAA,4CAAA46B,QAGAvoB,KAAA6nB,kBAAAU,GAAAC,IASA/K,EAAA3b,UAAA6J,SAAA,SAAA0S,GACAA,EAAApxB,QAIAoxB,EAAA7X,QAAA,SAAA0W,GACAA,EAAA3c,SACAP,KAAA6gB,YAAA3D,EAAA3c,UACA2c,EAAAqL,OAAArL,EAAAsL,WACAxoB,KAAA8gB,aAAA5D,EAAAqL,MAAArL,EAAAsL,YAEAnyB,KAAA2J,QAYAyd,EAAAgL,UAAA,SAAApS,EAAAjc,GACA,GAAA1N,EACA,KAAAA,EAAA,EAAAA,EAAA2pB,EAAAppB,OAAAP,GAAA,EACA,OAAA0N,EAAAqe,QAAApC,EAAA3pB,GAAA,OACA,QAGA,WAWA+wB,EAAAiL,mBAAA,SAAAtuB,GACA,GACAyqB,GACA8D,EACA3kB,EAHA4kB,EAAAxuB,EAAAqe,QAAA,QAQA,KAHAre,IAAAyuB,QAAA,eAGA,MAAAzuB,EAAA0uB,OAAAF,IACAxuB,IAAAqN,MAAA,EAAAmhB,GAAAxuB,EAAAqN,MAAAmhB,EAAA,EAAAxuB,EAAAnN,OAOA,KAHA27B,EAAAxuB,EAAAqe,QAAA,IAAAmQ,GAEA/D,EAAAzqB,EAAAgkB,OAAAwK,EAAA,GAAArhB,MAAA,KACA,KAAAsd,EAAApM,QAAA,OACAkQ,EAAA9D,EAAApM,QAAA,MACA,IAAAkQ,EACA9D,EAAAkE,QAEAlE,EAAAhI,OAAA8L,EAAA,IAMA,KADA3kB,EAAA5J,EAAAgkB,OAAA,EAAAwK,GACAA,EAAA,EAAAA,EAAA/D,EAAA53B,OAAA27B,GAAA,EACA5kB,GAAA,IAAA6gB,EAAA+D,EAEA,OAAA5kB,IAaAyZ,EAAA3b,UAAA6lB,aAAA,SAAArU,EAAAlZ,EAAAgJ,EAAAW,GACA,GAEAilB,GACAC,EACAC,EACAC,EACAlD,EANA5P,GAAA,sDACA,MAQA,OAAAoH,GAAAgL,UAAApS,EAAAjc,IACAgJ,EAAAqa,EAAAiL,mBAAAtuB,KACA,GAGAkZ,EAIAmK,EAAAgL,UAAApS,EAAA/C,IACA,KAAAlZ,EAAAqe,QAAA,QACAuQ,EAAA1V,EAAA8K,OAAA,EAAA9K,EAAA8V,YAAA,MACAH,EAAAD,EAAAvQ,QAAA,OACAyQ,EAAAD,EAAA,EAAAD,EAAA5K,OAAA6K,EAAA,GAAAxQ,QAAA,KACA0Q,EAAAH,EAAA5K,OAAA8K,GACAjD,EAAA+C,EAAA5K,OAAA,EAAA8K,GAEA9lB,EADA,IAAAhJ,EAAAqe,QAAA,KACAgF,EAAAiL,mBAAAzC,EAAA7rB,GAEAqjB,EAAAiL,mBAAAzC,EAAAkD,EAAA,IAAA/uB,KAEA,OAEA2J,MAjBAA,KACA,IA6BA0Z,EAAA3b,UAAA8lB,aAAA,SAAAtU,EAAAlZ,EAAAgJ,EAAAW,GACA,GAAAsS,IAAA,WACA,OAAAoH,GAAAgL,UAAApS,EAAAjc,IACAgJ,EAAAhJ,IACA,GACA,IAAAA,EAAAqe,QAAA,UACArV,EAAAhJ,IACA,OAEA2J,MAaA0Z,EAAA3b,UAAAqmB,kBAAA,SAAA7U,EAAAlQ,EAAAW,GACA,GAAAlO,EACA,KACAA,EAAAyd,EAAA8K,OAAA,IACAxP,KAAAC,MAAAhZ,GACAuN,EAAAvN,GACA,MAAA5J,GACA+T,KAAAvS,MAAAE,KAAA,mCAAA2lB,GACAvP,MAYA0Z,EAAA3b,UAAAimB,aAAA,SAAA3tB,EAAAgJ,EAAAW,GACA,GAAAslB,GAAA,GAAApS,eACAoS,GAAAzc,iBAAA,4BAAAxJ,EAAAW,GACA,IAAAslB,EAAApa,YAAAoa,EAAAxR,aACAzU,EAAAimB,EAAAxR,cACA,IAAAwR,EAAApa,aACAjP,KAAAvS,MAAAE,KAAA,uBAAAyM,EAAA,KAAAivB,EAAA5uB,QACAsJ,EAAAslB,EAAA5uB,UAEApE,KAAA2J,KAAAoD,EAAAW,IAAA,GACAslB,EAAA7xB,iBAAA,oBACA6xB,EAAAnyB,KAAA,MAAAkD,GAAA,GACAivB,EAAAr7B,QAGAb,EAAAJ,QAAA0wB,oDCpVA,GAAAvU,KASAA,GAAAof,YAAA,SAAAgB,EAAAtb,GACA,GAAAsb,EAAA,CACA,GAAA58B,EACA,KAAAA,EAAA48B,EAAAr8B,OAAA,EAAAP,EAAA,MACA48B,EAAA58B,KAAAshB,EAAAsb,EAAA58B,KAAA48B,IADA58B,GAAA,MAYAwc,EAAAqgB,QAAA,SAAAvO,EAAAtB,GACA,MAAA7X,QAAAC,UAAAmK,eAAAjf,KAAAguB,EAAAtB,IAUAxQ,EAAAyR,SAAA,SAAAK,EAAAhN,GACA,GAAA0L,EACA,KAAAA,IAAAsB,GACA,GAAAA,EAAA/O,eAAAyN,IACA1L,EAAAgN,EAAAtB,MACA,OAeAxQ,EAAAiV,MAAA,SAAAqL,EAAA9f,EAAAyV,GAQA,MAPAzV,IACAR,EAAAyR,SAAAjR,EAAA,SAAAlc,EAAAksB,IACAyF,IAAAjW,EAAAqgB,QAAAC,EAAA9P,MACA8P,EAAA9P,GAAAlsB,KAIAg8B,GAQAtgB,EAAA5a,MAAA,WACA,GAEAW,GAFAw6B,EAAA,OACAC,EAAA,EAGA,oBAAA9e,gBAAAC,gBACA5b,EAAA,GAAA0b,YAAA+e,GACA9e,OAAAC,gBAAA5b,GACAia,EAAAof,YAAAr5B,EAAA,SAAA9C,GACAs9B,GAAA,IAAAt9B,QAGA,oBAAAye,gBAAA+e,YACA16B,EAAA2b,OAAA+e,YAAAD,GACAxgB,EAAAof,YAAAr5B,EAAA,SAAA9C,GACAs9B,GAAA,IAAAt9B,QAGA,MAAAu9B,EAAA,GACAD,GAAA,IAAAjc,KAAAoc,KAAA,IAAApc,KAAAC,UACAic,GAAA,CAIA,OAAAD,IAWAvgB,EAAA2gB,OAAA,SAAAte,GACA,GAGA7e,GAHAO,EAAAse,EAAAte,OACAgC,EAAA,GAAA6gB,aAAA,EAAA7iB,GACA68B,EAAA,GAAAC,aAAA96B,EAEA,KAAAvC,EAAA,EAAAO,EAAAP,KAAA,EACAo9B,EAAAp9B,GAAA6e,EAAAye,WAAAt9B,EAGA,OAAAuC,IAUAia,EAAA+gB,OAAA,SAAAh7B,GACA,MAAAysB,QAAAwO,aAAA9f,MAAA,QAAA2f,aAAA96B,KASAia,EAAAK,aAAA,SAAAyR,GACA,GAMAmP,GAAAjlB,EANAklB,GACAC,cAAArP,EACAsP,YACAC,iBACAC,UACAC,eAWAN,GAAA,SAAAO,EAAAC,GACA,GAAAj+B,GAAAoB,IAEA,KAAA48B,MAAAz9B,OACA,QAGA,KAAAP,EAAAg+B,EAAAz9B,OAAA,EAAAP,GAAA,EAAAA,GAAA,EACAi+B,EAAAD,EAAAh+B,KACAoB,EAAAoX,KAAAwlB,EAAA7N,OAAAnwB,EAAA,GAGA,OAAAoB,IAUAoX,EAAA,SAAAuV,EAAAltB,EAAAijB,GACA,kBAAAjjB,GACAyS,KAAA,QAAAya,GAAAvV,MAAA3X,EAAAijB,IACAxQ,KAAAya,GAAAltB,GACAyS,KAAAya,GAAAltB,GAAA2X,KAAAsL,GAEAxQ,KAAAya,GAAAltB,IAAAijB,IAUAwK,EAAAxV,GAAAN,EAAA7O,KAAA+zB,EAAA,YASApP,EAAAtV,KAAAR,EAAA7O,KAAA+zB,EAAA,UAQApP,EAAAlV,KAAA,SAAAvY,EAAAsI,GACA,GAAAnJ,GAAAqY,CAIA,KAAArY,EAAA,EAAAsT,KAAAsqB,SAAA/8B,IACAb,EAAAsT,KAAAsqB,SAAA/8B,GAAAN,OAAAP,GAAA,EACA,GAAAsT,KAAAsqB,SAAA/8B,GAAAb,GAAAmJ,MAAA,EACA,MAGA,IAAAmK,KAAAwqB,OAAAj9B,GAGA,IAFAwX,EAAA/E,KAAAwqB,OAAAj9B,GACAyS,KAAAwqB,OAAAj9B,MACAb,EAAA,EAAAA,EAAAqY,EAAA9X,OAAAP,GAAA,EACAqY,EAAArY,GAAAmJ,EAGA,KAAAnJ,EAAA,EAAAA,EAAAsT,KAAAuqB,cAAAt9B,OAAAP,GAAA,EACAsT,KAAAuqB,cAAA79B,GAAA,GAAAa,EAAAsI,IACAmK,KAAAuqB,cAAA79B,GAAA,GAAAmJ,EAGA,KAAAnJ,EAAAsT,KAAAyqB,YAAAx9B,OAAA,EAAAP,GAAA,EAAAA,GAAA,EACAsT,KAAAyqB,YAAA/9B,GAAA,GAAAa,EAAAsI,KACAkP,EAAA/E,KAAAyqB,YAAA5N,OAAAnwB,EAAA,GACAqY,EAAA,MAAAlP,KAGAQ,KAAA+zB,GAQApP,EAAArV,IAAA,SAAApY,EAAAijB,GACA,MAAAjjB,IASA,kBAAAA,KACA48B,EAAAnqB,KAAAyqB,YAAA,SAAAvN,GACA,MAAAA,GAAA,KAAA3vB,KAAAijB,GAAA0M,EAAA,KAAA1M,KAEA2Z,EAAAnqB,KAAAuqB,cAAA,SAAArN,GACA,MAAAA,GAAA,KAAA3vB,KAAAijB,GAAA0M,EAAA,KAAA1M,WAIAA,GAIA2Z,EAAAnqB,KAAAsqB,SAAA/8B,GAAA,SAAA2vB,GACA,MAAAA,KAAA1M,IAEA2Z,EAAAnqB,KAAAwqB,OAAAj9B,GAAA,SAAA2vB,GACA,MAAAA,KAAA1M,YAPAxQ,MAAAsqB,SAAA/8B,SACAyS,MAAAwqB,OAAAj9B,aAnBAyS,MAAAqqB,cACArqB,KAAAsqB,YACAtqB,KAAAuqB,iBACAvqB,KAAAwqB,eACAxqB,KAAAyqB,kBAwBAp0B,KAAA+zB,IAWAlhB,EAAAgV,gBAAA,WACA,yBAAAzhB,WAUAyM,EAAA0hB,QAAA,SAAA/0B,EAAAtI,GACA,qBAAAwiB,OAAA,mBAAA8a,mBAAA,CACA,GAAAC,GAAA,GAAAD,kBAEA,OADAC,GAAAC,OAAAl1B,GACAi1B,EAAAF,QAAAr9B,GAEA,UAAAwiB,OAAAla,IAAAtI,UASA2b,EAAAqb,QAAA,SAAAngB,GACA,MAAAA,GAAA3H,SAAAuuB,qBAAA,WAGA79B,EAAAJ,QAAAmc,oCCnTA,QAAA+hB,KACA,YACA,IAAAvH,EAmBA,OAlBAlhB,QAAA/F,SAAAyuB,cAEAxH,EAAAlhB,OAAA/F,SAAAyuB,cAAA7V,IACA,aAAA5Y,SAAAwS,YACA,WAAAxS,SAAAwS,YAEAyU,EAAAlhB,OAAA/F,SAAAuuB,qBAAA,UACAtH,MAAAz2B,OAAA,GAAAooB,MAGAqO,EAAAjnB,SAAA0uB,cACA,qDAEA,IAAAzH,EAAAz2B,QACAqc,QAAA1b,MAAA,8CAEA81B,IAAA,GAAArO,KAEAqO,EApCA,GAAAxK,IACAzsB,EAAA,0CACAA,EAAA,kCACAA,EAAA,qCACAA,EAAA,oCACAA,EAAA,4CACAA,EAAA,+CACAA,EAAA,4CACAA,EAAA,qCACAA,EAAA,kCACAA,EAAA,mCACAA,EAAA,uCACAA,EAAA,iCA2BA,oBAAA+V,QACAA,OAAAqH,QAAApd,EAAA,YAAA4J,SACAkiB,SAAA/V,OAAA+V,SAAAC,KACA8F,SAAA7xB,EAAA,kBACAid,OAAAuhB,IACA/R,YACAkS,OACA3+B,EAAA,6CACAA,EAAA,iDAIAA,EAAA,aACAwxB,UAAA,EACAK,SAAA7xB,EAAA,kBACAysB,YACA9U","file":"freedom.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = [{\"name\":\"console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.crypto\",\"api\":{\"getRandomBytes\":{\"type\":\"method\",\"value\":[\"number\"],\"ret\":\"buffer\"}}},{\"name\":\"core.echo\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"message\":{\"type\":\"event\",\"value\":\"string\"}}},{\"name\":\"core\",\"api\":{\"createChannel\":{\"type\":\"method\",\"value\":[],\"ret\":{\"channel\":\"proxy\",\"identifier\":\"string\"}},\"bindChannel\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getLogger\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"require\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"proxy\"}}},{\"name\":\"core.oauth\",\"api\":{\"initiateOAuth\":{\"type\":\"method\",\"value\":[[\"array\",\"string\"]],\"ret\":{\"redirect\":\"string\",\"state\":\"string\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"launchAuthFlow\":{\"type\":\"method\",\"value\":[\"string\",{\"redirect\":\"string\",\"state\":\"string\"}],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"core.peerconnection\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"string\",[\"array\",\"string\"],\"boolean\"]},\"send\":{\"type\":\"method\",\"value\":[{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}]},\"onReceived\":{\"type\":\"event\",\"value\":{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"openDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"closeDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"onOpenDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"onCloseDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveVideo\":\"number\",\"offerToReceiveAudio\":\"number\",\"voiceActivityDetection\":\"boolean\",\"iceRestart\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[]},\"onClose\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"core.rtcdatachannel\",\"api\":{\"constructor\":{\"value\":[\"string\"]},\"getLabel\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getOrdered\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getMaxPacketLifeTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getMaxRetransmits\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getProtocol\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getNegotiated\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"onopen\":{\"type\":\"event\",\"value\":[]},\"onerror\":{\"type\":\"event\",\"value\":[]},\"onclose\":{\"type\":\"event\",\"value\":[]},\"close\":{\"type\":\"method\",\"value\":[]},\"onmessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"buffer\":\"buffer\"}},\"getBinaryType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setBinaryType\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"sendBuffer\":{\"type\":\"method\",\"value\":[\"buffer\"]}}},{\"name\":\"core.rtcpeerconnection\",\"api\":{\"constructor\":{\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}]},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveAudio\":\"number\",\"offerToReceiveVideo\":\"number\",\"iceRestart\":\"boolean\",\"voiceActivityDetection\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"createAnswer\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setLocalDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}]},\"getLocalDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setRemoteDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}],\"ret\":{}},\"getRemoteDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"getSignalingState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"updateIce\":{\"type\":\"method\",\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}],\"ret\":{}},\"addIceCandidate\":{\"type\":\"method\",\"value\":[{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}],\"ret\":{}},\"getIceGatheringState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getIceConnectionState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getConfiguration\":{\"type\":\"method\",\"value\":[],\"ret\":{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}},\"getLocalStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getRemoteStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getStreamById\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"addStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"removeStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":{}},\"createDataChannel\":{\"type\":\"method\",\"value\":[\"string\",{\"ordered\":\"boolean\",\"maxPacketLifeTime\":\"number\",\"maxRetransmits\":\"number\",\"protocol\":\"string\",\"negotiated\":\"boolean\",\"id\":\"number\"}],\"ret\":\"string\"},\"ondatachannel\":{\"type\":\"event\",\"value\":{\"channel\":\"string\"}},\"getStats\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"object\"},\"onnegotiationneeded\":{\"type\":\"event\",\"value\":[]},\"onicecandidate\":{\"type\":\"event\",\"value\":{\"candidate\":{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}}},\"onsignalingstatechange\":{\"type\":\"event\",\"value\":[]},\"onaddstream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"onremovestream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"oniceconnectionstatechange\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.storage\",\"api\":{\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\"},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"clear\":{\"type\":\"method\",\"value\":[]}}},{\"name\":\"core.tcpsocket\",\"api\":{\"constructor\":{\"value\":[\"number\"]},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"connected\":\"boolean\",\"localAddress\":\"string\",\"localPort\":\"number\",\"peerAddress\":\"string\",\"peerPort\":\"number\"}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_CONNECTED\":\"Socket already connected\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"TIMED_OUT\":\"Timed out\",\"NOT_CONNECTED\":\"Socket not connected\",\"NETWORK_CHANGED\":\"Network changed\",\"CONNECTION_CLOSED\":\"Connection closed gracefully\",\"CONNECTION_RESET\":\"Connection reset\",\"CONNECTION_REFUSED\":\"Connection refused\",\"CONNECTION_FAILED\":\"Connection failed\",\"NAME_NOT_RESOLVED\":\"DNS lookup failed\",\"INTERNET_DISCONNECTED\":\"Cannot reach any network\",\"ADDRESS_INVALID\":\"Invalid address\",\"ADDRESS_UNREACHABLE\":\"No route to host\",\"HOST_UNREACHABLE\":\"SOCKS proxy server could not reach host\"}},\"close\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onDisconnect\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"connect\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"secure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"pause\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"resume\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"prepareSecure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"write\":{\"type\":\"method\",\"value\":[\"buffer\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"data\":\"buffer\"}},\"listen\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onConnection\":{\"type\":\"event\",\"value\":{\"socket\":\"number\",\"host\":\"string\",\"port\":\"number\"}}}},{\"name\":\"core.udpsocket\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_BOUND\":\"Socket already bound\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"NETWORK_CHANGED\":\"Network changed\",\"SNED_FAILED\":\"Send failed\"}},\"bind\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"localAddress\":\"string\",\"localPort\":\"number\"}},\"sendTo\":{\"type\":\"method\",\"value\":[\"buffer\",\"string\",\"number\"],\"ret\":\"number\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"destroy\":{\"type\":\"method\",\"value\":[]},\"onData\":{\"type\":\"event\",\"value\":{\"resultCode\":\"number\",\"address\":\"string\",\"port\":\"number\",\"data\":\"buffer\"}}}},{\"name\":\"core.view\",\"api\":{\"show\":{\"type\":\"method\",\"value\":[\"string\"]},\"isSecure\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"close\":{\"type\":\"method\",\"value\":[]},\"postMessage\":{\"type\":\"method\",\"value\":[\"object\"]},\"message\":{\"type\":\"event\",\"value\":\"object\"},\"onClose\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.websocket\",\"api\":{\"constructor\":{\"value\":[\"string\",[\"array\",\"string\"]]},\"send\":{\"type\":\"method\",\"value\":[{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"close\":{\"type\":\"method\",\"value\":[\"number\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"onOpen\":{\"type\":\"event\",\"value\":[]},\"onError\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onClose\":{\"type\":\"event\",\"value\":{\"code\":\"number\",\"reason\":\"string\",\"wasClean\":\"boolean\"}}}},{\"name\":\"core.xhr\",\"api\":{\"open\":{\"type\":\"method\",\"value\":[\"string\",\"string\",\"boolean\",\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[{\"string\":\"string\",\"buffer\":\"buffer\"}]},\"abort\":{\"type\":\"method\",\"value\":[]},\"getResponseHeader\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"getAllResponseHeaders\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setRequestHeader\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"overrideMimeType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getResponse\":{\"type\":\"method\",\"value\":[],\"ret\":{\"string\":\"string\",\"buffer\":\"buffer\",\"object\":\"object\"}},\"getResponseText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseURL\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setResponseType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getStatus\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getStatusText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getTimeout\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"setTimeout\":{\"type\":\"method\",\"value\":[\"number\"]},\"getWithCredentials\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"setWithCredentials\":{\"type\":\"method\",\"value\":[\"boolean\"]},\"onloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onerror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"ontimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onreadystatechange\":{\"type\":\"event\",\"value\":{}},\"onuploadloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploaderror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadtimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadreadystatechange\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"social\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"User is currently offline\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\",\"LOGIN_BADCREDENTIALS\":\"Error authenticating with server\",\"LOGIN_FAILEDCONNECTION\":\"Error connecting to server\",\"LOGIN_ALREADYONLINE\":\"User is already logged in\",\"LOGIN_OAUTHERROR\":\"OAuth Error\",\"SEND_INVALIDDESTINATION\":\"Message sent to an invalid destination\"}},\"STATUS\":{\"type\":\"constant\",\"value\":{\"OFFLINE\":\"OFFLINE\",\"ONLINE\":\"ONLINE\",\"ONLINE_WITH_OTHER_APP\":\"ONLINE_WITH_OTHER_APP\"}},\"login\":{\"type\":\"method\",\"value\":[{\"agent\":\"string\",\"version\":\"string\",\"url\":\"string\",\"interactive\":\"boolean\",\"rememberLogin\":\"boolean\"}],\"ret\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clearCachedCredentials\":{\"type\":\"method\",\"value\":[]},\"getClients\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getUsers\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"sendMessage\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"logout\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"from\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"message\":\"string\"}},\"onUserProfile\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"lastUpdated\":\"number\",\"name\":\"string\",\"url\":\"string\",\"imageData\":\"string\"}},\"onClientState\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"}}}},{\"name\":\"storage\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"storebuffer\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"transport\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"proxy\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"tag\":\"string\",\"data\":\"buffer\"}},\"onClose\":{\"type\":\"event\",\"value\":[]}}}];\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.0.1\n */\n\n(function() {\n    \"use strict\";\n\n    function $$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function $$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function $$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var $$utils$$_isArray;\n\n    if (!Array.isArray) {\n      $$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      $$utils$$_isArray = Array.isArray;\n    }\n\n    var $$utils$$isArray = $$utils$$_isArray;\n    var $$utils$$now = Date.now || function() { return new Date().getTime(); };\n    function $$utils$$F() { }\n\n    var $$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      $$utils$$F.prototype = o;\n      return new $$utils$$F();\n    });\n\n    var $$asap$$len = 0;\n\n    var $$asap$$default = function asap(callback, arg) {\n      $$asap$$queue[$$asap$$len] = callback;\n      $$asap$$queue[$$asap$$len + 1] = arg;\n      $$asap$$len += 2;\n      if ($$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        $$asap$$scheduleFlush();\n      }\n    };\n\n    var $$asap$$browserGlobal = (typeof window !== 'undefined') ? window : {};\n    var $$asap$$BrowserMutationObserver = $$asap$$browserGlobal.MutationObserver || $$asap$$browserGlobal.WebKitMutationObserver;\n\n    // test for web worker but not in IE10\n    var $$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function $$asap$$useNextTick() {\n      return function() {\n        process.nextTick($$asap$$flush);\n      };\n    }\n\n    function $$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new $$asap$$BrowserMutationObserver($$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function $$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = $$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function $$asap$$useSetTimeout() {\n      return function() {\n        setTimeout($$asap$$flush, 1);\n      };\n    }\n\n    var $$asap$$queue = new Array(1000);\n\n    function $$asap$$flush() {\n      for (var i = 0; i < $$asap$$len; i+=2) {\n        var callback = $$asap$$queue[i];\n        var arg = $$asap$$queue[i+1];\n\n        callback(arg);\n\n        $$asap$$queue[i] = undefined;\n        $$asap$$queue[i+1] = undefined;\n      }\n\n      $$asap$$len = 0;\n    }\n\n    var $$asap$$scheduleFlush;\n\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n      $$asap$$scheduleFlush = $$asap$$useNextTick();\n    } else if ($$asap$$BrowserMutationObserver) {\n      $$asap$$scheduleFlush = $$asap$$useMutationObserver();\n    } else if ($$asap$$isWorker) {\n      $$asap$$scheduleFlush = $$asap$$useMessageChannel();\n    } else {\n      $$asap$$scheduleFlush = $$asap$$useSetTimeout();\n    }\n\n    function $$$internal$$noop() {}\n    var $$$internal$$PENDING   = void 0;\n    var $$$internal$$FULFILLED = 1;\n    var $$$internal$$REJECTED  = 2;\n    var $$$internal$$GET_THEN_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function $$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.')\n    }\n\n    function $$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        $$$internal$$GET_THEN_ERROR.error = error;\n        return $$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function $$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function $$$internal$$handleForeignThenable(promise, thenable, then) {\n       $$asap$$default(function(promise) {\n        var sealed = false;\n        var error = $$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            $$$internal$$resolve(promise, value);\n          } else {\n            $$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          $$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          $$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function $$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, thenable._result);\n      } else if (promise._state === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, thenable._result);\n      } else {\n        $$$internal$$subscribe(thenable, undefined, function(value) {\n          $$$internal$$resolve(promise, value);\n        }, function(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function $$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        $$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = $$$internal$$getThen(maybeThenable);\n\n        if (then === $$$internal$$GET_THEN_ERROR) {\n          $$$internal$$reject(promise, $$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          $$$internal$$fulfill(promise, maybeThenable);\n        } else if ($$utils$$isFunction(then)) {\n          $$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          $$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function $$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        $$$internal$$reject(promise, $$$internal$$selfFullfillment());\n      } else if ($$utils$$objectOrFunction(value)) {\n        $$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        $$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function $$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      $$$internal$$publish(promise);\n    }\n\n    function $$$internal$$fulfill(promise, value) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = $$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n      } else {\n        $$asap$$default($$$internal$$publish, promise);\n      }\n    }\n\n    function $$$internal$$reject(promise, reason) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n      promise._state = $$$internal$$REJECTED;\n      promise._result = reason;\n\n      $$asap$$default($$$internal$$publishRejection, promise);\n    }\n\n    function $$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + $$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + $$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        $$asap$$default($$$internal$$publish, parent);\n      }\n    }\n\n    function $$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          $$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function $$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var $$$internal$$TRY_CATCH_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        $$$internal$$TRY_CATCH_ERROR.error = e;\n        return $$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function $$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = $$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = $$$internal$$tryCatch(callback, detail);\n\n        if (value === $$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          $$$internal$$reject(promise, $$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== $$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        $$$internal$$resolve(promise, value);\n      } else if (failed) {\n        $$$internal$$reject(promise, error);\n      } else if (settled === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, value);\n      } else if (settled === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, value);\n      }\n    }\n\n    function $$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          $$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        $$$internal$$reject(promise, e);\n      }\n    }\n\n    function $$$enumerator$$makeSettledResult(state, position, value) {\n      if (state === $$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n        return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function $$$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor($$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          $$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            $$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        $$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    $$$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return $$utils$$isArray(input);\n    };\n\n    $$$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    $$$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var $$$enumerator$$default = $$$enumerator$$Enumerator;\n\n    $$$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var promise = this.promise;\n      var input   = this._input;\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      if ($$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== $$$internal$$PENDING) {\n          entry._onerror = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else {\n          this._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult($$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === $$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === $$$internal$$REJECTED) {\n          $$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        $$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    $$$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      $$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt($$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt($$$internal$$REJECTED, i, reason);\n      });\n    };\n\n    var $$promise$all$$default = function all(entries, label) {\n      return new $$$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    };\n\n    var $$promise$race$$default = function race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor($$$internal$$noop, label);\n\n      if (!$$utils$$isArray(entries)) {\n        $$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        $$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        $$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        $$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    };\n\n    var $$promise$resolve$$default = function resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$resolve(promise, object);\n      return promise;\n    };\n\n    var $$promise$reject$$default = function reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$reject(promise, reason);\n      return promise;\n    };\n\n    var $$es6$promise$promise$$counter = 0;\n\n    function $$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function $$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var $$es6$promise$promise$$default = $$es6$promise$promise$$Promise;\n\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function $$es6$promise$promise$$Promise(resolver) {\n      this._id = $$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if ($$$internal$$noop !== resolver) {\n        if (!$$utils$$isFunction(resolver)) {\n          $$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof $$es6$promise$promise$$Promise)) {\n          $$es6$promise$promise$$needsNew();\n        }\n\n        $$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    $$es6$promise$promise$$Promise.all = $$promise$all$$default;\n    $$es6$promise$promise$$Promise.race = $$promise$race$$default;\n    $$es6$promise$promise$$Promise.resolve = $$promise$resolve$$default;\n    $$es6$promise$promise$$Promise.reject = $$promise$reject$$default;\n\n    $$es6$promise$promise$$Promise.prototype = {\n      constructor: $$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === $$$internal$$FULFILLED && !onFulfillment || state === $$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor($$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          $$asap$$default(function(){\n            $$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          $$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n\n    var $$es6$promise$polyfill$$default = function polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n        local = global;\n      } else if (typeof window !== 'undefined' && window.document) {\n        local = window;\n      } else {\n        local = self;\n      }\n\n      var es6PromiseSupport =\n        \"Promise\" in local &&\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        \"resolve\" in local.Promise &&\n        \"reject\" in local.Promise &&\n        \"all\" in local.Promise &&\n        \"race\" in local.Promise &&\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        (function() {\n          var resolve;\n          new local.Promise(function(r) { resolve = r; });\n          return $$utils$$isFunction(resolve);\n        }());\n\n      if (!es6PromiseSupport) {\n        local.Promise = $$es6$promise$promise$$default;\n      }\n    };\n\n    var es6$promise$umd$$ES6Promise = {\n      'Promise': $$es6$promise$promise$$default,\n      'polyfill': $$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = es6$promise$umd$$ES6Promise;\n    }\n}).call(this);","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*jslint node:true*/\n/*globals RTCPeerConnection, mozRTCPeerConnection, webkitRTCPeerConnection */\n/*globals RTCSessionDescription, mozRTCSessionDescription */\n/*globals RTCIceCandidate, mozRTCIceCandidate */\n'use strict';\n\nvar myRTCPeerConnection = null;\nvar myRTCSessionDescription = null;\nvar myRTCIceCandidate = null;\n\nvar renameIceURLs = function (config) {\n  if (!config) {\n    return;\n  }\n  if (!config.iceServers) {\n    return config;\n  }\n  config.iceServers.forEach(function (server) {\n    server.url = server.urls;\n    delete server.urls;\n  });\n  return config;\n};\n\nvar fixChromeStatsResponse = function(response) {\n  var standardReport = {};\n  var reports = response.result();\n  reports.forEach(function(report) {\n    var standardStats = {\n      id: report.id,\n      timestamp: report.timestamp,\n      type: report.type\n    };\n    report.names().forEach(function(name) {\n      standardStats[name] = report.stat(name);\n    });\n    standardReport[standardStats.id] = standardStats;\n  });\n\n  return standardReport;\n};\n\nvar sessionHasData = function(desc) {\n  if (!desc) {\n    return false;\n  }\n  var hasData = false;\n  var prefix = 'm=application';\n  desc.sdp.split('\\n').forEach(function(line) {\n    if (line.slice(0, prefix.length) === prefix) {\n      hasData = true;\n    }\n  });\n  return hasData;\n};\n\n// Unify PeerConnection Object.\nif (typeof RTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = RTCPeerConnection;\n} else if (typeof mozRTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = function (configuration, constraints) {\n    // Firefox uses 'url' rather than 'urls' for RTCIceServer.urls\n    var pc = new mozRTCPeerConnection(renameIceURLs(configuration), constraints);\n\n    // Firefox doesn't fire 'onnegotiationneeded' when a data channel is created\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n    var dataEnabled = false;\n    var boundCreateDataChannel = pc.createDataChannel.bind(pc);\n    pc.createDataChannel = function(label, dataChannelDict) {\n      var dc = boundCreateDataChannel(label, dataChannelDict);\n      if (!dataEnabled) {\n        dataEnabled = true;\n        if (pc.onnegotiationneeded &&\n            !sessionHasData(pc.localDescription) &&\n            !sessionHasData(pc.remoteDescription)) {\n          var event = new Event('negotiationneeded');\n          pc.onnegotiationneeded(event);\n        }\n      }\n      return dc;\n    };\n\n    return pc;\n  };\n} else if (typeof webkitRTCPeerConnection !== 'undefined') {\n  // Chrome returns a nonstandard, non-JSON-ifiable response from getStats.\n  myRTCPeerConnection = function(configuration, constraints) {\n    var pc = new webkitRTCPeerConnection(configuration, constraints);\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(chromeStatsResponse) {\n        successCallback(fixChromeStatsResponse(chromeStatsResponse));\n      };\n      // Chrome also takes its arguments in the wrong order.\n      boundGetStats(successCallbackWrapper, failureCallback, selector);\n    };\n    return pc;\n  };\n}\n\n// Unify SessionDescrption Object.\nif (typeof RTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = RTCSessionDescription;\n} else if (typeof mozRTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = mozRTCSessionDescription;\n}\n\n// Unify IceCandidate Object.\nif (typeof RTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = RTCIceCandidate;\n} else if (typeof mozRTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = mozRTCIceCandidate;\n}\n\nexports.RTCPeerConnection = myRTCPeerConnection;\nexports.RTCSessionDescription = myRTCSessionDescription;\nexports.RTCIceCandidate = myRTCIceCandidate;\n","/*globals process, console */\n/*jslint indent:2,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A freedom.js logging provider that logs to chrome, firefox, and node consoles.\n * @Class Logger_console\n * @constructor\n * @private\n * @param {config: Object} cap Capabilities - console requires global config.\n */\nvar Logger_console = function (cap) {\n  this.level = (cap.config && cap.config.debug) || 'log';\n  this.console = (cap.config && cap.config.global.console);\n  util.handleEvents(this);\n};\n\n\n/**\n * Logging levels, for filtering output.\n * @private\n * @static\n */\nLogger_console.level = {\n  \"debug\": 0,\n  \"info\": 1,\n  \"log\": 2,\n  \"warn\": 3,\n  \"error\": 4\n};\n\n/**\n * Print a message with appropriate formatting.\n * @method print\n */\nLogger_console.prototype.print = function (severity, source, msg) {\n  var arr = msg;\n  if (typeof this.console === 'undefined' ||\n      this.console.freedom === true) {\n    return;\n  }\n  if (typeof arr === 'string') {\n    arr = [arr];\n  }\n  \n  if (Logger_console.level[this.level] !== undefined &&\n      Logger_console.level[severity] < Logger_console.level[this.level]) {\n    return;\n  }\n  \n  if (source) {\n    if (typeof process !== 'undefined' &&\n        {}.toString.call(process) === '[object process]') {\n      // Node.\n      arr.unshift('\\x1B[39m');\n      arr.unshift('\\x1B[31m' + source);\n    } else if (this.console.maxLogLevel) {\n      // Firefox in JSM context:\n      //   http://mxr.mozilla.org/mozilla-release/source/toolkit/devtools/Console.jsm\n      if (!this.console.freedomDump) {\n        this.console.freedomDump = this.console.dump;\n        this.console.dump = function() {};\n      }\n      this.console.freedomDump(source + ' ' + severity[0].toUpperCase() + ' ' +\n          arr.join(' ') + '\\n');\n    } else {\n      arr.unshift('color: none');\n      arr.unshift('color: red');\n      arr.unshift('%c' + source + '%c');\n    }\n  }\n\n  if (!this.console[severity] && this.console.log) {\n    severity = 'log';\n  }\n  this.console[severity].apply(this.console, arr);\n};\n\n/**\n * Log a message to the console.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.log = function (source, msg, continuation) {\n  this.print('log', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with debug priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.debug = function (source, msg, continuation) {\n  this.print('debug', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with info priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.info = function (source, msg, continuation) {\n  this.print('info', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with warn priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.warn = function (source, msg, continuation) {\n  this.print('warn', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with error priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.error = function (source, msg, continuation) {\n  this.print('error', source, msg);\n  continuation();\n};\n\n/** REGISTER PROVIDER **/\nexports.provider = Logger_console;\nexports.name = 'core.console';\nexports.flags = {config: true};\n","/*globals console, crypto */\n/*jslint indent:2, node:true */\nvar util = require('../../src/util');\n\n/**\n * A Core provider for getting cryptographically random buffers. This\n * functionality may not exist in all unpriviledged contexts - namely at this\n * point, firefox addon workers.\n * @Class Core_crypto\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Core_crypto = function(cap, dispatchEvent) {\n  'use strict';\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n};\n\n/**\n * Get a random buffer of some number of bytes.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\n Core_crypto.prototype.getRandomBytes = function(number, continuation) {\n   'use strict';\n   var buffer = new Uint8Array(number);\n   crypto.getRandomValues(buffer);\n   continuation(buffer.buffer);\n};\n\nexports.provider = Core_crypto;\nexports.name = \"core.crypto\";\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A minimal provider implementing the core.echo interface for interaction with\n * custom channels.  Primarily used for testing the robustness of the custom\n * channel implementation.\n * @Class Echo_unprivileged\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Echo_unprivileged = function(cap, dispatchEvent) {\n  this.mod = cap.module;\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n\n  // The Core object for managing channels.\n  this.mod.once('core', function(Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.mod.emit(this.mod.controlChannel, {\n    type: 'core request delegated to echo',\n    request: 'core'\n  });\n};\n\n/**\n * Setup the provider to echo on a specific proxy. Subsequent messages\n * From the custom channel bound here will be re-emitted as a message\n * from the provider.  Subsequent messages to the provider will be\n * emitted on the bound channel.\n * @param {Object} proxy The identifier for the custom channel to bind.\n * @param {Function} continuation Function to call when setup is complete.\n * @method setup\n */\nEcho_unprivileged.prototype.setup = function(proxy, continuation) {\n  continuation();\n  if (!this.core) {\n    this.dispatchEvent('message', 'no core available to setup proxy with at echo');\n    return;\n  }\n\n  this.core.bindChannel(proxy, function(chan) {\n    if (this.chan) {\n      this.chan.close();\n    }\n    this.chan = chan;\n    this.chan.onClose(function() {\n      delete this.chan;\n    }.bind(this));\n    this.dispatchEvent('message', 'channel bound to echo');\n    this.chan.on('message', function(m) {\n      this.dispatchEvent('message', 'from custom channel: ' + m);\n    }.bind(this));\n  }.bind(this));\n};\n\n/**\n * Send a message to the bound custom channel.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\nEcho_unprivileged.prototype.send = function(str, continuation) {\n  continuation();\n  if (this.chan) {\n    this.chan.emit('message', str);\n  } else {\n    this.dispatchEvent('message', 'no channel available');\n  }\n};\n\nexports.provider = Echo_unprivileged;\nexports.name = \"core.echo\";\nexports.flags = {module: true};\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true,node:true */\n\n/**\n * An oAuth meta-provider allowing multiple platform-dependant\n * oAuth implementations to serve as the redirectURL for an oAuth flow.\n * The core implementations are provided in providers/oauth, and are\n * supplemented in platform-dependent repositories.\n *\n */\nvar OAuth = function (handlers, cap, dispatchEvent) {\n  this.handlers = handlers;\n  this.dispatchEvent = dispatchEvent;\n  this.ongoing = {};\n};\n\n/**\n * Register oAuth handlers.\n * This method should be called before provider is used, and binds the current\n * oAuth provider to be associated with registered handlers. This is used so\n * that handlers which are registered by the user apply only the the freedom()\n * setup call they are associated with, while still being registered across\n * multiple instances of OAuth providers.\n *\n * @method register\n * @param {[constructor]} handlers\n * @private\n */\nOAuth.register = function (handlers) {\n  var i,\n      boundHandlers = [];\n  if (!handlers || !handlers.length) {\n    return OAuth.reset();\n  }\n\n  for (i = 0; i < handlers.length; i += 1) {\n    boundHandlers.push(new handlers[i]());\n  }\n  exports.provider = OAuth.bind(this, boundHandlers);\n};\n\n/**\n * Reset the oAuth provider registrations.\n * @method reset\n * @private\n */\nOAuth.reset = function () {\n  exports.provider = OAuth.bind(this, []);\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n */\nOAuth.prototype.initiateOAuth = function (redirectURIs, continuation) {\n  var promise, i, successCallback;\n  successCallback = function(result) {\n    this.ongoing[result.state] = this.handlers[i];\n    continuation(result);\n  }.bind(this);\n\n  for (i = 0; i < this.handlers.length; i += 1) {\n    if (this.handlers[i].initiateOAuth(redirectURIs, successCallback)) {\n      return;\n    }\n  }\n  //If here, we have no compatible providers\n  continuation(null, {\n    'errcode': 'UNKNOWN',\n    'message': 'No requested redirects can be handled.'\n  });\n  return;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nOAuth.prototype.launchAuthFlow = function(authUrl, stateObj, continuation) {\n  if (!this.ongoing.hasOwnProperty(stateObj.state)) {\n    continuation(undefined, {\n      'errcode': 'UNKNOWN',\n      'message': 'You must begin the oAuth flow with initiateOAuth first'\n    });\n    return;\n  }\n\n  this.ongoing[stateObj.state].launchAuthFlow(authUrl, stateObj, continuation);\n  delete this.ongoing[stateObj.state];\n};\n\nexports.register = OAuth.register;\nexports.reset = OAuth.reset;\nexports.provider = OAuth.bind(this, []);\nexports.name = 'core.oauth';\n","/*globals console, RTCPeerConnection, webkitRTCPeerConnection */\n/*globals mozRTCPeerConnection, RTCSessionDescription, RTCIceCandidate */\n/*globals mozRTCSessionDescription, mozRTCIceCandidate */\n/*globals ArrayBuffer, Blob */\n/*jslint indent:2,sloppy:true,node:true */\n/**\n * DataPeer - a class that wraps peer connections and data channels.\n */\n// TODO: check that Handling of pranswer is treated appropriately.\nvar SimpleDataPeerState = {\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED'\n};\n\nfunction SimpleDataPeer(peerName, stunServers, dataChannelCallbacks, mocks) {\n  var constraints,\n    config,\n    i;\n  this.peerName = peerName;\n  this.channels = {};\n  this.dataChannelCallbacks = dataChannelCallbacks;\n  this.onConnectedQueue = [];\n\n  if (typeof mocks.RTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mocks.RTCPeerConnection;\n  } else if (typeof webkitRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = webkitRTCPeerConnection;\n  } else if (typeof mozRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mozRTCPeerConnection;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCPeerConnection\");\n  }\n\n  if (typeof mocks.RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mocks.RTCSessionDescription;\n  } else if (typeof RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = RTCSessionDescription;\n  } else if (typeof mozRTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mozRTCSessionDescription;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCSessionDescription\");\n  }\n\n  if (typeof mocks.RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mocks.RTCIceCandidate;\n  } else if (typeof RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = RTCIceCandidate;\n  } else if (typeof mozRTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mozRTCIceCandidate;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCIceCandidate\");\n  }\n\n\n  constraints = {\n    optional: [{DtlsSrtpKeyAgreement: true}]\n  };\n  // A way to speak to the peer to send SDP headers etc.\n  this.sendSignalMessage = null;\n\n  this.pc = null;  // The peer connection.\n  // Get TURN servers for the peer connection.\n  config = {iceServers: []};\n  for (i = 0; i < stunServers.length; i += 1) {\n    config.iceServers.push({\n      'url' : stunServers[i]\n    });\n  }\n  this.pc = new this.RTCPeerConnection(config, constraints);\n  // Add basic event handlers.\n  this.pc.addEventListener(\"icecandidate\",\n                            this.onIceCallback.bind(this));\n  this.pc.addEventListener(\"negotiationneeded\",\n                            this.onNegotiationNeeded.bind(this));\n  this.pc.addEventListener(\"datachannel\",\n                            this.onDataChannel.bind(this));\n  this.pc.addEventListener(\"signalingstatechange\", function () {\n    // TODO: come up with a better way to detect connection.  We start out\n    // as \"stable\" even before we are connected.\n    // TODO: this is not fired for connections closed by the other side.\n    // This will be fixed in m37, at that point we should dispatch an onClose\n    // event here for freedom.transport to pick up.\n    if (this.pc.signalingState === \"stable\") {\n      this.pcState = SimpleDataPeerState.CONNECTED;\n      this.onConnectedQueue.map(function (callback) { callback(); });\n    }\n  }.bind(this));\n  // This state variable is used to fake offer/answer when they are wrongly\n  // requested and we really just need to reuse what we already have.\n  this.pcState = SimpleDataPeerState.DISCONNECTED;\n\n  // Note: to actually do something with data channels opened by a peer, we\n  // need someone to manage \"datachannel\" event.\n}\n\nSimpleDataPeer.prototype.createOffer = function (constaints, continuation) {\n  this.pc.createOffer(continuation, function () {\n    console.error('core.peerconnection createOffer failed.');\n  }, constaints);\n};\n\nSimpleDataPeer.prototype.runWhenConnected = function (func) {\n  if (this.pcState === SimpleDataPeerState.CONNECTED) {\n    func();\n  } else {\n    this.onConnectedQueue.push(func);\n  }\n};\n\nSimpleDataPeer.prototype.send = function (channelId, message, continuation) {\n  this.channels[channelId].send(message);\n  continuation();\n};\n\nSimpleDataPeer.prototype.openDataChannel = function (channelId, continuation) {\n  var dataChannel = this.pc.createDataChannel(channelId, {});\n  dataChannel.onopen = function () {\n    this.addDataChannel(channelId, dataChannel);\n    continuation();\n  }.bind(this);\n  dataChannel.onerror = function (err) {\n    //@(ryscheng) todo - replace with errors that work across the interface\n    console.error(err);\n    continuation(undefined, err);\n  };\n  // Firefox does not fire \"negotiationneeded\", so we need to\n  // negotate here if we are not connected.\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n  if (typeof mozRTCPeerConnection !== \"undefined\" &&\n      this.pcState === SimpleDataPeerState.DISCONNECTED) {\n    this.negotiateConnection();\n  }\n};\n\nSimpleDataPeer.prototype.closeChannel = function (channelId) {\n  if (this.channels[channelId] !== undefined) {\n    this.channels[channelId].close();\n    delete this.channels[channelId];\n  }\n};\n\nSimpleDataPeer.prototype.getBufferedAmount = function (channelId,\n                                                       continuation) {\n  if (this.channels[channelId] !== undefined) {\n    var dataChannel = this.channels[channelId];\n    return dataChannel.bufferedAmount;\n  }\n  throw new Error(\"No channel with id: \" + channelId);\n};\n\nSimpleDataPeer.prototype.setSendSignalMessage = function (sendSignalMessageFn) {\n  this.sendSignalMessage = sendSignalMessageFn;\n};\n\n// Handle a message send on the signalling channel to this peer.\nSimpleDataPeer.prototype.handleSignalMessage = function (messageText) {\n  //console.log(this.peerName + \": \" + \"handleSignalMessage: \\n\" + messageText);\n  var json = JSON.parse(messageText),\n    ice_candidate;\n\n  // TODO: If we are offering and they are also offerring at the same time,\n  // pick the one who has the lower randomId?\n  // (this.pc.signalingState == \"have-local-offer\" && json.sdp &&\n  //    json.sdp.type == \"offer\" && json.sdp.randomId < this.localRandomId)\n  if (json.sdp) {\n    // Set the remote description.\n    this.pc.setRemoteDescription(\n      new this.RTCSessionDescription(json.sdp),\n      // Success\n      function () {\n        //console.log(this.peerName + \": setRemoteDescription succeeded\");\n        if (this.pc.remoteDescription.type === \"offer\") {\n          this.pc.createAnswer(this.onDescription.bind(this),\n                               console.error);\n        }\n      }.bind(this),\n      // Failure\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setRemoteDescription failed:\", e);\n      }.bind(this)\n    );\n  } else if (json.candidate) {\n    // Add remote ice candidate.\n    //console.log(this.peerName + \": Adding ice candidate: \" + JSON.stringify(json.candidate));\n    ice_candidate = new this.RTCIceCandidate(json.candidate);\n    this.pc.addIceCandidate(ice_candidate);\n  } else {\n    console.warn(this.peerName + \": \" +\n        \"handleSignalMessage got unexpected message: \", messageText);\n  }\n};\n\n// Connect to the peer by the signalling channel.\nSimpleDataPeer.prototype.negotiateConnection = function () {\n  this.pcState = SimpleDataPeerState.CONNECTING;\n  this.pc.createOffer(\n    this.onDescription.bind(this),\n    function (e) {\n      console.error(this.peerName + \": \" +\n          \"createOffer failed: \", e.toString());\n      this.pcState = SimpleDataPeerState.DISCONNECTED;\n    }.bind(this)\n  );\n};\n\nSimpleDataPeer.prototype.isClosed = function () {\n  return !this.pc || this.pc.signalingState === \"closed\";\n};\n\nSimpleDataPeer.prototype.close = function () {\n  if (!this.isClosed()) {\n    this.pc.close();\n  }\n  //console.log(this.peerName + \": \" + \"Closed peer connection.\");\n};\n\nSimpleDataPeer.prototype.addDataChannel = function (channelId, channel) {\n  var callbacks = this.dataChannelCallbacks;\n  this.channels[channelId] = channel;\n\n  if (channel.readyState === \"connecting\") {\n    channel.onopen = callbacks.onOpenFn.bind(this, channel, {label: channelId});\n  }\n\n  channel.onclose = callbacks.onCloseFn.bind(this, channel, {label: channelId});\n\n  channel.onmessage = callbacks.onMessageFn.bind(this, channel,\n                                                 {label: channelId});\n\n  channel.onerror = callbacks.onErrorFn.bind(this, channel, {label: channel});\n};\n\n// When we get our description, we set it to be our local description and\n// send it to the peer.\nSimpleDataPeer.prototype.onDescription = function (description) {\n  if (this.sendSignalMessage) {\n    this.pc.setLocalDescription(\n      description,\n      function () {\n        //console.log(this.peerName + \": setLocalDescription succeeded\");\n        this.sendSignalMessage(JSON.stringify({'sdp': description}));\n      }.bind(this),\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setLocalDescription failed:\", e);\n      }.bind(this)\n    );\n  } else {\n    console.error(this.peerName + \": \" +\n        \"_onDescription: _sendSignalMessage is not set, so we did not \" +\n            \"set the local description. \");\n  }\n};\n\nSimpleDataPeer.prototype.onNegotiationNeeded = function (e) {\n  //console.log(this.peerName + \": \" + \"onNegotiationNeeded\",\n  //            JSON.stringify(this._pc), e);\n  if (this.pcState !== SimpleDataPeerState.DISCONNECTED) {\n    // Negotiation messages are falsely requested for new data channels.\n    //   https://code.google.com/p/webrtc/issues/detail?id=2431\n    // This code is a hack to simply reset the same local and remote\n    // description which will trigger the appropriate data channel open event.\n    // TODO: fix/remove this when Chrome issue is fixed.\n    var logSuccess = function (op) {\n      return function () {\n        //console.log(this.peerName + \": \" + op + \" succeeded \");\n      }.bind(this);\n    }.bind(this),\n      logFail = function (op) {\n        return function (e) {\n          //console.log(this.peerName + \": \" + op + \" failed: \" + e);\n        }.bind(this);\n      }.bind(this);\n    if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"offer\") {\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n    } else if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"answer\") {\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n    } else {\n      console.error(this.peerName + ', onNegotiationNeeded failed');\n    }\n    return;\n  }\n  this.negotiateConnection();\n};\n\nSimpleDataPeer.prototype.onIceCallback = function (event) {\n  if (event.candidate) {\n    // Send IceCandidate to peer.\n    //console.log(this.peerName + \": \" + \"ice callback with candidate\", event);\n    if (this.sendSignalMessage) {\n      this.sendSignalMessage(JSON.stringify({'candidate': event.candidate}));\n    } else {\n      console.warn(this.peerName + \": \" + \"_onDescription: _sendSignalMessage is not set.\");\n    }\n  }\n};\n\nSimpleDataPeer.prototype.onSignalingStateChange = function () {\n  //console.log(this.peerName + \": \" + \"onSignalingStateChange: \", this._pc.signalingState);\n  if (this.pc.signalingState === \"stable\") {\n    this.pcState = SimpleDataPeerState.CONNECTED;\n    this.onConnectedQueue.map(function (callback) { callback(); });\n  }\n};\n\nSimpleDataPeer.prototype.onDataChannel = function (event) {\n  this.addDataChannel(event.channel.label, event.channel);\n  // RTCDataChannels created by a RTCDataChannelEvent have an initial\n  // state of open, so the onopen event for the channel will not\n  // fire. We need to fire the onOpenDataChannel event here\n  // http://www.w3.org/TR/webrtc/#idl-def-RTCDataChannelState\n\n  // Firefox channels do not have an initial state of \"open\"\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=1000478\n  if (event.channel.readyState === \"open\") {\n    this.dataChannelCallbacks.onOpenFn(event.channel,\n                                       {label: event.channel.label});\n  }\n};\n\n// _signallingChannel is a channel for emitting events back to the freedom Hub.\nfunction PeerConnection(portModule, dispatchEvent,\n                        RTCPeerConnection, RTCSessionDescription,\n                        RTCIceCandidate) {\n  // Channel for emitting events to consumer.\n  this.dispatchEvent = dispatchEvent;\n\n  // a (hopefully unique) ID for debugging.\n  this.peerName = \"p\" + Math.random();\n\n  // This is the portApp (defined in freedom/src/port-app.js). A way to speak\n  // to freedom.\n  this.freedomModule = portModule.module;\n\n  // For tests we may mock out the PeerConnection and\n  // SessionDescription implementations\n  this.RTCPeerConnection = RTCPeerConnection;\n  this.RTCSessionDescription = RTCSessionDescription;\n  this.RTCIceCandidate = RTCIceCandidate;\n\n  // This is the a channel to send signalling messages.\n  this.signallingChannel = null;\n\n  // The DataPeer object for talking to the peer.\n  this.peer = null;\n\n  // The Core object for managing channels.\n  this.freedomModule.once('core', function (Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.freedomModule.emit(this.freedomModule.controlChannel, {\n    type: 'core request delegated to peerconnection',\n    request: 'core'\n  });\n}\n\n// Start a peer connection using the given freedomChannelId as the way to\n// communicate with the peer. The argument |freedomChannelId| is a way to speak\n// to an identity provide to send them SDP headers negotiate the address/port to\n// setup the peer to peerConnection.\n//\n// options: {\n//   peerName: string,   // For pretty printing messages about this peer.\n//   debug: boolean           // should we add extra\n// }\nPeerConnection.prototype.setup = function (signallingChannelId, peerName,\n                                           stunServers, initiateConnection,\n                                           continuation) {\n  this.peerName = peerName;\n  var mocks = {RTCPeerConnection: this.RTCPeerConnection,\n               RTCSessionDescription: this.RTCSessionDescription,\n               RTCIceCandidate: this.RTCIceCandidate},\n    self = this,\n    dataChannelCallbacks = {\n      // onOpenFn is called at the point messages will actually get through.\n      onOpenFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onOpenDataChannel\",\n                         { channelId: info.label});\n      },\n      onCloseFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onCloseDataChannel\",\n                         { channelId: info.label});\n      },\n      // Default on real message prints it to console.\n      onMessageFn: function (dataChannel, info, event) {\n        if (event.data instanceof ArrayBuffer) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'buffer': event.data\n          });\n        } else if (event.data instanceof Blob) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'binary': event.data\n          });\n        } else if (typeof (event.data) === 'string') {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'text': event.data\n          });\n        }\n      },\n      // Default on error, prints it.\n      onErrorFn: function (dataChannel, info, err) {\n        console.error(dataChannel.peerName + \": dataChannel(\" +\n                      dataChannel.dataChannel.label + \"): error: \", err);\n      }\n    },\n    channelId,\n    openDataChannelContinuation;\n\n  this.peer = new SimpleDataPeer(this.peerName, stunServers,\n                                 dataChannelCallbacks, mocks);\n\n  // Setup link between Freedom messaging and _peer's signalling.\n  // Note: the signalling channel should only be sending receiveing strings.\n  this.core.bindChannel(signallingChannelId, function (channel) {\n    this.signallingChannel = channel;\n    this.peer.setSendSignalMessage(function (msg) {\n      this.signallingChannel.emit('message', msg);\n    }.bind(this));\n    this.signallingChannel.on('message',\n        this.peer.handleSignalMessage.bind(this.peer));\n    this.signallingChannel.emit('ready');\n    if (!initiateConnection) {\n      this.peer.runWhenConnected(continuation);\n    }\n  }.bind(this));\n\n  if (initiateConnection) {\n    // Setup a connection right away, then invoke continuation.\n    console.log(this.peerName + ' initiating connection');\n    channelId = 'hello' + Math.random().toString();\n    openDataChannelContinuation = function (success, error) {\n      if (error) {\n        continuation(undefined, error);\n      } else {\n        this.closeDataChannel(channelId, continuation);\n      }\n    }.bind(this);\n    this.openDataChannel(channelId, openDataChannelContinuation);\n  }\n};\n\nPeerConnection.prototype.createOffer = function (constraints, continuation) {\n  this.peer.createOffer(constraints, continuation);\n};\n\n// TODO: delay continuation until the open callback from _peer is called.\nPeerConnection.prototype.openDataChannel = function (channelId, continuation) {\n  this.peer.openDataChannel(channelId, continuation);\n};\n\nPeerConnection.prototype.closeDataChannel = function (channelId, continuation) {\n  this.peer.closeChannel(channelId);\n  continuation();\n};\n\n// Called to send a message over the given datachannel to a peer. If the data\n// channel doesn't already exist, the DataPeer creates it.\nPeerConnection.prototype.send = function (sendInfo, continuation) {\n  var objToSend = sendInfo.text || sendInfo.buffer || sendInfo.binary;\n  if (typeof objToSend === 'undefined') {\n    console.error(\"No valid data to send has been provided.\", sendInfo);\n    return;\n  }\n  //DEBUG\n  // objToSend = new ArrayBuffer(4);\n  //DEBUG\n  this.peer.send(sendInfo.channelLabel, objToSend, continuation);\n};\n\nPeerConnection.prototype.getBufferedAmount = function (channelId, continuation) {\n  continuation(this.peer.getBufferedAmount(channelId));\n};\n\nPeerConnection.prototype.close = function (continuation) {\n  if (this.peer.isClosed()) {\n    // Peer already closed, run continuation without dispatching event.\n    continuation();\n    return;\n  }\n  this.peer.close();\n  this.dispatchEvent(\"onClose\");\n  continuation();\n};\n\nexports.provider = PeerConnection;\nexports.name = 'core.peerconnection';\nexports.flags = {module: true};\n","/*jslint sloppy:true, node:true */\n/*globals Components, ArrayBuffer */\n\nvar util = require('../../src/util');\n\nvar eventNames = [\n  'onopen',\n  'onerror',\n  'onclose',\n  'onmessage'\n];\n\nvar unAttachedChannels = {};\nvar pendingEvents = {};\nvar allocateChannel = function (dataChannel) {\n  var id = util.getId();\n  unAttachedChannels[id] = dataChannel;\n  pendingEvents[id] = [];\n  eventNames.forEach(function(eventName) {\n    // This listener will be overridden (re-set) after the constructor runs.\n    var handler = function(event) {\n      var currentHandler = dataChannel[eventName];\n      if (currentHandler === handler) {\n        pendingEvents[id].push(event);\n      } else if (typeof currentHandler === 'function') {\n        // If an event somehow runs on this event handler after it has been\n        // replaced, forward that event to the new event handler.\n        currentHandler(event);\n      } else {\n        throw new Error('No handler for ' + event.type + ' event');\n      }\n    };\n    dataChannel[eventName] = handler;\n  });\n  return id;\n};\n\nvar RTCDataChannelAdapter = function (cap, dispatchEvents, id) {\n  this.dispatchEvent = dispatchEvents;\n  if (!unAttachedChannels[id]) {\n    console.warn('Invalid ID, creating acting on unattached DataChannel');\n    var Connection = require('./core.rtcpeerconnection').provider,\n      provider = new Connection();\n    id = provider.createDataChannel();\n    provider.close();\n  }\n\n  this.channel = unAttachedChannels[id];\n  delete unAttachedChannels[id];\n\n  // After the constructor returns, and the caller has a chance to register\n  // event listeners, fire all pending events, and then ensure that all\n  // subsequent events are handled immediately.\n  setTimeout(function() {\n    this.drainPendingEvents(id);\n\n    // This function must not be called until after the pending events are\n    // drained, to ensure that messages are delivered in order.\n    this.manageEvents(true);\n  }.bind(this), 0);\n};\n\nRTCDataChannelAdapter.prototype.drainPendingEvents = function(id) {\n  pendingEvents[id].forEach(function(event) {\n    this['on' + event.type](event);\n  }.bind(this));\n  delete pendingEvents[id];\n};\n\n// Attach or detach listeners for events against the connection.\nRTCDataChannelAdapter.prototype.manageEvents = function (attach) {\n  eventNames.forEach(function (eventName) {\n    if (attach) {\n      this[eventName] = this[eventName].bind(this);\n      this.channel[eventName] = this[eventName];\n    } else {\n      delete this.channel[eventName];\n    }\n  }.bind(this));\n};\n\nRTCDataChannelAdapter.prototype.getLabel = function (callback) {\n  callback(this.channel.label);\n};\n\nRTCDataChannelAdapter.prototype.getOrdered = function (callback) {\n  callback(this.channel.ordered);\n};\n\nRTCDataChannelAdapter.prototype.getMaxPacketLifeTime = function (callback) {\n  callback(this.channel.maxPacketLifeTime);\n};\n\nRTCDataChannelAdapter.prototype.getMaxRetransmits = function (callback) {\n  callback(this.channel.maxRetransmits);\n};\n\nRTCDataChannelAdapter.prototype.getProtocol = function (callback) {\n  callback(this.channel.protocol);\n};\n\nRTCDataChannelAdapter.prototype.getNegotiated = function (callback) {\n  callback(this.channel.negotiated);\n};\n\nRTCDataChannelAdapter.prototype.getId = function (callback) {\n  callback(this.channel.id);\n};\n\nRTCDataChannelAdapter.prototype.getReadyState = function (callback) {\n  callback(this.channel.readyState);\n};\n\nRTCDataChannelAdapter.prototype.getBufferedAmount = function (callback) {\n  callback(this.channel.bufferedAmount);\n};\n\nRTCDataChannelAdapter.prototype.getBinaryType = function (callback) {\n  callback(this.channel.binaryType);\n};\nRTCDataChannelAdapter.prototype.setBinaryType = function (binaryType, callback) {\n  this.channel.binaryType = binaryType;\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.send = function (text, callback) {\n  this.channel.send(text);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.sendBuffer = function (buffer, callback) {\n  this.channel.send(buffer);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.close = function (callback) {\n  if (!this.channel) {\n    return callback();\n  }\n  this.manageEvents(false);\n  this.channel.close();\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.onopen = function (event) {\n  this.dispatchEvent('onopen', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onerror = function (event) {\n  this.dispatchEvent('onerror', {\n    errcode: event.type,\n    message: event.message\n  });\n};\n\nRTCDataChannelAdapter.prototype.onclose = function (event) {\n  this.dispatchEvent('onclose', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onmessage = function (event) {\n  if (typeof event.data === 'string') {\n    this.dispatchEvent('onmessage', {text: event.data});\n  } else if (this.channel.binaryType === 'arraybuffer' &&\n      typeof Components !== 'undefined' &&\n      !(event.data instanceof ArrayBuffer)) {\n    // In Firefox Addons, incoming array buffers are not always owned by the\n    // Addon context. The following line clones the object to take ownership.\n    // See: https://developer.mozilla.org/en-US/docs/Components.utils.cloneInto\n    var myData = Components.utils.cloneInto(event.data, {});\n    this.dispatchEvent('onmessage', {buffer: myData});\n  } else {\n    this.dispatchEvent('onmessage', {buffer: event.data});\n  }\n};\n\nexports.name = \"core.rtcdatachannel\";\nexports.provider = RTCDataChannelAdapter;\nexports.allocate = allocateChannel;\n","/*jslint indent:2,sloppy:true, node:true */\n\nvar adapter = require('webrtc-adapter');\nvar PromiseCompat = require('es6-promise').Promise;\nvar RTCPeerConnection = adapter.RTCPeerConnection;\nvar RTCSessionDescription = adapter.RTCSessionDescription;\nvar RTCIceCandidate = adapter.RTCIceCandidate;\n\nvar DataChannel = require('./core.rtcdatachannel');\n\nvar RTCPeerConnectionAdapter = function (cap, dispatchEvent, configuration) {\n  this.dispatchEvent = dispatchEvent;\n  try {\n    this.connection = new RTCPeerConnection(configuration);\n  } catch (e) {\n    // Note: You can't ask the provider to close you synchronously, since\n    // the constructor has not yet returned, so there's no 'this' that\n    // the provider can know about yet.\n    setTimeout(cap.provider.close.bind(cap.provider, this), 0);\n    return;\n  }\n\n  this.events = [\n    'ondatachannel',\n    'onnegotiationneeded',\n    'onicecandidate',\n    'onsignalingstatechange',\n    'onaddstream',\n    'onremovestream',\n    'oniceconnectionstatechange'\n  ];\n  this.manageEvents(true);\n};\n\n// Attach or detach listeners for events against the connection.\nRTCPeerConnectionAdapter.prototype.manageEvents = function (attach) {\n  this.events.forEach(function (event) {\n    if (attach) {\n      this[event] = this[event].bind(this);\n      this.connection[event] = this[event];\n    } else if (this.connection) {\n      delete this.connection[event];\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createOffer = function (constraints) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createOffer(resolve, reject, constraints);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createAnswer = function () {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createAnswer(resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.setLocalDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setLocalDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalDescription = function () {\n  return PromiseCompat.resolve(this.connection.localDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.setRemoteDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setRemoteDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteDescription = function () {\n  return PromiseCompat.resolve(this.connection.remoteDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.getSignalingState = function () {\n  return PromiseCompat.resolve(this.connection.signalingState);\n};\n\nRTCPeerConnectionAdapter.prototype.updateIce = function (configuration) {\n  this.connection.updateIce(configuration);\n  return PromiseCompat.resolve();\n};\n\nRTCPeerConnectionAdapter.prototype.addIceCandidate = function (candidate) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.addIceCandidate(new RTCIceCandidate(candidate),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getIceGatheringState = function () {\n  return PromiseCompat.resolve(this.connection.iceGatheringState);\n};\n\nRTCPeerConnectionAdapter.prototype.getIceConnectionState = function () {\n  return PromiseCompat.resolve(this.connection.iceConnectionState);\n};\n\nRTCPeerConnectionAdapter.prototype.getConfiguration = function () {\n  var configuration = this.connection.getConfiguration();\n  return PromiseCompat.resolve(configuration);\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getStreamById = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.addStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.removeStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.close = function () {\n  if (!this.connection) {\n    return PromiseCompat.resolve();\n  }\n  this.manageEvents(false);\n  try {\n    this.connection.close();\n    return PromiseCompat.resolve();\n  } catch (e) {\n    return PromiseCompat.reject({\n      errcode: e.name,\n      message: e.message\n    });\n  }\n};\n\nRTCPeerConnectionAdapter.prototype.createDataChannel = function (label, dataChannelDict) {\n  var id = DataChannel.allocate(this.connection.createDataChannel(label, dataChannelDict));\n  return PromiseCompat.resolve(id);\n};\n\nRTCPeerConnectionAdapter.prototype.getStats = function (selector) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.getStats(selector, resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.ondatachannel = function (event) {\n  var id = DataChannel.allocate(event.channel);\n  this.dispatchEvent('ondatachannel', {channel: id});\n};\n\nRTCPeerConnectionAdapter.prototype.onnegotiationneeded = function (event) {\n  this.dispatchEvent('onnegotiationneeded', event.message);\n};\n\nRTCPeerConnectionAdapter.prototype.onicecandidate = function (event) {\n  var msg;\n  if (event.candidate && event.candidate.candidate) {\n    msg = {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex\n      }\n    };\n  } else {\n    msg = {\n      candidate: null\n    };\n  }\n  this.dispatchEvent('onicecandidate', msg);\n};\n  \nRTCPeerConnectionAdapter.prototype.onsignalingstatechange = function (event) {\n  this.dispatchEvent('onsignalingstatechange', event.message);\n};\n  \nRTCPeerConnectionAdapter.prototype.onaddstream = function (event) {\n  //TODO: provide ID of allocated stream.\n  this.dispatchEvent('onaddstream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.onremovestream = function (event) {\n  //TODO: provide ID of deallocated stream.\n  this.dispatchEvent('onremovestream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.oniceconnectionstatechange = function (event) {\n  this.dispatchEvent('oniceconnectionstatechange', event.message);\n};\n\n\nexports.name = \"core.rtcpeerconnection\";\nexports.provider = RTCPeerConnectionAdapter;\nexports.style = \"providePromises\";\nexports.flags = {provider: true};\n","/*globals localStorage */\n/*jslint indent:2,sloppy:true,node:true */\nvar util = require('../../src/util');\n\n/**\n * A FreeDOM core.storage provider that depends on localStorage\n * Thus, this only works in the context of a webpage and has\n * some size limitations.\n * Note that this can conflict with other scripts using localStorage\n * as keys are raw\n * @Class Storage_unprivileged\n * @constructor\n * @private\n * @param {Object} cap Capabilities for the provider\n */\nvar Storage_unprivileged = function (cap, dispatchEvent) {\n  util.handleEvents(this);\n};\n\n/**\n * Lists keys in the storage repository\n * @method keys\n */\nStorage_unprivileged.prototype.keys = function (continuation) {\n  var result = [],\n    i;\n  for (i = 0; i < localStorage.length; i += 1) {\n    result.push(localStorage.key(i));\n  }\n  continuation(result);\n};\n\n/**\n * Get a key from the storage repository.\n * @param {String} key The item to get from storage.\n * @method get\n */\nStorage_unprivileged.prototype.get = function (key, continuation) {\n  try {\n    var val = localStorage.getItem(key);\n    continuation(val);\n  } catch (e) {\n    continuation(null);\n  }\n};\n\n/**\n * Set a key in the storage repository.\n * @param {String} key The item to save in storage.\n * @param {String} value The value to save in storage.\n * @method set\n */\nStorage_unprivileged.prototype.set = function (key, value, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.setItem(key, value);\n  continuation(ret);\n};\n\n/**\n * Remove a key from the storage repository.\n * @param {String} key The item to remove from storage;\n * @method remove\n */\nStorage_unprivileged.prototype.remove = function (key, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.removeItem(key);\n  continuation(ret);\n};\n\n/**\n * Reset the contents of the storage repository.\n * @method clear\n */\nStorage_unprivileged.prototype.clear = function (continuation) {\n  localStorage.clear();\n  continuation();\n};\n\nexports.provider = Storage_unprivileged;\nexports.name = 'core.storage';\n","/*jslint indent:2,white:true,sloppy:true,node:true */\nvar EventInterface = require('../../src/proxy/eventInterface');\nvar Consumer = require('../../src/consumer');\nvar util = require('../../src/util');\n\n/**\n * Core freedom services available to all modules.\n * Created by the environment helper in response to a 'core' request.\n * @Class Core_unprivileged\n * @constructor\n * @param {Manager} manager The manager this core is connected with.\n * @private\n */\nvar Core_unprivileged = function(manager, postMessage) {\n  this.manager = manager.module;\n  this.debug = this.manager.debug;\n};\n\nCore_unprivileged.unboundChannels = {};\n\nCore_unprivileged.contextId = undefined;\nCore_unprivileged.moduleInternal = undefined;\n\n/**\n * Create a custom channel.\n * Returns the structure {channel: Proxy, identifier: Object},\n * where the identifier can be 'redeemed' by another module or provider using\n * bind channel, at which point the deferred object will resolve with a channel\n * between the two endpoints.\n * @method createChannel\n * @params {Function} continuation Method to call with the cosntructed structure.\n */\nCore_unprivileged.prototype.createChannel = function(continuation) {\n  var proxy = new Consumer(EventInterface, this.manager.debug),\n      id = util.getId(),\n      chan = this.getChannel(proxy);\n  this.manager.setup(proxy);\n\n  if (this.isInModule()) {\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'register',\n        id: id\n      }\n    });\n  }\n  Core_unprivileged.unboundChannels[id] = {\n    local: true,\n    proxy: proxy\n  };\n\n  proxy.once('start', this.getChannel.bind(this, proxy));\n\n  continuation({\n    channel: chan,\n    identifier: id\n  });\n};\n\nCore_unprivileged.prototype.getChannel = function(proxy) {\n  var iface = proxy.getProxyInterface(),\n      chan = iface();\n  chan.close = iface.close;\n  chan.onClose = iface.onClose;\n  iface.onClose(chan, function() {\n    proxy.doClose();\n  });\n  return chan;\n};\n\n/**\n * Receive a message from another core instance.\n * Note: Core_unprivileged is not registered on the hub. it is a provider,\n *     as it's location and name would indicate. This function is called by\n *     port-app to relay messages up to higher levels.  More generally, the\n *     messages emitted by the core to 'this.manager.emit(this.mananage.delegate'\n *     Should be onMessaged to the controlling core.\n * @param {String} source The source of the message.\n * @param {Object} msg The messsage from an isolated core provider.\n */\nCore_unprivileged.prototype.onMessage = function(source, msg) {\n  if (msg.type === 'register') {\n    Core_unprivileged.unboundChannels[msg.id] = {\n      remote: true,\n      resolve: msg.reply,\n      source: source\n    };\n  } else if (msg.type === 'clear') {\n    delete Core_unprivileged.unboundChannels[msg.id];\n  } else if (msg.type === 'bind') {\n    if (Core_unprivileged.unboundChannels[msg.id]) {\n      this.bindChannel(msg.id, function() {}, source);\n    }\n  } else if (msg.type === 'require') {\n    source.require(msg.id, msg.manifest);\n  }\n};\n\n/**\n * Bind a custom channel.\n * Creates a proxy interface to the custom channel, which will be bound to\n * the proxy obtained through an earlier createChannel call.\n * channel to a proxy.\n * @method bindChannel\n * @param {Object} identifier An identifier obtained through createChannel.\n * @param {Function} continuation A function to be called with the proxy.\n */\nCore_unprivileged.prototype.bindChannel = function(identifier, continuation, source) {\n  var toBind = Core_unprivileged.unboundChannels[identifier],\n      newSource = !source;\n\n  // when bindChannel is called directly, source will be undefined.\n  // When it is propogated by onMessage, a source for binding will already exist.\n  if (newSource) {\n    this.debug.debug('making local proxy for core binding');\n    source = new Consumer(EventInterface, this.debug);\n    this.manager.setup(source);\n  }\n\n  // If this is a known identifier and is in the same context, binding is easy.\n  if (toBind && toBind.local) {\n    this.debug.debug('Binding a channel to port on this hub:' + source);\n    this.manager.createLink(source, identifier, toBind.proxy, 'default');\n    delete Core_unprivileged.unboundChannels[identifier];\n    if (this.manager.delegate && this.manager.toDelegate.core) {\n      this.manager.emit(this.manager.delegate, {\n        type: 'Delegation',\n        request: 'handle',\n        flow: 'core',\n        message: {\n          type: 'clear',\n          id: identifier\n        }\n      });\n    }\n  } else if (toBind && toBind.remote) {\n    this.debug.debug('Binding a channel into a module.');\n    this.manager.createLink(\n        source,\n        newSource ? 'default' : identifier,\n        toBind.source,\n        identifier);\n    toBind.resolve({\n      type: 'Bind Channel',\n      request:'core',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    delete Core_unprivileged.unboundChannels[identifier];\n  } else if (this.isInModule()) {\n    this.debug.info('delegating channel bind for an unknown ID:' + identifier);\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    source.once('start', function(p, cb) {\n      cb(this.getChannel(p));\n    }.bind(this, source, continuation));\n    this.manager.createLink(source,\n        'default',\n        this.manager.hub.getDestination(this.manager.delegate),\n        identifier);\n    delete Core_unprivileged.unboundChannels[identifier];\n    return;\n  } else {\n    this.debug.warn('Asked to bind unknown channel: ' + identifier);\n    this.debug.log(Core_unprivileged.unboundChannels);\n    continuation();\n    return;\n  }\n\n  if (source.getInterface) {\n    continuation(this.getChannel(source));\n  } else {\n    continuation();\n  }\n};\n\n/**\n * @method isInModule\n * @private\n * @returns {Boolean} Whether this class is running in a module.\n */\nCore_unprivileged.prototype.isInModule = function () {\n  return (this.manager.delegate && this.manager.toDelegate.core);\n};\n\n/**\n * Require a dynamic dependency for your freedom module.\n * If new permissions are needed beyond what are already available to the\n * freedom context, the user will need to approve of the requested permissions.\n * @method require\n * @param {String} manifest The URL of the manifest to require.\n * @param {String} api The API of the dependency to expose if not default.\n * @param {Function} callback The function to call with the dependency.\n */\nCore_unprivileged.prototype.require = function (manifest, api, callback) {\n  if (this.isInModule() && Core_unprivileged.moduleInternal) {\n    // Register a callback with moduleInternal.\n    // DependencyName is the name of the channel moduelInternal will allocate\n    // callback will be called once a link to that channel is seen.\n    var dependencyName =\n        Core_unprivileged.moduleInternal.registerId(api, callback);\n\n    // Request the dependency be added.\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'require',\n        manifest: manifest,\n        id: dependencyName\n      }\n    });\n  } else {\n    this.debug.error('The require function in external context makes no sense' +\n        ' Instead create a new freedom() context.');\n    callback(undefined, {\n      errcode: 'InvalidContext',\n      message: 'Cannot call require() from this context.'\n    });\n  }\n};\n\n/**\n * Get the ID of the current freedom.js context.  Provides an\n * array of module URLs, the lineage of the current context.\n * When not in an application context, the ID is the lineage\n * of the current View.\n * @method getId\n * @param {Function} callback The function called with ID information.\n */\nCore_unprivileged.prototype.getId = function(callback) {\n  // TODO: make sure contextID is properly frozen.\n  callback(Core_unprivileged.contextId);\n};\n\n/**\n * Get a logger for logging to the freedom.js logger. Provides a\n * log object with an interface similar to the standard javascript console,\n * which logs via debug.\n * @method getLogger\n * @param {String} name The name of the logger, used as its 'source'\n * @param {Function} callback The function to call with the logger.\n */\nCore_unprivileged.prototype.getLogger = function(name, callback) {\n  callback(this.manager.debug.getLogger(name));\n};\n\n/**\n * Set the ID of the current freedom.js context.\n * @method setId\n * @private\n * @param {String[]} id The lineage of the current context.\n * @param {ModuleInternal} moduleInternal The Module environment if one exists.\n */\nCore_unprivileged.prototype.setId = function(id, moduleInternal) {\n  Core_unprivileged.contextId = id;\n  Core_unprivileged.moduleInternal = moduleInternal;\n};\n\nexports.provider = Core_unprivileged;\nexports.name = \"core\";\nexports.flags = {module: true};\n","/*globals document */\r\n/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('../../src/util');\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\n/**\r\n * A freedom.js view is the interface for user interaction.\r\n * A view exists as an iFrame, which is shown to the user in some way.\r\n * communication between the view and the freedom.js module is performed\r\n * through the HTML5 postMessage mechanism, which this provider translates\r\n * to freedom.js message events.\r\n * @Class View_unprivileged\r\n * @constructor\r\n * @private\r\n * @param {View Provider} provider\r\n * @param {provider:Provider,module:Module} cap The instantiator of the view.\r\n * @param {Function} dispatchEvent Function to call to emit events.\r\n */\r\nvar Core_View = function (provider, cap, dispatchEvent) {\r\n  this.provider = provider;\r\n  this.dispatchEvent = dispatchEvent;\r\n  setTimeout(cap.provider.onClose.bind(\r\n    cap.provider,\r\n    this,\r\n    this.close.bind(this, function () {})\r\n  ), 0);\r\n  this.module = cap.module;\r\n  util.handleEvents(this);\r\n};\r\n\r\n/**\r\n * The is the default provider for core.view, unless overridden by context or\r\n * a user supplied provider. The interface is documented at:\r\n * https://github.com/freedomjs/freedom/wiki/freedom.js-Views\r\n *\r\n * Generally, a view provider consists of 3 methods:\r\n * onOpen is called when a view should be shown.\r\n *     id - is a unique identifier for this view, used on subsequent calls\r\n *          for communication and to eventually close the view.\r\n *     name - is the name of the view (as defined in the manifest),\r\n *            in order to place it appropriately.\r\n *     page - is the resolved URL to open.\r\n *     resources - is an array of resolved URLs which are referenced.\r\n *     postMessage - is a function to call when messages are emitted\r\n *                   by the window in which the view is opened.\r\n * onOpen returns a promise that completes when the view is loaded.\r\n * onMessage is called to send a message to an open view.\r\n *     id - is the unique identifier for the open view.\r\n *     message - is the message to postMessage to the view's window.\r\n * onClose is called to close a view.\r\n *     id - is the unique identifier for the view.\r\n */\r\nCore_View.provider = {\r\n  listener: undefined,\r\n  active: {},\r\n  onOpen: function (id, name, page, resources, postMessage) {\r\n    var container = document.body,\r\n      root,\r\n      frame;\r\n    \r\n    if (!this.listener) {\r\n      this.listener = function (msg) {\r\n        var i;\r\n        for (i in this.active) {\r\n          if (this.active.hasOwnProperty(i) &&\r\n              this.active[i].source === msg.source) {\r\n            this.active[i].postMessage(msg.data);\r\n          }\r\n        }\r\n      }.bind(this);\r\n      window.addEventListener('message', this.listener, true);\r\n    }\r\n\r\n    // Views open by default in an element with their ID, or fill the page\r\n    // otherwise.\r\n    if (document.getElementById(name)) {\r\n      container = document.getElementById(name);\r\n    }\r\n\r\n    root = document.createElement(\"div\");\r\n    root.style.width = \"100%\";\r\n    root.style.height = \"100%\";\r\n    root.style.display = \"relative\";\r\n\r\n    container.appendChild(root);\r\n    \r\n    return new PromiseCompat(function (resolve, reject) {\r\n      frame = document.createElement(\"iframe\");\r\n      frame.setAttribute(\"sandbox\", \"allow-scripts allow-forms\");\r\n      frame.style.width = \"100%\";\r\n      frame.style.height = \"100%\";\r\n      frame.style.border = \"0\";\r\n      frame.style.background = \"transparent\";\r\n      frame.src = page;\r\n      frame.addEventListener('load', resolve, true);\r\n      frame.addEventListener('error', reject, true);\r\n\r\n      root.appendChild(frame);\r\n\r\n      this.active[id] = {\r\n        postMessage: postMessage,\r\n        container: container,\r\n        root: root,\r\n        source: frame.contentWindow\r\n      };\r\n    }.bind(this));\r\n  },\r\n  onMessage: function (id, message) {\r\n    this.active[id].source.postMessage(message, '*');\r\n  },\r\n  onClose: function (id) {\r\n    this.active[id].container.removeChild(this.active[id].root);\r\n    delete this.active[id];\r\n    \r\n    if (Object.keys(this.active).length === 0) {\r\n      window.removeEventListener('message', this.listener, true);\r\n      this.listener = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Ask for this view to open a specific location, either a File relative to\r\n * the loader, or an explicit code location.\r\n * @method show\r\n * @param {String} name The identifier of the view.\r\n * @param {Function} continuation Function to call when view is loaded.\r\n */\r\nCore_View.prototype.show = function (name, continuation) {\r\n  if (this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'ALREADY_OPEN',\r\n      message: 'Cannot show multiple views through one instance.'\r\n    });\r\n  }\r\n  this.id = util.getId();\r\n\r\n  var config = this.module.manifest.views,\r\n    toResolve = [];\r\n  if (!config || !config[name]) {\r\n    return continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n\r\n  if (config[name].main && config[name].files) {\r\n    toResolve = config[name].files.concat(config[name].main);\r\n    PromiseCompat.all(toResolve.map(function (fname) {\r\n      return this.module.resource.get(this.module.manifestId, fname);\r\n    }.bind(this))).then(function (files) {\r\n      this.provider.onOpen(this.id,\r\n          name,\r\n          files[files.length - 1],\r\n          files,\r\n          this.dispatchEvent.bind(this, 'message')).then(\r\n        function (c) {\r\n          // Make sure continuation is called without an argument.\r\n          c();\r\n        }.bind({}, continuation),\r\n        continuation.bind({}, undefined)\r\n      );\r\n    }.bind(this), function (err) {\r\n      this.module.debug.error('Unable to open view ' + name + ': ', err);\r\n      continuation(undefined, {\r\n        errcode: 'VIEW_MALFORMED',\r\n        message: 'Malformed View Declaration: ' + err\r\n      });\r\n    });\r\n  } else {\r\n    continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * isSecure determines whether the module can have confidence that its\r\n * communication with its view cannot be intercepted by an untrusted 3rd party.\r\n * In practice, this means that its okay for the runtime to have access to the\r\n * messages, and if the context is a web server or a browser extension then\r\n * that context is trusted. However, if a provider wants to allow their e.g.\r\n * social provider to be used on arbitrary websites, this mechanism means that\r\n * if the website uses a trusted version of the freedom.js library, then the\r\n * module can be used.\r\n * @method isSecure\r\n * @returns {Boolean} if the channel to the view is secure.\r\n */\r\nCore_View.prototype.isSecure = function (continuation) {\r\n  continuation(false);\r\n};\r\n\r\n/**\r\n * Send a message to an open view.\r\n * @method postMessage\r\n */\r\nCore_View.prototype.postMessage = function (msg, continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot post message to uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onMessage(this.id, msg);\r\n  continuation();\r\n};\r\n\r\n/**\r\n * Close an active view.\r\n * @method close\r\n */\r\nCore_View.prototype.close = function (continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot close uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onClose(this.id);\r\n  delete this.id;\r\n\r\n  continuation();\r\n};\r\n\r\n\r\n/**\r\n * Allow a web page to redefine behavior for how views are shown.\r\n * @method register\r\n * @static\r\n * @param {Function} PageProvider The custom view behavior.\r\n */\r\nCore_View.register = function (PageProvider) {\r\n  var provider = PageProvider ? new PageProvider() : Core_View.provider;\r\n  exports.provider = Core_View.bind(this, provider);\r\n};\r\n\r\nexports.provider = Core_View.bind(this, Core_View.provider);\r\nexports.name = 'core.view';\r\nexports.register = Core_View.register;\r\nexports.flags = {provider: true, module: true};\r\n","/*globals WebSocket, ArrayBuffer, Blob, Uint8Array, console */\n/*jslint sloppy:true, node:true */\n\nvar WSHandle = null;\nvar nodeStyle = false;\n\n/**\n * A WebSocket core provider\n *\n * @param {Object} cap Capabilities for the provider\n * @param {Function} dispatchEvent Function to dispatch events.\n * @param {String} url The Remote URL to connect with.\n * @param {String[]} protocols SubProtocols to open.\n * @param {WebSocket?} socket An alternative socket class to use.\n */\nvar WS = function (cap, dispatchEvent, url, protocols, socket) {\n  var WSImplementation = null,\n    error;\n  this.isNode = nodeStyle;\n  if (typeof socket !== 'undefined') {\n    WSImplementation = socket;\n  } else if (WSHandle !== null) {\n    WSImplementation = WSHandle;\n  } else if (typeof WebSocket !== 'undefined') {\n    WSImplementation = WebSocket;\n  } else {\n    console.error('Platform does not support WebSocket');\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    if (protocols) {\n      this.websocket = new WSImplementation(url, protocols);\n    } else {\n      this.websocket = new WSImplementation(url);\n    }\n    this.websocket.binaryType = 'arraybuffer';\n  } catch (e) {\n    error = {};\n    if (e instanceof SyntaxError) {\n      error.errcode = 'SYNTAX';\n    } else {\n      error.errcode = e.name;\n    }\n    error.message = e.message;\n    dispatchEvent('onError', error);\n    return;\n  }\n\n  if (this.isNode) {\n    this.websocket.on('message', this.onMessage.bind(this));\n    this.websocket.on('open', this.onOpen.bind(this));\n    // node.js websocket implementation not compliant\n    this.websocket.on('close', this.onClose.bind(this, {\n      code: 0,\n      reason: 'UNKNOWN',\n      wasClean: true\n    }));\n    this.websocket.on('error', this.onError.bind(this));\n  } else {\n    this.websocket.onopen = this.onOpen.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n};\n\nWS.prototype.send = function (data, continuation) {\n  var toSend = data.text || data.binary || data.buffer,\n    errcode,\n    message;\n\n  if (toSend) {\n    try {\n      // For node.js, we have to do weird buffer stuff\n      if (this.isNode && toSend instanceof ArrayBuffer) {\n        this.websocket.send(\n          new Uint8Array(toSend),\n          { binary: true },\n          this.onError.bind(this)\n        );\n      } else {\n        this.websocket.send(toSend);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        errcode = \"SYNTAX\";\n      } else {\n        errcode = \"INVALID_STATE\";\n      }\n      message = e.message;\n    }\n  } else {\n    errcode = \"BAD_SEND\";\n    message = \"No text, binary, or buffer data found.\";\n  }\n\n  if (errcode) {\n    continuation(undefined, {\n      errcode: errcode,\n      message: message\n    });\n  } else {\n    continuation();\n  }\n};\n\nWS.prototype.getReadyState = function (continuation) {\n  continuation(this.websocket.readyState);\n};\n\nWS.prototype.getBufferedAmount = function (continuation) {\n  continuation(this.websocket.bufferedAmount);\n};\n\nWS.prototype.close = function (code, reason, continuation) {\n  try {\n    if (code && reason) {\n      this.websocket.close(code, reason);\n    } else {\n      this.websocket.close();\n    }\n    continuation();\n  } catch (e) {\n    var errorCode;\n    if (e instanceof SyntaxError) {\n      errorCode = \"SYNTAX\";\n    } else {\n      errorCode = \"INVALID_ACCESS\";\n    }\n    continuation(undefined, {\n      errcode: errorCode,\n      message: e.message\n    });\n  }\n};\n\nWS.prototype.onOpen = function (event) {\n  this.dispatchEvent('onOpen');\n};\n\nWS.prototype.onMessage = function (event, flags) {\n  var data = {};\n  if (this.isNode && flags && flags.binary) {\n    data.buffer = new Uint8Array(event).buffer;\n  } else if (this.isNode) {\n    data.text = event;\n  } else if (typeof ArrayBuffer !== 'undefined' && event.data instanceof ArrayBuffer) {\n    data.buffer = event.data;\n  } else if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n    data.binary = event.data;\n  } else if (typeof event.data === 'string') {\n    data.text = event.data;\n  }\n  this.dispatchEvent('onMessage', data);\n};\n\nWS.prototype.onError = function (event) {\n  // Nothing to pass on\n  // See: http://stackoverflow.com/a/18804298/300539\n  this.dispatchEvent('onError');\n};\n\nWS.prototype.onClose = function (event) {\n  this.dispatchEvent('onClose',\n                     {code: event.code,\n                      reason: event.reason,\n                      wasClean: event.wasClean});\n};\n\nexports.provider = WS;\nexports.name = 'core.websocket';\nexports.setSocket = function (impl, isNode) {\n  WSHandle = impl;\n  nodeStyle = isNode;\n};\n","/*jshint node:true*/\n/*global */\nvar PromiseCompat = require('es6-promise').Promise;\nvar XhrClass = null;\n\nvar XhrProvider = function(cap, dispatchEvent) {\n  \"use strict\";\n  if (typeof window !== \"undefined\" &&\n      typeof window.XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom\n    XhrClass = window.XMLHttpRequest;\n  } else if (typeof XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom-for-firefox\n    XhrClass = XMLHttpRequest;\n  } else if (XhrClass === null) {\n    console.error(\"Platform does not support XMLHttpRequest\");\n  }\n\n  this._dispatchEvent = dispatchEvent;\n  this._xhr = new XhrClass();\n\n  setTimeout(cap.provider.onClose.bind(\n    cap.provider,\n    this,\n    this.abort.bind(this)\n  ), 0);\n\n  this._events = [\n    \"loadstart\",\n    \"progress\",\n    \"abort\",\n    \"error\",\n    \"load\",\n    \"timeout\",\n    \"loadend\",\n    \"readystatechange\"\n  ];\n  this._setupListeners();\n\n};\n\nXhrProvider.prototype.open = function(method, url, async, user, password) {\n  \"use strict\";\n  if (typeof async !== \"undefined\" && async !== true) {\n    return PromiseCompat.reject({\n      errcode: \"InvalidAccessError\",\n      message: \"async should always be set to true\"\n    });\n  }\n\n  // Force async to be true. undefined can lead to async=false in Chrome packaged apps\n  this._xhr.open(method, url, true, user, password);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.send = function(data) {\n  \"use strict\";\n  if (!(data instanceof Object)) {\n    this._xhr.send();\n  } else if (data.hasOwnProperty(\"string\")) {\n    this._xhr.send(data.string);\n  } else if (data.hasOwnProperty(\"buffer\")) {\n    this._xhr.send(data.buffer);\n  } else {\n    this._xhr.send();\n  }\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.abort = function() {\n  \"use strict\";\n  this._xhr.abort();\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getResponseHeader = function(header) {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getResponseHeader(header));\n};\n\nXhrProvider.prototype.getAllResponseHeaders = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getAllResponseHeaders());\n};\n\nXhrProvider.prototype.setRequestHeader = function(header, value) {\n  \"use strict\";\n  this._xhr.setRequestHeader(header, value);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.overrideMimeType = function(mime) {\n  \"use strict\";\n  this._xhr.overrideMimeType(mime);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getReadyState = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.readyState);\n};\n\nXhrProvider.prototype.getResponse = function() {\n  \"use strict\";\n  if (this._xhr.response === null) {\n    return PromiseCompat.resolve(null);\n  } else if (this._xhr.responseType === \"text\" || this._xhr.responseType === \"\") {\n    return PromiseCompat.resolve({ string: this._xhr.response });\n  } else if (this._xhr.responseType === \"arraybuffer\") {\n    return PromiseCompat.resolve({ buffer: this._xhr.response });\n  } else if (this._xhr.responseType === \"json\") {\n    return PromiseCompat.resolve({ object: this._xhr.response });\n  }\n\n  return PromiseCompat.reject(\"core.xhr cannot determine type of response\");\n};\n\nXhrProvider.prototype.getResponseText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseText);\n};\n\nXhrProvider.prototype.getResponseURL = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseURL);\n};\n\nXhrProvider.prototype.getResponseType = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseType);\n};\n\nXhrProvider.prototype.setResponseType = function(type) {\n  \"use strict\";\n  this._xhr.responseType = type;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getStatus = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.status);\n};\n\nXhrProvider.prototype.getStatusText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.statusText);\n};\n\nXhrProvider.prototype.getTimeout = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.timeout);\n};\n\nXhrProvider.prototype.setTimeout = function(timeout) {\n  \"use strict\";\n  this._xhr.timeout = timeout;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getWithCredentials = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.withCredentials);\n};\n\nXhrProvider.prototype.setWithCredentials = function(wc) {\n  \"use strict\";\n  this._xhr.withCredentials = wc;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype._setupListeners = function() {\n  \"use strict\";\n  // Download events\n  this._events.forEach(function (eventName) {\n    this._xhr.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"on\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n\n  // Upload events\n  this._events.forEach(function (eventName) {\n    this._xhr.upload.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"onupload\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n};\n\nexports.name = \"core.xhr\";\nexports.provider = XhrProvider;\nexports.style = \"providePromises\";\nexports.flags = { provider: true };\nexports.setImpl = function(impl) {\n  \"use strict\";\n  XhrClass = impl;\n};\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar loadedOnStartup = false;\n/**\n * If there is redirection back to the page, and oAuthRedirectID is set,\n * then report the auth and close the window.\n */\nif (typeof window !== 'undefined' && window && window.location &&\n    window.addEventListener) {\n  window.addEventListener('load', function () {\n    \"use strict\";\n    loadedOnStartup = true;\n  }, true);\n\n  if (window.localStorage &&\n      window.location.href.indexOf(oAuthRedirectId) > 0) {\n    // This will trigger a 'storage' event on the window. See storageListener\n    window.localStorage.setItem(oAuthRedirectId, new Date());\n    window.close();\n  }\n}\n\nvar LocalPageAuth = function() {\n  \"use strict\";\n  this.listeners = {};\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nLocalPageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof window !== 'undefined' && window && loadedOnStartup) {\n    var here = window.location.protocol + \"//\" + window.location.host +\n        window.location.pathname;\n    if (redirectURIs.indexOf(here) > -1) {\n      continuation({\n        redirect: here,\n        state: oAuthRedirectId + Math.random()\n      });\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nLocalPageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, continuation) {\n  \"use strict\";\n  var listener = this.storageListener.bind(this, continuation, stateObj);\n  this.listeners[stateObj.state] = listener;\n  window.addEventListener(\"storage\", listener, false);\n  // Start 'er up\n  window.open(authUrl);\n};\n\n/**\n * Handler for storage events, which relays them to waiting clients.\n * For the schema of the storage msg, see:\n * http://tutorials.jenkov.com/html5/local-storage.html#storage-events\n * @param {Function} continuation function to call with result\n * @param {Object.<string, string>} stateObj the return value from initiateOAuth\n * @param {Object} msg storage event\n */\nLocalPageAuth.prototype.storageListener = function(continuation, stateObj, msg) {\n  'use strict';\n  if (msg.url.indexOf(stateObj.state) > -1) {\n    window.removeEventListener(\"storage\", this.listeners[stateObj.state], false);\n    delete this.listeners[stateObj.state];\n    continuation(msg.url);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = LocalPageAuth;\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nfunction RemotePageAuth() {\n  \"use strict\";\n  this.listeners = {};\n}\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nRemotePageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof global !== 'undefined' && global && global.document) {\n    for (var i=0; i<redirectURIs.length; i++) {\n      // TODO: remove restriction on URL pattern match.\n      if ((redirectURIs[i].indexOf('http://') === 0 ||\n          redirectURIs[i].indexOf('https://') === 0) &&\n          redirectURIs[i].indexOf('oauth-relay.html') > 0) {\n        continuation({\n          redirect: redirectURIs[i],\n          state: oAuthRedirectId + Math.random()\n        });\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nRemotePageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, continuation) {\n  \"use strict\";\n  var frame = global.document.createElement('iframe');\n  frame.src = stateObj.redirect;\n  frame.style.display = 'none';\n\n  global.document.body.appendChild(frame);\n  frame.addEventListener('load', function () {\n    this.listeners[stateObj.state] = continuation;\n    window.open(authUrl);\n\n    frame.contentWindow.postMessage(stateObj.state, '*');\n  }.bind(this));\n\n  window.addEventListener('message', function (frame, msg) {\n    if (msg.data && msg.data.key && msg.data.url && this.listeners[msg.data.key]) {\n      this.listeners[msg.data.key](msg.data.url);\n      delete this.listeners[msg.data.key];\n      try {\n        document.body.removeChild(frame);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }.bind(this, frame), false);\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = RemotePageAuth;\n","/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\n/**\n * The API registry for freedom.js.  Used to look up requested APIs,\n * and provides a bridge for core APIs to act like normal APIs.\n * @Class API\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Api = function(debug) {\n  this.debug = debug;\n  this.apis = {};\n  this.providers = {};\n  this.waiters = {};\n};\n\n/**\n * Get an API.\n * @method get\n * @param {String} api The API name to get.\n * @returns {{name:String, definition:API}} The API if registered.\n */\nApi.prototype.get = function(api) {\n  if (!this.apis[api]) {\n    return false;\n  }\n  return {\n    name: api,\n    definition: this.apis[api]\n  };\n};\n\n/**\n * Set an API to a definition.\n * @method set\n * @param {String} name The API name.\n * @param {API} definition The JSON object defining the API.\n */\nApi.prototype.set = function(name, definition) {\n  this.apis[name] = definition;\n};\n\n/**\n * Register a core API provider.\n * @method register\n * @param {String} name the API name.\n * @param {Function} constructor the function to create a provider for the API.\n * @param {String?} style The style the provider is written in. Valid styles\n *   are documented in fdom.port.Provider.prototype.getInterface. Defaults to\n *   provideAsynchronous\n * @param {Object?} flags Prefixed arguments needed by the core provider.\n *   valid keys are 'module', 'provider', and 'config'.\n */\nApi.prototype.register = function(name, constructor, style, flags) {\n  var i,\n    args;\n\n  this.providers[name] = {\n    constructor: constructor,\n    style: style || 'provideAsynchronous',\n    flags: flags || {}\n  };\n\n  if (this.waiters[name]) {\n    for (i = 0; i < this.waiters[name].length; i += 1) {\n      args = {};\n      if (flags.module) {\n        args.module = this.waiters[name][i].from;\n      }\n      if (flags.config) {\n        args.config = this.waiters[name][i].from.config;\n      }\n      this.waiters[name][i].resolve({\n        args: args,\n        inst: constructor.bind({}, args)\n      });\n    }\n    delete this.waiters[name];\n  }\n};\n\n/**\n * Get a core API connected to a given FreeDOM module.\n * @method getCore\n * @param {String} name the API to retrieve.\n * @param {Module} from The instantiating App.\n * @returns {Promise} A promise of a fdom.App look-alike (and argument object),\n * matching a local API definition.\n */\nApi.prototype.getCore = function(name, from) {\n  return new PromiseCompat(function(resolve, reject) {\n    if (this.apis[name]) {\n      if (this.providers[name]) {\n        var args = {};\n        if (this.providers[name].flags.module) {\n          args.module = from;\n        }\n        if (this.providers[name].flags.config) {\n          args.config = from.config;\n        }\n        resolve({\n          args: args,\n          inst: this.providers[name].constructor.bind({}, args)\n        });\n      } else {\n        if (!this.waiters[name]) {\n          this.waiters[name] = [];\n        }\n        this.waiters[name].push({\n          resolve: resolve,\n          reject: reject,\n          from: from\n        });\n      }\n    } else {\n      this.debug.warn('Api.getCore asked for unknown core: ' + name);\n      reject(null);\n    }\n  }.bind(this));\n};\n\n/**\n * Configure a {Provider} to provide a named core api on behalf of a\n * given port.\n * @param {String} name The name of the provider\n * @param {Provider} provider The provider that will provide the named api\n * @param {Module} from The module requesting the core provider.\n */\nApi.prototype.provideCore = function (name, provider, from) {\n  return this.getCore(name, from).then(function (core) {\n    var flags = this.providers[name].flags,\n      iface = provider.getProxyInterface();\n    if (flags.provider) {\n      core.args.provider = iface;\n    }\n    iface()[this.providers[name].style](core.inst);\n  }.bind(this), function (err) {\n    this.debug.error('Could not provide core: ', err);\n  }.bind(this));\n};\n\n/**\n * Shutdown the API registry, and reject any pending waiters.\n */\nApi.prototype.cleanup = function () {\n  var prop,\n    doReject = function (waiter) {\n      waiter.reject();\n    };\n  for (prop in this.waiters) {\n    if (this.waiters.hasOwnProperty(prop)) {\n      this.waiters[prop].forEach(doReject);\n    }\n  }\n  delete this.waiters;\n};\n\n/**\n * Defines the apis module and provider registry.\n */\nmodule.exports = Api;\n","/*jslint indent:2,node:true */\n\nvar Bundle = function () {\n  'use strict';\n  this.interfaces = require('../dist/bundle.compiled');\n};\n\n/**\n * Populate an API registry with provided providers, and with known API\n * definitions.\n * @static\n * @method register\n * @param {{name: string, provider: Function, style?: string}[]} providers\n *   The core providers made available to this freedom.js instance.\n * @param {Api} registry The API registry to populate.\n */\nexports.register = function (providers, registry) {\n  'use strict';\n  var bundle = new Bundle();\n  bundle.interfaces.forEach(function (api) {\n    if (api && api.name && api.api) {\n      registry.set(api.name, api.api);\n    }\n  });\n\n  providers.forEach(function (provider) {\n    if (provider.name) {\n      registry.register(provider.name,\n                        provider.provider,\n                        provider.style,\n                        provider.flags);\n    }\n  });\n};\n","/*globals Blob, ArrayBuffer, DataView */\n/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable api.\n * @class Consumer\n * @implements Port\n * @uses handleEvents\n * @param {Object} interfaceCls The api interface exposed by this consumer.\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Consumer = function (interfaceCls, debug) {\n  this.id = Consumer.nextId();\n  this.interfaceCls = interfaceCls;\n  this.debug = debug;\n  util.handleEvents(this);\n\n  this.ifaces = {};\n  this.closeHandlers = {};\n  this.errorHandlers = {};\n  this.emits = {};\n};\n\n/**\n * Receive incoming messages for this consumer.\n * @method onMessage\n * @param {String} source The source of the message.\n * @param {Object} message The received message.\n */\nConsumer.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.emitChannel = message.channel;\n    this.emit(this.emitChannel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    delete this.controlChannel;\n    this.doClose();\n  } else {\n    if (!this.emitChannel && message.channel) {\n      this.emitChannel = message.channel;\n      this.emit('start');\n      return;\n    }\n    if (message.type === 'close' && message.to) {\n      this.teardown(message.to);\n      return;\n    }\n    if (message.type === 'error') {\n      this.error(message.to, message.message);\n      return;\n    }\n    if (message.to) {\n      if (this.emits[message.to]) {\n        this.emits[message.to]('message', message.message);\n      } else {\n        this.debug.warn('Could not deliver message, no such interface: ' + message.to);\n      }\n    } else {\n      var msg = message.message;\n      util.eachProp(this.emits, function (iface) {\n        iface('message', message.message);\n      });\n    }\n  }\n};\n\n/**\n * Create a consumer.Interface associated with this consumer.\n * An interface is returned, which is supplied with important control of the\n * api via constructor arguments: (bound below in getInterfaceConstructor)\n *\n * onMsg: function(binder) sets the function to call when messages for this\n *    interface arrive on the channel,\n * emit: function(msg) allows this interface to emit messages,\n * id: string is the Identifier for this interface.\n * @method getInterface\n */\nConsumer.prototype.getInterface = function () {\n  var Iface = this.getInterfaceConstructor(),\n    args = Array.prototype.slice.call(arguments, 0);\n  if (args.length) {\n    Iface = Iface.bind.apply(Iface, [Iface].concat(args));\n  }\n  return new Iface();\n};\n\n/**\n * Attach an 'onEvent' listener to an interface, allowing external consumers\n * to either listen to channel state, or register callbacks on lifetime events\n * of individual instances of the interface.\n * @method getListener\n * @parma {String} name The event to listen to.\n * @private\n */\nConsumer.prototype.getListener = function (name) {\n  return function (instance, handler) {\n    // Listen to the channel directly.\n    if (typeof instance === 'function' && handler === undefined) {\n      this.once(name, instance);\n      return;\n    }\n\n    // Listen to a specific instance.\n    var handlers = name + 'Handlers';\n    util.eachProp(this.ifaces, function (candidate, id) {\n      if (candidate === instance) {\n        if (this[handlers][id]) {\n          this[handlers][id].push(handler);\n        } else {\n          this[handlers][id] = [handler];\n        }\n        return true;\n      }\n    }.bind(this));\n  }.bind(this);\n};\n\n/**\n * Create a function that can be used to get interfaces from this api consumer\n * from a user-visible point.\n * @method getProxyInterface\n */\nConsumer.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    if (args.length > 0) {\n      return p.getInterface.apply(p, args);\n    } else {\n      return p.getInterface();\n    }\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (candidate, id) {\n        if (candidate === iface) {\n          this.teardown(id);\n          this.emit(this.emitChannel, {\n            type: 'close',\n            to: id\n          });\n          return true;\n        }\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.doClose();\n    }\n  }.bind(this);\n\n  func.onClose = this.getListener('close');\n  func.onError = this.getListener('error');\n\n  return func;\n};\n\n/**\n * Provides a bound class for creating a consumer.Interface associated\n * with this api. This partial level of construction can be used\n * to allow the consumer to be used as a provider for another API.\n * @method getInterfaceConstructor\n * @private\n */\nConsumer.prototype.getInterfaceConstructor = function () {\n  var id = Consumer.nextId();\n  return this.interfaceCls.bind(\n    {},\n    function (id, obj, binder) {\n      this.ifaces[id] = obj;\n      this.emits[id] = binder;\n    }.bind(this, id),\n    this.doEmit.bind(this, id),\n    this.debug\n  );\n};\n\n/**\n * Emit a message on the channel once setup is complete.\n * @method doEmit\n * @private\n * @param {String} to The ID of the flow sending the message.\n * @param {Object} msg The message to emit\n * @param {Boolean} all Send message to all recipients.\n */\nConsumer.prototype.doEmit = function (to, msg, all) {\n  if (all) {\n    to = false;\n  }\n  if (this.emitChannel) {\n    this.emit(this.emitChannel, {to: to, type: 'message', message: msg});\n  } else {\n    this.once('start', this.doEmit.bind(this, to, msg));\n  }\n};\n\n/**\n * Teardown a single interface of this api.\n * @method teardown\n * @param {String} id The id of the interface to tear down.\n */\nConsumer.prototype.teardown = function (id) {\n  if (this.emits[id]) {\n    this.emits[id]('close');\n  }\n  delete this.emits[id];\n  if (this.closeHandlers[id]) {\n    util.eachProp(this.closeHandlers[id], function (prop) {\n      prop();\n    });\n  }\n  delete this.ifaces[id];\n  delete this.closeHandlers[id];\n  delete this.errorHandlers[id];\n};\n\n/**\n * Handle a message error reported to this api.\n * @method error\n * @param {String?} id The id of the interface where the error occured.\n * @param {Object} message The message which failed, if relevant.\n */\nConsumer.prototype.error = function (id, message) {\n  if (id && this.errorHandlers[id]) {\n    util.eachProp(this.errorHandlers[id], function (prop) {\n      prop(message);\n    });\n  } else if (!id) {\n    this.emit('error', message);\n  }\n};\n\n\n/**\n * Close / teardown the flow this api terminates.\n * @method doClose\n */\nConsumer.prototype.doClose = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Channel Closing',\n      request: 'close'\n    });\n  }\n\n  util.eachProp(this.emits, function (emit, id) {\n    this.teardown(id);\n  }.bind(this));\n\n  this.emit('close');\n  this.off();\n\n  this.emitChannel = null;\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return The description of this port.\n */\nConsumer.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Consumer \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Consumer]\";\n  }\n};\n\n/**\n * Get the next ID for an api channel.\n * @method nextId\n * @static\n * @private\n */\nConsumer.nextId = function () {\n  if (!Consumer.id) {\n    Consumer.id = 1;\n  }\n  return (Consumer.id += 1);\n};\n\n/**\n * Convert a structured data structure into a message stream conforming to\n * a template and an array of binary data elements.\n * @static\n * @method messageToPortable\n * @param {Object} template The template to conform to\n * @param {Object} value The instance of the data structure to confrom\n * @param {Debug} debug A debugger for errors.\n * @return {{text: Object, binary: Array}} Separated data streams.\n */\nConsumer.messageToPortable = function (template, value, debug) {\n  var externals = [],\n    message = Consumer.conform(template, value, externals, true, debug);\n  return {\n    text: message,\n    binary: externals\n  };\n};\n\n/**\n * Convert Structured Data streams into a data structure conforming to a\n * template.\n * @static\n * @method portableToMessage\n * @param {Object} template The template to conform to\n * @param {{text: Object, binary: Array}} streams The streams to conform\n * @param {Debug} debug A debugger for errors.\n * @return {Object} The data structure matching the template.\n */\nConsumer.portableToMessage = function (template, streams, debug) {\n  return Consumer.conform(template, streams.text, streams.binary, false, debug);\n};\n\n/**\n * Force a collection of values to look like the types and length of an API\n * template.\n * @static\n * @method conform\n * @param {Object} template The template to conform to\n * @param {Object} from The value to conform\n * @param {Array} externals Listing of binary elements in the template\n * @param {Boolean} Whether to to separate or combine streams.\n * @aparam {Debug} debug A debugger for errors.\n */\nConsumer.conform = function (template, from, externals, separate, debug) {\n  /* jshint -W086 */\n  if (typeof (from) === 'function' && template !== 'proxy') {\n    //from = undefined;\n    //throw \"Trying to conform a function\";\n    debug.error(\"Message discarded as functions can't cross modules!\");\n    return undefined;\n  } else if (typeof (from) === 'undefined') {\n    return undefined;\n  } else if (from === null) {\n    return null;\n  } else if (template === undefined) {\n    debug.error(\"Message discarded for not matching declared type!\", from);\n    return undefined;\n  }\n\n  switch (template) {\n  case 'string':\n    return String('') + from;\n  case 'number':\n    return Number(1) * from;\n  case 'boolean':\n    return Boolean(from === true);\n  case 'object':\n    // TODO(willscott): Allow removal if sandboxing enforces this.\n    if (typeof from === 'undefined') {\n      return undefined;\n    } else {\n      return JSON.parse(JSON.stringify(from));\n    }\n  case 'blob':\n    if (separate) {\n      if (from instanceof Blob) {\n        externals.push(from);\n        return externals.length - 1;\n      } else {\n        debug.error('conform expecting Blob, but saw ' + (typeof from));\n        externals.push(new Blob([]));\n        return externals.length - 1;\n      }\n    } else {\n      return externals[from];\n    }\n  case 'buffer':\n    if (separate) {\n      externals.push(Consumer.makeArrayBuffer(from, debug));\n      return externals.length - 1;\n    } else {\n      return Consumer.makeArrayBuffer(externals[from], debug);\n    }\n  case 'proxy':\n    return from;\n  }\n  var val, i;\n  if (Array.isArray(template) && from !== undefined) {\n    val = [];\n    i = 0;\n    if (template.length === 2 && template[0] === 'array') {\n      //console.log(\"template is array, value is \" + JSON.stringify(value));\n      for (i = 0; i < from.length; i += 1) {\n        val.push(Consumer.conform(template[1], from[i], externals,\n                                  separate, debug));\n      }\n    } else {\n      for (i = 0; i < template.length; i += 1) {\n        if (from[i] !== undefined) {\n          val.push(Consumer.conform(template[i], from[i], externals,\n                                    separate, debug));\n        } else {\n          val.push(undefined);\n        }\n      }\n    }\n    return val;\n  } else if (typeof template === 'object' && from !== undefined) {\n    val = {};\n    util.eachProp(template, function (prop, name) {\n      if (from[name] !== undefined) {\n        val[name] = Consumer.conform(prop, from[name], externals, separate,\n                                     debug);\n      }\n    });\n    return val;\n  }\n  debug.error('Unknown template provided: ' + template);\n};\n\n/**\n * Make a thing into an Array Buffer\n * @static\n * @method makeArrayBuffer\n * @param {Object} thing\n * @param {Debug} debug A debugger in case of errors.\n * @return {ArrayBuffer} An Array Buffer\n */\nConsumer.makeArrayBuffer = function (thing, debug) {\n  if (!thing) {\n    return new ArrayBuffer(0);\n  }\n\n  if (thing instanceof ArrayBuffer) {\n    return thing;\n  } else if (thing.constructor.name === \"ArrayBuffer\" &&\n      typeof thing.prototype === \"undefined\") {\n    // Workaround for webkit origin ownership issue.\n    // https://github.com/UWNetworksLab/freedom/issues/28\n    return new DataView(thing).buffer;\n  } else {\n    debug.error('expecting ArrayBuffer, but saw ' +\n        (typeof thing) + ': ' + JSON.stringify(thing));\n    return new ArrayBuffer(0);\n  }\n};\n\n/**\n * Recursively traverse a [nested] object and freeze its keys from being\n * writable. Note, the result can have new keys added to it, but existing ones\n * cannot be  overwritten. Doesn't do anything for arrays or other collections.\n *\n * @method recursiveFreezeObject\n * @static\n * @param {Object} obj - object to be frozen\n * @return {Object} obj\n **/\nConsumer.recursiveFreezeObject = function (obj) {\n  var k, ret = {};\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      Object.defineProperty(ret, k, {\n        value: Consumer.recursiveFreezeObject(obj[k]),\n        writable: false,\n        enumerable: true\n      });\n    }\n  }\n  return ret;\n};\n\nmodule.exports = Consumer;\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom entry point for debugging.\n * @uses handleEvents\n * @implements Port\n * @constructor\n */\nvar Debug = function (logger) {\n  this.id = 'debug';\n  this.emitChannel = false;\n  this.config = false;\n  util.handleEvents(this);\n};\n\n/**\n * The supported log levels for debugging.\n * @static\n */\nDebug.LEVELS = ['debug', 'info', 'log', 'warn', 'error'];\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the textual description.\n */\nDebug.prototype.toString = function () {\n  return '[Console]';\n};\n\n/**\n * Register a logger for outputting debugging messages.\n * @method setLogger\n * @param {Console} logger The logger to register\n */\nDebug.prototype.setLogger = function (logger) {\n  if (this.logger) {\n    this.info('Replacing Logger.');\n  }\n  this.logger = logger;\n  this.emit('logger');\n};\n\n/**\n * Handler for receiving messages sent to the debug port.\n * These messages are used to retreive config for exposing console.\n * @method onMessage\n * @param {String} source the source identifier for the message.\n * @param {Object} message the received message.\n */\nDebug.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.channel && !this.emitChannel) {\n    this.emitChannel = message.channel;\n    this.config = message.config;\n    if (!this.config.global.console) {\n      if (typeof console !== 'undefined') {\n        this.config.global.console = console;\n      } else {\n        this.config.global.console = this.getLogger('Console');\n      }\n    }\n    this.emit('ready');\n  }\n};\n\n/**\n * Dispatch a debug message with arbitrary severity.\n * All debug messages are routed through the manager, to allow for delegation.\n * @method format\n * @param {String} severity the severity of the message.\n * @param {String} source The location of message.\n * @param {String[]} args The contents of the message.\n * @private\n */\nDebug.prototype.format = function (severity, source, args) {\n  var i, alist = [], argarr;\n  if (typeof args === \"string\" && source) {\n    try {\n      argarr = JSON.parse(args);\n      if (argarr instanceof Array) {\n        args = argarr;\n      }\n    } catch (e) {\n      // pass.\n    }\n  }\n\n  if (typeof args === \"string\") {\n    alist.push(args);\n  } else {\n    for (i = 0; i < args.length; i += 1) {\n      alist.push(args[i]);\n    }\n  }\n  if (!this.emitChannel) {\n    this.on('ready', this.format.bind(this, severity, source, alist));\n    return;\n  }\n  this.emit(this.emitChannel, {\n    severity: severity,\n    source: source,\n    quiet: true,\n    request: 'debug',\n    msg: JSON.stringify(alist)\n  });\n};\n\n/**\n * Print received messages on the console.\n * This is called by the manager in response to an emission from format.\n * @method print\n * @param {Object} message The message emitted by {@see format} to print.\n */\nDebug.prototype.print = function (message) {\n  if (!this.logger) {\n    this.once('logger', this.print.bind(this, message));\n    return;\n  }\n\n  var args, arr = [], i = 0;\n  args = JSON.parse(message.msg);\n  if (typeof args === \"string\") {\n    arr.push(args);\n  } else {\n    while (args[i] !== undefined) {\n      arr.push(args[i]);\n      i += 1;\n    }\n  }\n  this.logger[message.severity].call(this.logger, message.source, arr, function () {});\n};\n\n/**\n * Print a log message to the console.\n * @method log\n */\nDebug.prototype.log = function () {\n  this.format('log', undefined, arguments);\n};\n\n/**\n * Print an info message to the console.\n * @method log\n */\nDebug.prototype.info = function () {\n  this.format('info', undefined, arguments);\n};\n\n/**\n * Print a debug message to the console.\n * @method log\n */\nDebug.prototype.debug = function () {\n  this.format('debug', undefined, arguments);\n};\n\n/**\n * Print a warning message to the console.\n * @method warn\n */\nDebug.prototype.warn = function () {\n  this.format('warn', undefined, arguments);\n};\n\n/**\n * Print an error message to the console.\n * @method error\n */\nDebug.prototype.error = function () {\n  this.format('error', undefined, arguments);\n};\n\n/**\n * Get a logger that logs messages prefixed by a given name.\n * @method getLogger\n * @param {String} name The prefix for logged messages.\n * @returns {Console} A console-like object.\n */\nDebug.prototype.getLogger = function (name) {\n  var log = function (severity, source) {\n    var args = Array.prototype.splice.call(arguments, 2);\n    this.format(severity, source, args);\n  },\n    logger = {\n      freedom: true\n    };\n  Debug.LEVELS.forEach(function (level) {\n    logger[level] = log.bind(this, level, name);\n  }.bind(this));\n  return logger;\n};\n\n/**\n * Create a synchronous 'getLogger' method that binds around an asynchronous\n * logger by creating a buffer until the asynchronous logger is resolved.\n * @see {ModuleInternal.loadLinks} for where this method is bound to the created\n *     external interface.\n * @method getLoggingShim\n * @param {Function} asyncMethod The wrapper to 'getLogger'\n */\nDebug.prototype.getLoggingShim = function (asyncMethod) {\n  return function getLogggerSync(name) {\n    var toResolve = asyncMethod(name),\n      buffer = [],\n      methods = Debug.LEVELS,\n      backing = null,\n      ret = {};\n    toResolve.then(function (logger) {\n      backing = logger;\n      buffer.forEach(function (item) {\n        backing[item[0]].apply(backing, item[1]);\n      });\n    });\n    methods.forEach(function (mthd) {\n      ret[mthd] = function() {\n        var args = Array.prototype.splice.call(arguments, 0);\n        if (backing) {\n          backing[this].apply(backing, args);\n        } else {\n          buffer.push([this, args]);\n        }\n      }.bind(mthd);\n    });\n    return ret;\n  };\n};\n\nmodule.exports = Debug;\n","/*jslint indent:2,node:true */\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\nvar Api = require('./api');\r\nvar Debug = require('./debug');\r\nvar Hub = require('./hub');\r\nvar Manager = require('./manager');\r\nvar Policy = require('./policy');\r\nvar ProxyBinder = require('./proxybinder');\r\nvar Resource = require('./resource');\r\nvar util = require('./util');\r\nvar Bundle = require('./bundle');\r\n\r\nvar freedomGlobal;\r\nvar getGlobal = function () {\r\n  'use strict';\r\n  \r\n  // Node.js\r\n  if (typeof global !== 'undefined' && global.prototype === undefined) {\r\n    freedomGlobal = global;\r\n  // Browsers\r\n  } else {\r\n    setTimeout(function () {\r\n      freedomGlobal = this;\r\n    }, 0);\r\n  }\r\n};\r\ngetGlobal();\r\n\r\n/**\r\n * Create a new freedom context.\r\n * @param {Object} context Information about the local context.\r\n * @see {util/workerEntry.js}\r\n * @param {String} manifest The manifest to load.\r\n * @param {Object} config Configuration keys set by the user.\r\n * @returns {Promise} A promise for the module defined in the manifest.\r\n */\r\nvar setup = function (context, manifest, config) {\r\n  'use strict';\r\n  var debug = new Debug(),\r\n    hub = new Hub(debug),\r\n    resource = new Resource(debug),\r\n    api = new Api(debug),\r\n    manager = new Manager(hub, resource, api),\r\n    binder = new ProxyBinder(manager),\r\n    policy,\r\n    site_cfg = {\r\n      'debug': 'log',\r\n      'manifest': manifest,\r\n      'moduleContext': (!context || typeof (context.isModule) === \"undefined\") ?\r\n          util.isModuleContext() :\r\n          context.isModule\r\n    },\r\n    link,\r\n    Port,\r\n    cleanup = function () {\r\n      api.cleanup();\r\n      manager.destroy();\r\n    };\r\n\r\n  if (config) {\r\n    util.mixin(site_cfg, config, true);\r\n  }\r\n  site_cfg.global = freedomGlobal;\r\n  if (context) {\r\n    util.mixin(site_cfg, context, true);\r\n  }\r\n\r\n  // Register user-supplied extensions.\r\n  // For example the 'core.oauth' provider defines a register function,\r\n  // which enables site_cfg.oauth to be registered with it.\r\n  context.providers.forEach(function (provider) {\r\n    var name;\r\n    if (provider.name.indexOf('core.') === 0 &&\r\n        typeof provider.register === 'function') {\r\n      name = provider.name.substr(5);\r\n      // Invert priority and prefer user config over local context for these.\r\n      if (config && config[name]) {\r\n        provider.register(config[name]);\r\n      } else if (site_cfg[name]) {\r\n        provider.register(site_cfg[name]);\r\n      } else {\r\n        provider.register(undefined);\r\n      }\r\n    }\r\n  });\r\n  \r\n  Bundle.register(context.providers, api);\r\n  resource.register(context.resolvers || []);\r\n\r\n  return new PromiseCompat(function (resolve, reject) {\r\n    if (site_cfg.moduleContext) {\r\n      Port = site_cfg.portType;\r\n      link = new Port('Outbound', resource);\r\n      manager.setup(link);\r\n\r\n      // Delay debug messages until delegation to the parent context is setup.\r\n      manager.once('delegate', manager.setup.bind(manager, debug));\r\n    } else {\r\n      manager.setup(debug);\r\n      policy = new Policy(manager, resource, site_cfg);\r\n\r\n      // Define how to load a root module.\r\n      var fallbackLogger, getIface;\r\n      fallbackLogger = function (message) {\r\n        api.getCore('core.console', {\r\n          config: site_cfg\r\n        }).then(function (provider) {\r\n          var logger = new provider.inst();\r\n          debug.setLogger(logger);\r\n          if (message) {\r\n            debug.error(message);\r\n          }\r\n        });\r\n      };\r\n      getIface = function (manifest) {\r\n        return resource.get(site_cfg.location, manifest).then(\r\n          function (canonical_manifest) {\r\n            return policy.get([], canonical_manifest);\r\n          }\r\n        ).then(function (instance) {\r\n          manager.setup(instance);\r\n          return binder.bindDefault(instance, api, instance.manifest);\r\n        });\r\n      };\r\n\r\n      // Load appropriate Logger.\r\n      if (site_cfg.logger) {\r\n        getIface(site_cfg.logger).then(function (iface) {\r\n          if (iface.external.api !== 'console') {\r\n            fallbackLogger(\"Unwilling to use logger with unknown API:\",\r\n              iface.external.api);\r\n          } else {\r\n            debug.setLogger(iface.external());\r\n          }\r\n        }, fallbackLogger);\r\n      } else {\r\n        fallbackLogger();\r\n      }\r\n\r\n      // Load root module.\r\n      getIface(site_cfg.manifest).then(function (iface) {\r\n        iface.port.once('close', cleanup);\r\n        return iface.external;\r\n      }, function (err) {\r\n        debug.error('Failed to retrieve manifest: ' + err);\r\n        throw err;\r\n      }).then(resolve, reject);\r\n    }\r\n\r\n    hub.emit('config', site_cfg);\r\n  });\r\n};\r\n\r\nmodule.exports = setup;\r\n","/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('./util');\r\n\r\n/**\r\n * Defines fdom.Hub, the core message hub between freedom modules.\r\n * Incomming messages from apps are sent to hub.onMessage()\r\n * @class Hub\r\n * @param {Debug} debug Logger for debugging.\r\n * @constructor\r\n */\r\nvar Hub = function (debug) {\r\n  this.debug = debug;\r\n  this.config = {};\r\n  this.apps = {};\r\n  this.routes = {};\r\n\r\n  util.handleEvents(this);\r\n  this.on('config', function (config) {\r\n    util.mixin(this.config, config);\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * Handle an incoming message from a freedom app.\r\n * @method onMessage\r\n * @param {String} source The identifiying source of the message.\r\n * @param {Object} message The sent message.\r\n */\r\nHub.prototype.onMessage = function (source, message) {\r\n  var destination = this.routes[source], type;\r\n  if (!destination || !destination.app) {\r\n    this.debug.warn(\"Message dropped from unregistered source \" + source);\r\n    return;\r\n  }\r\n\r\n  if (!this.apps[destination.app]) {\r\n    this.debug.warn(\"Message dropped to destination \" + destination.app);\r\n    return;\r\n  }\r\n\r\n  // The firehose tracing all internal freedom.js messages.\r\n  if (!message.quiet && !destination.quiet && this.config && this.config.trace) {\r\n    type = message.type;\r\n    if (message.type === 'message' && message.message &&\r\n        message.message.action === 'method') {\r\n      type = 'method.' + message.message.type;\r\n    } else if (message.type === 'method' && message.message &&\r\n        message.message.type === 'method') {\r\n      type = 'return.' + message.message.name;\r\n    } else if (message.type === 'message' && message.message &&\r\n        message.message.type === 'event') {\r\n      type = 'event.' + message.message.name;\r\n    }\r\n    this.debug.debug(this.apps[destination.source].toString() +\r\n        \" -\" + type + \"-> \" +\r\n        this.apps[destination.app].toString() + \".\" + destination.flow);\r\n  }\r\n\r\n  this.apps[destination.app].onMessage(destination.flow, message);\r\n};\r\n\r\n/**\r\n * Get the local destination port of a flow.\r\n * @method getDestination\r\n * @param {String} source The flow to retrieve.\r\n * @return {Port} The destination port.\r\n */\r\nHub.prototype.getDestination = function (source) {\r\n  var destination = this.routes[source];\r\n  if (!destination) {\r\n    return null;\r\n  }\r\n  return this.apps[destination.app];\r\n};\r\n\r\n/**\r\n * Get the local source port of a flow.\r\n * @method getSource\r\n * @param {Port} source The flow identifier to retrieve.\r\n * @return {Port} The source port.\r\n */\r\nHub.prototype.getSource = function (source) {\r\n  if (!source) {\r\n    return false;\r\n  }\r\n  if (!this.apps[source.id]) {\r\n    this.debug.warn(\"No registered source '\" + source.id + \"'\");\r\n    return false;\r\n  }\r\n  return this.apps[source.id];\r\n};\r\n\r\n/**\r\n * Register a destination for messages with this hub.\r\n * @method register\r\n * @param {Port} app The Port to register.\r\n * @param {Boolean} [force] Whether to override an existing port.\r\n * @return {Boolean} Whether the app was registered.\r\n */\r\nHub.prototype.register = function (app, force) {\r\n  if (!this.apps[app.id] || force) {\r\n    this.apps[app.id] = app;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Deregister a destination for messages with the hub.\r\n * Note: does not remove associated routes. As such, deregistering will\r\n * prevent the installation of new routes, but will not distrupt existing\r\n * hub routes.\r\n * @method deregister\r\n * @param {Port} app The Port to deregister\r\n * @return {Boolean} Whether the app was deregistered.\r\n */\r\nHub.prototype.deregister = function (app) {\r\n  if (!this.apps[app.id]) {\r\n    return false;\r\n  }\r\n  delete this.apps[app.id];\r\n  return true;\r\n};\r\n\r\n/**\r\n * Install a new route in the hub.\r\n * @method install\r\n * @param {Port} source The source of the route.\r\n * @param {Port} destination The destination of the route.\r\n * @param {String} flow The flow where the destination will receive messages.\r\n * @param {Boolean} quiet Whether messages on this route should be suppressed.\r\n * @return {String} A routing source identifier for sending messages.\r\n */\r\nHub.prototype.install = function (source, destination, flow, quiet) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n  if (!destination) {\r\n    this.debug.warn(\"Unwilling to generate blackhole flow from \" + source.id);\r\n    return;\r\n  }\r\n\r\n  var route = this.generateRoute();\r\n  this.routes[route] = {\r\n    app: destination,\r\n    flow: flow,\r\n    source: source.id,\r\n    quiet: quiet\r\n  };\r\n  if (typeof source.on === 'function') {\r\n    source.on(route, this.onMessage.bind(this, route));\r\n  }\r\n\r\n  return route;\r\n};\r\n\r\n/**\r\n * Uninstall a hub route.\r\n * @method uninstall\r\n * @param {Port} source The source of the route.\r\n * @param {String} flow The route to uninstall.\r\n * @return {Boolean} Whether the route was able to be uninstalled.\r\n */\r\nHub.prototype.uninstall = function (source, flow) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n\r\n  var route = this.routes[flow];\r\n  if (!route) {\r\n    return false;\r\n  } else if (route.source !== source.id) {\r\n    this.debug.warn(\"Flow \" + flow + \" does not belong to port \" + source.id);\r\n    return false;\r\n  }\r\n\r\n  delete this.routes[flow];\r\n  if (typeof source.off === 'function') {\r\n    source.off(route);\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Remove all listeners and notify all connected destinations of their removal.\r\n * @method teardown\r\n */\r\nHub.prototype.teardown = function () {\r\n  util.eachProp(this.apps, function (source) {\r\n    if (typeof source.off === 'function') {\r\n      source.off();\r\n    }\r\n  });\r\n  this.apps = {};\r\n  this.routes = {};\r\n};\r\n\r\n/**\r\n * Generate a unique routing identifier.\r\n * @method generateRoute\r\n * @return {String} a routing source identifier.\r\n * @private\r\n */\r\nHub.prototype.generateRoute = function () {\r\n  return util.getId();\r\n};\r\n\r\nmodule.exports = Hub;\r\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A link connects two freedom hubs. This is an abstract class\n * providing common functionality of translating control channels,\n * and integrating config information.\n * @class Link\n * @implements Port\n * @constructor\n */\nvar Link = function (name, resource) {\n  this.id = 'Link' + Math.random();\n  this.name = name;\n  this.resource = resource;\n  this.config = {};\n  this.src = null;\n\n  util.handleEvents(this);\n  util.mixin(this, Link.prototype);\n};\n\n/**\n * Receive messages from the hub to this port.\n * Manages startup, and passes others to 'deliverMessage' implemented\n * in derived classes.\n * @method onMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nLink.prototype.onMessage = function (flow, message) {\n  if (flow === 'control' && !this.controlChannel) {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.start();\n    }\n  } else {\n    this.deliverMessage(flow, message);\n  }\n};\n\n/**\n * Register a handler to alert of errors on this port.\n * @method addErrorHandler\n * @param {Function} handler Method to call with errors.\n */\nLink.prototype.addErrorHandler = function (handler) {\n  this.onError = handler;\n};\n\n/**\n * Report an error on this link.\n * @method onerror\n * @param {Error} err The error that occurred.\n */\nLink.prototype.onError = function (err) {\n  //Filled in by addErrorHandler\n};\n\n/**\n * Emit messages to the the hub, mapping control channels.\n * @method emitMessage\n * @param {String} flow the flow to emit the message on.\n * @param {Object} messgae The message to emit.\n */\nLink.prototype.emitMessage = function (flow, message) {\n  if (flow === 'control' && this.controlChannel) {\n    flow = this.controlChannel;\n  }\n  this.emit(flow, message);\n};\n\nmodule.exports = Link;\n","/*globals Worker */\n/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar Link = require('../link');\n\n/**\n * A port providing message transport between two freedom contexts via Worker.\n * @class Worker\n * @extends Link\n * @uses handleEvents\n * @constructor\n */\nvar WorkerLink = function(id, resource) {\n  Link.call(this, id, resource);\n  if (id) {\n    this.id = id;\n  }\n};\n\n/**\n * Start this port by listening or creating a worker.\n * @method start\n * @private\n */\nWorkerLink.prototype.start = function() {\n  if (this.config.moduleContext) {\n    this.setupListener();\n  } else {\n    this.setupWorker();\n  }\n};\n\n/**\n * Stop this port by destroying the worker.\n * @method stop\n * @private\n */\nWorkerLink.prototype.stop = function() {\n  // Function is determined by setupListener or setupFrame as appropriate.\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nWorkerLink.prototype.toString = function() {\n  return \"[Worker \" + this.id + \"]\";\n};\n\n/**\n * Set up a global listener to handle incoming messages to this\n * freedom.js context.\n * @method setupListener\n */\nWorkerLink.prototype.setupListener = function() {\n  var onMsg = function(msg) {\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this);\n  this.obj = this.config.global;\n  this.obj.addEventListener('message', onMsg, true);\n  this.stop = function() {\n    this.obj.removeEventListener('message', onMsg, true);\n    delete this.obj;\n  };\n  this.emit('started');\n  this.obj.postMessage(\"Ready For Messages\");\n};\n\n/**\n * Set up a worker with an isolated freedom.js context inside.\n * @method setupWorker\n */\nWorkerLink.prototype.setupWorker = function() {\n  var worker,\n    blob,\n    self = this;\n  worker = new Worker(this.config.source + '#' + this.id);\n\n  worker.addEventListener('error', function(err) {\n    this.onError(err);\n  }.bind(this), true);\n  worker.addEventListener('message', function(worker, msg) {\n    if (!this.obj) {\n      this.obj = worker;\n      this.emit('started');\n      return;\n    }\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this, worker), true);\n  this.stop = function() {\n    worker.terminate();\n    if (this.obj) {\n      delete this.obj;\n    }\n  };\n};\n\n/**\n * Receive messages from the hub to this port.\n * Received messages will be emitted from the other side of the port.\n * @method deliverMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nWorkerLink.prototype.deliverMessage = function(flow, message) {\n  if (flow === 'control' && message.type === 'close' &&\n      message.channel === 'control') {\n    this.stop();\n  } else {\n    if (this.obj) {\n      this.obj.postMessage({\n        flow: flow,\n        message: message\n      });\n    } else {\n      this.once('started', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\nmodule.exports = WorkerLink;\n\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar ModuleInternal = require('./moduleinternal');\n\n/**\n * A freedom port which manages the control plane of of changing hub routes.\n * @class Manager\n * @implements Port\n * @param {Hub} hub The routing hub to control.\n * @param {Resource} resource The resource manager for the runtime.\n * @param {Api} api The API manager for the runtime.\n * @constructor\n */\nvar Manager = function (hub, resource, api) {\n  this.id = 'control';\n  this.config = {};\n  this.controlFlows = {};\n  this.dataFlows = {};\n  this.dataFlows[this.id] = [];\n  this.reverseFlowMap = {};\n\n  this.debug = hub.debug;\n  this.hub = hub;\n  this.resource = resource;\n  this.api = api;\n\n  this.delegate = null;\n  this.toDelegate = {};\n\n  this.hub.on('config', function (config) {\n    util.mixin(this.config, config);\n    this.emit('config');\n  }.bind(this));\n\n  util.handleEvents(this);\n  this.hub.register(this);\n};\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nManager.prototype.toString = function () {\n  return \"[Local Controller]\";\n};\n\n/**\n * Process messages sent to this port.\n * The manager, or 'control' destination handles several types of messages,\n * identified by the request property.  The actions are:\n * 1. debug. Prints the message to the console.\n * 2. link. Creates a link between the source and a provided destination port.\n * 3. environment. Instantiate a module environment defined in ModuleInternal.\n * 4. delegate. Routes a defined set of control messages to another location.\n * 5. resource. Registers the source as a resource resolver.\n * 6. core. Generates a core provider for the requester.\n * 7. close. Tears down routes involing the requesting port.\n * 8. unlink. Tears down a route from the requesting port.\n * @method onMessage\n * @param {String} flow The source identifier of the message.\n * @param {Object} message The received message.\n */\nManager.prototype.onMessage = function (flow, message) {\n  var reverseFlow = this.controlFlows[flow], origin;\n  if (!reverseFlow) {\n    this.debug.warn(\"Unknown message source: \" + flow);\n    return;\n  }\n  origin = this.hub.getDestination(reverseFlow);\n\n  if (this.delegate && reverseFlow !== this.delegate &&\n      this.toDelegate[flow]) {\n    // Ship off to the delegee\n    this.emit(this.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      quiet: true,\n      flow: flow,\n      message: message\n    });\n    return;\n  }\n\n  if (message.request === 'debug') {\n    this.debug.print(message);\n    return;\n  }\n\n  if (message.request === 'link') {\n    this.createLink(origin, message.name, message.to, message.overrideDest);\n  } else if (message.request === 'environment') {\n    this.createLink(origin, message.name, new ModuleInternal(this));\n  } else if (message.request === 'delegate') {\n    // Initate Delegation.\n    if (this.delegate === null) {\n      this.delegate = reverseFlow;\n    }\n    this.toDelegate[message.flow] = true;\n    this.emit('delegate');\n  } else if (message.request === 'resource') {\n    this.resource.addResolver(message.args[0]);\n    this.resource.addRetriever(message.service, message.args[1]);\n  } else if (message.request === 'core') {\n    if (this.core && reverseFlow === this.delegate) {\n      (new this.core()).onMessage(origin, message.message);\n      return;\n    }\n    this.getCore(function (to, core) {\n      this.hub.onMessage(to, {\n        type: 'core',\n        core: core\n      });\n    }.bind(this, reverseFlow));\n  } else if (message.request === 'close') {\n    this.destroy(origin);\n  } else if (message.request === 'unlink') {\n    this.removeLink(origin, message.to);\n  } else {\n    this.debug.warn(\"Unknown control request: \" + message.request);\n    this.debug.log(JSON.stringify(message));\n    return;\n  }\n};\n\n/**\n * Get the port messages will be routed to given its id.\n * @method getPort\n * @param {String} portId The ID of the port.\n * @returns {fdom.Port} The port with that ID.\n */\nManager.prototype.getPort = function (portId) {\n  return this.hub.getDestination(this.controlFlows[portId]);\n};\n\n/**\n * Set up a port with the hub.\n * @method setup\n * @param {Port} port The port to register.\n */\nManager.prototype.setup = function (port) {\n  if (!port.id) {\n    this.debug.warn(\"Refusing to setup unidentified port \");\n    return false;\n  }\n\n  if (this.controlFlows[port.id]) {\n    this.debug.warn(\"Refusing to re-initialize port \" + port.id);\n    return false;\n  }\n\n  if (!this.config.global) {\n    this.once('config', this.setup.bind(this, port));\n    return;\n  }\n\n  this.hub.register(port);\n  var flow = this.hub.install(this, port.id, \"control\"),\n    reverse = this.hub.install(port, this.id, port.id);\n  this.controlFlows[port.id] = flow;\n  this.dataFlows[port.id] = [reverse];\n  this.reverseFlowMap[flow] = reverse;\n  this.reverseFlowMap[reverse] = flow;\n\n  if (port.lineage) {\n    this.emit('moduleAdd', {id: port.id, lineage: port.lineage});\n  }\n\n  this.hub.onMessage(flow, {\n    type: 'setup',\n    channel: reverse,\n    config: this.config\n  });\n\n  return true;\n};\n\n/**\n * Tear down a port on the hub, or the full local hub.\n * @method destroy\n * @apram {Port?} port The port to unregister.\n */\nManager.prototype.destroy = function (port) {\n  if (!port) {\n    // Tear down everything!\n    util.eachProp(this.controlFlows, function (flow) {\n      this.hub.onMessage(flow, {\n        type: 'close'\n      });\n    }.bind(this));\n    this.hub.teardown();\n    return;\n  }\n\n  if (!port.id) {\n    this.debug.warn(\"Unable to tear down unidentified port\");\n    return false;\n  }\n\n  if (port.lineage) {\n    this.emit('moduleRemove', {id: port.id, lineage: port.lineage});\n  }\n\n  // Remove the port.\n  delete this.controlFlows[port.id];\n\n  // Remove associated links.\n  var i;\n  for (i = this.dataFlows[port.id].length - 1; i >= 0; i -= 1) {\n    this.removeLink(port, this.dataFlows[port.id][i]);\n  }\n\n  // Remove the port.\n  delete this.dataFlows[port.id];\n  this.hub.deregister(port);\n};\n\n/**\n * Create a link between two ports.  Links are created in both directions,\n * and a message with those capabilities is sent to the source port.\n * @method createLink\n * @param {Port} port The source port.\n * @param {String} name The flow for messages from destination to port.\n * @param {Port} destination The destination port.\n * @param {String} [destName] The flow name for messages to the destination.\n * @param {Boolean} [toDest] Tell the destination about the link.\n */\nManager.prototype.createLink = function (port, name, destination, destName,\n                                         toDest) {\n  if (!this.config.global) {\n    this.once('config',\n      this.createLink.bind(this, port, name, destination, destName));\n    return;\n  }\n\n  if (!this.controlFlows[port.id]) {\n    this.debug.warn('Unwilling to link from non-registered source.');\n    return;\n  }\n\n  if (!this.controlFlows[destination.id]) {\n    if (this.setup(destination) === false) {\n      this.debug.warn('Could not find or setup destination.');\n      return;\n    }\n  }\n  var quiet = destination.quiet || false,\n    outgoingName = destName || 'default',\n    outgoing = this.hub.install(port, destination.id, outgoingName, quiet),\n    reverse;\n\n  // Recover the port so that listeners are installed.\n  destination = this.hub.getDestination(outgoing);\n  reverse = this.hub.install(destination, port.id, name, quiet);\n\n  this.reverseFlowMap[outgoing] = reverse;\n  this.dataFlows[port.id].push(outgoing);\n  this.reverseFlowMap[reverse] = outgoing;\n  this.dataFlows[destination.id].push(reverse);\n\n  if (toDest) {\n    this.hub.onMessage(this.controlFlows[destination.id], {\n      type: 'createLink',\n      name: outgoingName,\n      channel: reverse,\n      reverse: outgoing\n    });\n  } else {\n    this.hub.onMessage(this.controlFlows[port.id], {\n      name: name,\n      type: 'createLink',\n      channel: outgoing,\n      reverse: reverse\n    });\n  }\n};\n\n/**\n * Remove a link between to ports. The reverse link will also be removed.\n * @method removeLink\n * @param {Port} port The source port.\n * @param {String} name The flow to be removed.\n */\nManager.prototype.removeLink = function (port, name) {\n  var reverse = this.hub.getDestination(name),\n    rflow = this.reverseFlowMap[name],\n    i;\n\n  if (!reverse || !rflow) {\n    this.debug.warn(\"Could not find metadata to remove flow: \" + name);\n    return;\n  }\n\n  if (this.hub.getDestination(rflow).id !== port.id) {\n    this.debug.warn(\"Source port does not own flow \" + name);\n    return;\n  }\n\n  // Notify ports that a channel is closing.\n  i = this.controlFlows[port.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: name\n    });\n  }\n  i = this.controlFlows[reverse.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: rflow\n    });\n  }\n\n  // Uninstall the channel.\n  this.hub.uninstall(port, name);\n  this.hub.uninstall(reverse, rflow);\n\n  delete this.reverseFlowMap[name];\n  delete this.reverseFlowMap[rflow];\n  this.forgetFlow(reverse.id, rflow);\n  this.forgetFlow(port.id, name);\n};\n\n/**\n * Forget the flow from id with a given name.\n * @method forgetFlow\n * @private\n * @param {String} id The port ID of the source.\n * @param {String} name The flow name.\n */\nManager.prototype.forgetFlow = function (id, name) {\n  var i;\n  if (this.dataFlows[id]) {\n    for (i = 0; i < this.dataFlows[id].length; i += 1) {\n      if (this.dataFlows[id][i] === name) {\n        this.dataFlows[id].splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Get the core freedom.js API active on the current hub.\n * @method getCore\n * @private\n * @param {Function} cb Callback to fire with the core object.\n */\nManager.prototype.getCore = function (cb) {\n  if (this.core) {\n    cb(this.core);\n  } else {\n    this.api.getCore('core', this).then(function (core) {\n      this.core = core.inst;\n      cb(this.core);\n    }.bind(this), function () {\n      cb(undefined);\n    });\n  }\n};\n\nmodule.exports = Manager;\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar Provider = require('./provider');\n\n/**\n * The external Port face of a module on a hub.\n * @class Module\n * @extends Port\n * @param {String} manifestURL The manifest this module loads.\n * @param {String[]} creator The lineage of creation for this module.\n * @param {Policy} Policy The policy loader for dependencies.\n * @constructor\n */\nvar Module = function (manifestURL, manifest, creator, policy) {\n  this.api = policy.api;\n  this.policy = policy;\n  this.resource = policy.resource;\n  this.debug = policy.debug;\n\n  this.config = {};\n\n  this.id = manifestURL + Math.random();\n  this.manifestId = manifestURL;\n  this.manifest = manifest;\n  this.lineage = [this.manifestId].concat(creator);\n\n  this.quiet = this.manifest.quiet || false;\n\n  this.externalPortMap = {};\n  this.internalPortMap = {};\n  this.dependantChannels = [];\n  this.started = false;\n\n  util.handleEvents(this);\n};\n\n/**\n * Receive a message for the Module.\n * @method onMessage\n * @param {String} flow The origin of the message.\n * @param {Object} message The message received.\n */\nModule.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (message.type === 'setup') {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.emit(this.controlChannel, {\n        type: 'Core Provider',\n        request: 'core'\n      });\n      this.start();\n      return;\n    } else if (message.type === 'createLink' && message.channel) {\n      this.debug.debug(this + 'got create link for ' + message.name);\n      this.externalPortMap[message.name] = message.channel;\n      if (this.internalPortMap[message.name] === undefined) {\n        this.internalPortMap[message.name] = false;\n      }\n      var msg = {\n        type: 'default channel announcement',\n        channel: message.reverse\n      };\n      if (this.manifest.dependencies &&\n          this.manifest.dependencies[message.name]) {\n        msg.api = this.manifest.dependencies[message.name].api;\n      }\n      this.emit(message.channel, msg);\n      return;\n    } else if (message.core) {\n      this.core = new message.core();\n      this.emit('core', message.core);\n      return;\n    } else if (message.type === 'close') {\n      // Closing channel.\n      if (!message.channel || message.channel === 'control') {\n        this.stop();\n      }\n      this.deregisterFlow(message.channel, false);\n    } else {\n      this.port.onMessage(flow, message);\n    }\n  } else {\n    if ((this.externalPortMap[flow] === false ||\n        !this.externalPortMap[flow]) && message.channel) {\n      this.debug.debug(this + 'handling channel announcement for ' + flow);\n      this.externalPortMap[flow] = message.channel;\n      if (this.internalPortMap[flow] === undefined) {\n        this.internalPortMap[flow] = false;\n\n        // New incoming connection attempts should get routed to modInternal.\n        if (this.manifest.provides && this.modInternal) {\n          this.port.onMessage(this.modInternal, {\n            type: 'Connection',\n            channel: flow,\n            api: message.api\n          });\n        } else if (this.manifest.provides) {\n          this.once('modInternal', function (flow, api) {\n            this.port.onMessage(this.modInternal, {\n              type: 'Connection',\n              channel: flow,\n              api: api\n            });\n          }.bind(this, flow, message.api));\n        // First connection retains legacy mapping as 'default'.\n        } else if (!this.externalPortMap['default'] && message.channel) {\n          this.externalPortMap['default'] = message.channel;\n          this.once('internalChannelReady', function (flow) {\n            this.internalPortMap[flow] = this.internalPortMap['default'];\n          }.bind(this, flow));\n        }\n      }\n      return;\n    } else if (!this.started) {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    } else {\n      if (this.internalPortMap[flow] === false) {\n        console.warn('waiting on internal channel for msg');\n        this.once('internalChannelReady', this.onMessage.bind(this, flow, message));\n      } else if (!this.internalPortMap[flow]) {\n        this.debug.error('Unexpected message from ' + flow);\n        return;\n      } else {\n        this.port.onMessage(this.internalPortMap[flow], message);\n      }\n    }\n  }\n};\n\n/**\n * Clean up after a flow which is no longer used / needed.\n * @method deregisterFLow\n * @param {String} flow The flow to remove mappings for.\n * @param {Boolean} internal If the flow name is the internal identifier.\n * @returns {Boolean} Whether the flow was successfully deregistered.\n * @private\n */\nModule.prototype.deregisterFlow = function (flow, internal) {\n  var key,\n    map = internal ? this.internalPortMap : this.externalPortMap;\n  // TODO: this is inefficient, but seems less confusing than a 3rd\n  // reverse lookup map.\n  for (key in map) {\n    if (map[key] === flow) {\n      if (internal) {\n        this.emit(this.controlChannel, {\n          type: 'Channel Teardown',\n          request: 'unlink',\n          to: this.externalPortMap[key]\n        });\n      } else if (this.port) {\n        this.port.onMessage('control', {\n          type: 'close',\n          channel: this.internalPortMap[key]\n        });\n      }\n      delete this.externalPortMap[key];\n      delete this.internalPortMap[key];\n\n      // When there are still non-dependant channels, keep running\n      for (key in this.externalPortMap) {\n        if (this.externalPortMap.hasOwnProperty(key)) {\n          if (this.dependantChannels.indexOf(key) < 0) {\n            return true;\n          }\n        }\n      }\n      // Otherwise shut down the module.\n      this.stop();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Attempt to start the module once the remote freedom context\n * exists.\n * @method start\n * @private\n */\nModule.prototype.start = function () {\n  var Port;\n  if (this.started || this.port) {\n    return false;\n  }\n  if (this.controlChannel) {\n    this.loadLinks();\n    Port = this.config.portType;\n    this.port = new Port(this.manifest.name, this.resource);\n    // Listen to all port messages.\n    this.port.on(this.emitMessage.bind(this));\n    this.port.addErrorHandler(function (err) {\n      this.debug.warn('Module Failed', err);\n      this.emit(this.controlChannel, {\n        request: 'close'\n      });\n    }.bind(this));\n    // Tell the local port to ask us for help.\n    this.port.onMessage('control', {\n      channel: 'control',\n      config: this.config\n    });\n\n    // Tell the remote location to delegate debugging.\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'debug'\n    });\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'core'\n    });\n\n    // Tell the container to instantiate the counterpart to this external view.\n    this.port.onMessage('control', {\n      type: 'Environment Configuration',\n      request: 'environment',\n      name: 'ModInternal'\n    });\n  }\n};\n\n/**\n * Stop the module when it is no longer needed, and tear-down state.\n * @method stop\n * @private\n */\nModule.prototype.stop = function () {\n  if (!this.started) {\n    return;\n  }\n  this.emit('close');\n  if (this.port) {\n    this.port.off();\n    this.port.onMessage('control', {\n      type: 'close',\n      channel: 'control'\n    });\n    this.port.stop();\n    delete this.port;\n  }\n  delete this.policy;\n  this.started = false;\n};\n\n/**\n * Textual Description of the Port\n * @method toString\n * @return {String} The description of this Port.\n */\nModule.prototype.toString = function () {\n  return \"[Module \" + this.manifest.name + \"]\";\n};\n\n/**\n * Intercept messages as they arrive from the module,\n * mapping them between internal and external flow names.\n * @method emitMessage\n * @param {String} name The destination the module wants to send to.\n * @param {Object} message The message to send.\n * @private\n */\nModule.prototype.emitMessage = function (name, message) {\n  if (this.internalPortMap[name] === false && message.channel) {\n    this.internalPortMap[name] = message.channel;\n    this.emit('internalChannelReady');\n    return;\n  }\n  // Terminate debug redirection requested in start().\n  if (name === 'control') {\n    if (message.flow === 'debug' && message.message) {\n      this.debug.format(message.message.severity,\n          message.message.source || this.toString(),\n          message.message.msg);\n    } else if (message.flow === 'core' && message.message) {\n      if (!this.core) {\n        this.once('core', this.emitMessage.bind(this, name, message));\n        return;\n      }\n      if (message.message.type === 'register' ||\n          message.message.type === 'require') {\n        message.message.reply = this.port.onMessage.bind(this.port, 'control');\n        this.externalPortMap[message.message.id] = false;\n      }\n      this.core.onMessage(this, message.message);\n    } else if (message.name === 'ModInternal' && !this.modInternal) {\n      this.modInternal = message.channel;\n      this.port.onMessage(this.modInternal, {\n        type: 'Initialization',\n        id: this.manifestId,\n        appId: this.id,\n        manifest: this.manifest,\n        lineage: this.lineage,\n        channel: message.reverse\n      });\n      this.emit('modInternal');\n    } else if (message.type === 'createLink') {\n      this.internalPortMap[message.name] = message.channel;\n      this.port.onMessage(message.channel, {\n        type: 'channel announcement',\n        channel: message.reverse\n      });\n      this.emit('internalChannelReady');\n    } else if (message.type === 'close') {\n      this.deregisterFlow(message.channel, true);\n    }\n  } else if (name === 'ModInternal' && message.type === 'ready' && !this.started) {\n    this.started = true;\n    this.emit('start');\n  } else if (name === 'ModInternal' && message.type === 'resolve') {\n    this.resource.get(this.manifestId, message.data).then(function (id, data) {\n      this.port.onMessage(this.modInternal, {\n        type: 'resolve.response',\n        id: id,\n        data: data\n      });\n    }.bind(this, message.id), function () {\n      this.debug.warn('Error Resolving URL for Module.');\n    }.bind(this));\n  } else {\n    this.emit(this.externalPortMap[name], message);\n  }\n  return false;\n};\n\n/**\n * Create a dynamic dependency on another module.\n * @method require\n * @param {String} name The name of the dependency.\n * @param {String} manifest The URL of the dependency to add.\n */\nModule.prototype.require = function (name, manifest) {\n  this.dependantChannels.push(name);\n  this.addDependency(manifest, name).catch(function (err) {\n    this.port.onMessage(this.modInternal, {\n      type: 'require.failure',\n      id: name,\n      error: err.message\n    });\n  }.bind(this));\n};\n\n/**\n * Add a dependency to the module's dependency tree\n * @method addDependency\n * @param {String} url The manifest URL of the dependency\n * @param {String} name The exposed name of the module.\n * @returns {Module} The created dependent module.\n * @private\n */\nModule.prototype.addDependency = function (url, name) {\n  return this.resource.get(this.manifestId, url)\n    .then(function (url) {\n      return this.policy.get(this.lineage, url);\n    }.bind(this))\n    .then(function (dep) {\n      this.updateEnv(name, dep.manifest);\n      this.emit(this.controlChannel, {\n        type: 'Link to ' + name,\n        request: 'link',\n        name: name,\n        overrideDest: name + '.' + this.id,\n        to: dep\n      });\n      return dep;\n    }.bind(this))\n    .catch(function (err) {\n      this.debug.warn(this.toString() + ' failed to load dep: ', name, err);\n      throw err;\n    }.bind(this));\n};\n\n/**\n * Request the external routes used by this module.\n * @method loadLinks\n * @private\n */\nModule.prototype.loadLinks = function () {\n  var i, channels = ['default'], name, dep;\n\n  if (this.manifest.permissions) {\n    for (i = 0; i < this.manifest.permissions.length; i += 1) {\n      name = this.manifest.permissions[i];\n      if (channels.indexOf(name) < 0 && name.indexOf('core.') === 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n        dep = new Provider(this.api.get(name).definition, this.debug);\n        this.api.provideCore(name, dep, this);\n\n        this.emit(this.controlChannel, {\n          type: 'Core Link to ' + name,\n          request: 'link',\n          name: name,\n          to: dep\n        });\n      }\n    }\n  }\n  if (this.manifest.dependencies) {\n    util.eachProp(this.manifest.dependencies, function (desc, name) {\n      if (channels.indexOf(name) < 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n      }\n\n      this.addDependency(desc.url, name);\n    }.bind(this));\n  }\n  // Note that messages can be synchronous, so some ports may already be bound.\n  for (i = 0; i < channels.length; i += 1) {\n    this.externalPortMap[channels[i]] = this.externalPortMap[channels[i]] || false;\n    this.internalPortMap[channels[i]] = false;\n  }\n};\n\n/**\n * Update the module environment with information about a dependent manifest.\n * @method updateEnv\n * @param {String} dep The dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModule.prototype.updateEnv = function (dep, manifest) {\n  if (!manifest) {\n    return;\n  }\n  if (!this.modInternal) {\n    this.once('modInternal', this.updateEnv.bind(this, dep, manifest));\n    return;\n  }\n\n  var metadata;\n\n  // Decide if/what other properties should be exported.\n  // Keep in sync with ModuleInternal.updateEnv\n  metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description,\n    api: manifest.api\n  };\n\n  this.port.onMessage(this.modInternal, {\n    type: 'manifest',\n    name: dep,\n    manifest: metadata\n  });\n};\n\nmodule.exports = Module;\n","/*jslint indent:2, node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar Provider = require('./provider');\nvar ProxyBinder = require('./proxybinder');\nvar util = require('./util');\n\n/**\n * The internal logic for module setup, which makes sure the public\n * facing exports have appropriate properties, and load user scripts.\n * @class ModuleInternal\n * @extends Port\n * @param {Port} manager The manager in this module to use for routing setup.\n * @constructor\n */\nvar ModuleInternal = function (manager) {\n  this.config = {};\n  this.manager = manager;\n  this.debug = manager.debug;\n  this.binder = new ProxyBinder(this.manager);\n  this.api = this.manager.api;\n  this.manifests = {};\n  this.providers = {};\n\n  this.id = 'ModuleInternal';\n  this.pendingPorts = 0;\n  this.requests = {};\n  this.unboundPorts = {};\n\n  util.handleEvents(this);\n};\n\n/**\n * Message handler for this port.\n * This port only handles two messages:\n * The first is its setup from the manager, which it uses for configuration.\n * The second is from the module controller (fdom.port.Module), which provides\n * the manifest info for the module.\n * @method onMessage\n * @param {String} flow The detination of the message.\n * @param {Object} message The message.\n */\nModuleInternal.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n    }\n  } else if (flow === 'default' && !this.appId) {\n    // Recover the ID of this module:\n    this.port = this.manager.hub.getDestination(message.channel);\n    this.externalChannel = message.channel;\n    this.appId = message.appId;\n    this.lineage = message.lineage;\n\n    var objects = this.mapProxies(message.manifest);\n\n    this.generateEnv(message.manifest, objects).then(function () {\n      return this.loadLinks(objects);\n    }.bind(this)).then(this.loadScripts.bind(this, message.id,\n        message.manifest.app.script)).then(null, function (err) {\n      this.debug.error('Could not set up module ' + this.appId + ': ', err);\n    }.bind(this));\n  } else if (flow === 'default' && message.type === 'resolve.response' &&\n             this.requests[message.id]) {\n    this.requests[message.id](message.data);\n    delete this.requests[message.id];\n  } else if (flow === 'default' && message.type === 'require.failure' &&\n             this.unboundPorts[message.id]) {\n    this.unboundPorts[message.id].callback(undefined, message.error);\n    delete this.unboundPorts[message.id];\n  } else if (flow === 'default' && message.type === 'manifest') {\n    this.emit('manifest', message);\n    this.updateManifest(message.name, message.manifest);\n  } else if (flow === 'default' && message.type === 'Connection') {\n    // Multiple connections can be made to the default provider.\n    if (message.api && this.providers[message.api]) {\n      this.manager.createLink(this.providers[message.api], message.channel,\n                             this.port, message.channel);\n    } else if (this.defaultPort &&\n               (message.api === this.defaultPort.api || !message.api)) {\n      this.manager.createLink(this.defaultPort, message.channel,\n                              this.port, message.channel);\n    } else {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\n/**\n * Get a textual description of this Port.\n * @method toString\n * @return {String} a description of this Port.\n */\nModuleInternal.prototype.toString = function () {\n  return \"[Environment Helper]\";\n};\n\n/**\n * Generate an externaly visisble namespace\n * @method generateEnv\n * @param {Object} manifest The manifest of the module.\n * @param {Object[]} items Other interfaces to load.\n * @returns {Promise} A promise when the external namespace is visible.\n * @private\n */\nModuleInternal.prototype.generateEnv = function (manifest, items) {\n  return this.binder.bindDefault(this.port, this.api, manifest, true).then(\n    function (binding) {\n      var i = 0;\n      binding.port.api = binding.external.api;\n      this.defaultPort = binding.port;\n      if (binding.external.api) {\n        for (i = 0; i < items.length; i += 1) {\n          if (items[i].name === binding.external.api && items[i].def.provides) {\n            items.splice(i, 1);\n            break;\n          }\n        }\n      }\n      this.config.global.freedom = binding.external;\n    }.bind(this)\n  );\n};\n\n/**\n * Register an unused channel ID for callback, and once information\n * about the channel is known, call the handler with that information.\n * @method registerId\n * @param {String} api The preferred API to use for the new channel.\n * @param {Function} callback Function to call once channel ready\n * @returns {String} The allocated channel name.\n */\nModuleInternal.prototype.registerId = function (api, callback) {\n  var id = util.getId();\n  this.unboundPorts[id] = {\n    name: api,\n    callback: callback\n  };\n  return id;\n};\n\n/**\n * Attach a proxy to the externally visible namespace.\n * @method attach\n * @param {String} name The name of the proxy.\n * @param {Boolean} provides If this proxy is a provider.\n * @param {ProxyInterface} proxy The proxy to attach.\n * @param {String} api The API the proxy implements.\n * @private.\n */\nModuleInternal.prototype.attach = function (name, provides, proxy) {\n  var exp = this.config.global.freedom;\n\n  if (provides) {\n    this.providers[name] = proxy.port;\n  }\n\n  if (!exp[name]) {\n    exp[name] = proxy.external;\n    if (this.manifests[name]) {\n      exp[name].manifest = this.manifests[name];\n    }\n  }\n\n  this.pendingPorts -= 1;\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return exp[name];\n};\n\n/**\n * Request a set of proxy interfaces, and bind them to the external\n * namespace.\n * @method loadLinks\n * @param {Object[]} items Descriptors of the proxy ports to load.\n * @private\n * @returns {Promise} Promise for when all links are loaded.\n */\n//TODO(willscott): promise should be chained, rather than going through events.\nModuleInternal.prototype.loadLinks = function (items) {\n  var i, proxy, provider, core,\n    manifestPredicate = function (name, flow, msg) {\n      return flow === 'manifest' && msg.name === name;\n    },\n    onManifest = function (item, msg) {\n      var definition = {\n        name: item.api\n      };\n      if (!msg.manifest.api || !msg.manifest.api[item.api]) {\n        definition.definition = null;\n      } else {\n        definition.definition = msg.manifest.api[item.api];\n      }\n      this.binder.getExternal(this.port, item.name, definition).then(\n        this.attach.bind(this, item.name, false)\n      );\n    }.bind(this),\n    promise = new PromiseCompat(function (resolve, reject) {\n      this.once('start', resolve);\n    }.bind(this));\n\n  for (i = 0; i < items.length; i += 1) {\n    if (items[i].api && !items[i].def) {\n      if (this.manifests[items[i].name]) {\n        onManifest(items[i], {\n          manifest: this.manifests[items[i].name]\n        });\n      } else {\n        this.once(manifestPredicate.bind({}, items[i].name),\n                  onManifest.bind(this, items[i]));\n      }\n    } else {\n      this.binder.getExternal(this.port, items[i].name, items[i].def).then(\n        this.attach.bind(this, items[i].name, items[i].def &&\n                         items[i].def.provides)\n      );\n    }\n    this.pendingPorts += 1;\n  }\n\n  // Allow resolution of files by parent.\n  this.manager.resource.addResolver(function (manifest, url, resolve) {\n    var id = util.getId();\n    this.requests[id] = resolve;\n    this.emit(this.externalChannel, {\n      type: 'resolve',\n      id: id,\n      data: url\n    });\n    return true;\n  }.bind(this));\n\n  // Attach Core.\n  this.pendingPorts += 1;\n\n  core = this.api.get('core').definition;\n  provider = new Provider(core, this.debug);\n  this.manager.getCore(function (CoreProv) {\n    new CoreProv(this.manager).setId(this.lineage, this);\n    provider.getInterface().provideAsynchronous(CoreProv);\n  }.bind(this));\n\n  this.emit(this.controlChannel, {\n    type: 'Link to core',\n    request: 'link',\n    name: 'core',\n    to: provider\n  });\n\n  this.binder.getExternal(provider, 'default', {\n    name: 'core',\n    definition: core\n  }).then(function (core) {\n    core.external.getLoggerSync = this.debug.getLoggingShim(\n        core.external().getLogger);\n    this.attach('core', false, core);\n  }.bind(this));\n\n\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return promise;\n};\n\n/**\n * Update the exported manifest of a dependency.\n * Sets it internally if not yet exported, or attaches the property if it\n * is loaded after the module has started (we don't delay start to retreive\n * the manifest of the dependency.)\n * @method updateManifest\n * @param {String} name The Dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModuleInternal.prototype.updateManifest = function (name, manifest) {\n  var exp = this.config.global.freedom;\n\n  if (exp && exp[name]) {\n    exp[name].manifest = manifest;\n  // Handle require() dependency resolution.\n  } else if (this.unboundPorts[name]) {\n    this.binder.getExternal(this.port, name,\n        this.binder.getAPI(manifest, this.api, this.unboundPorts[name].api))\n      .then(\n        this.attach.bind(this, name, false)\n      ).then(function(proxy) {\n        this.unboundPorts[name].callback(proxy);\n        delete this.unboundPorts[name];\n      }.bind(this));\n  } else {\n    this.manifests[name] = manifest;\n  }\n};\n\n/**\n * Determine which proxy ports should be exposed by this module.\n * @method mapProxies\n * @param {Object} manifest the module JSON manifest.\n * @return {Object[]} proxy descriptors defined in the manifest.\n */\nModuleInternal.prototype.mapProxies = function (manifest) {\n  var proxies = [], seen = ['core'], i, obj;\n\n  if (manifest.permissions) {\n    for (i = 0; i < manifest.permissions.length; i += 1) {\n      obj = {\n        name: manifest.permissions[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (seen.indexOf(obj.name) < 0 && obj.def) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  if (manifest.dependencies) {\n    util.eachProp(manifest.dependencies, function (desc, name) {\n      obj = {\n        name: name,\n        api: desc.api\n      };\n      if (seen.indexOf(name) < 0) {\n        if (desc.api) {\n          obj.def = this.api.get(desc.api);\n        }\n        proxies.push(obj);\n        seen.push(name);\n      }\n    }.bind(this));\n  }\n\n  if (manifest.provides) {\n    for (i = 0; i < manifest.provides.length; i += 1) {\n      obj = {\n        name: manifest.provides[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (obj.def) {\n        obj.def.provides = true;\n      } else if (manifest.api && manifest.api[obj.name]) {\n        obj.def = {\n          name: obj.name,\n          definition: manifest.api[obj.name],\n          provides: true\n        };\n      } else {\n        this.debug.warn('Module will not provide \"' + obj.name +\n          '\", since no declaration can be found.');\n        /*jslint continue:true*/\n        continue;\n      }\n      /*jslint continue:false*/\n      if (seen.indexOf(obj.name) < 0) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  return proxies;\n};\n\n/**\n * Load external scripts into this namespace.\n * @method loadScripts\n * @param {String} from The URL of this modules's manifest.\n * @param {String[]} scripts The URLs of the scripts to load.\n */\nModuleInternal.prototype.loadScripts = function (from, scripts) {\n  // TODO(salomegeo): add a test for failure.\n  var importer = function (script, resolve, reject) {\n    try {\n      this.config.global.importScripts(script);\n      resolve(true);\n    } catch (e) {\n      reject(e);\n    }\n  }.bind(this),\n    scripts_count,\n    load;\n  if (typeof scripts === 'string') {\n    scripts_count = 1;\n  } else {\n    scripts_count = scripts.length;\n  }\n\n  load = function (next) {\n    if (next === scripts_count) {\n      this.emit(this.externalChannel, {\n        type: \"ready\"\n      });\n      return;\n    }\n\n    var script;\n    if (typeof scripts === 'string') {\n      script = scripts;\n    } else {\n      script = scripts[next];\n    }\n\n    this.manager.resource.get(from, script).then(function (url) {\n      this.tryLoad(importer, url).then(function () {\n        load(next + 1);\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n\n\n  if (!this.config.global.importScripts) {\n    importer = function (url, resolve, reject) {\n      var script = this.config.global.document.createElement('script');\n      script.src = url;\n      script.addEventListener('load', resolve, true);\n      this.config.global.document.body.appendChild(script);\n    }.bind(this);\n  }\n\n  load(0);\n};\n\n/**\n * Attempt to load resolved scripts into the namespace.\n * @method tryLoad\n * @private\n * @param {Function} importer The actual import function\n * @param {String[]} urls The resoved URLs to load.\n * @returns {Promise} completion of load\n */\nModuleInternal.prototype.tryLoad = function (importer, url) {\n  return new PromiseCompat(importer.bind({}, url)).then(function (val) {\n    return val;\n  }, function (e) {\n    this.debug.warn(e.stack);\n    this.debug.error(\"Error loading \" + url, e);\n    this.debug.error(\"If the stack trace is not useful, see https://\" +\n        \"github.com/freedomjs/freedom/wiki/Debugging-Script-Parse-Errors\");\n  }.bind(this));\n};\n\nmodule.exports = ModuleInternal;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\nvar Module = require('./module');\nvar util = require('./util');\n\n/**\n * The Policy registry for freedom.js.  Used to look up modules and provide\n * migration and coallesing of execution.\n * @Class Policy\n * @param {Manager} manager The manager of the active runtime.\n * @param {Resource} resource The resource loader of the active runtime.\n * @param {Object} config The local config.\n * @constructor\n */\nvar Policy = function(manager, resource, config) {\n  this.api = manager.api;\n  this.debug = manager.debug;\n  this.location = config.location;\n  this.resource = resource;\n\n  this.config = config;\n  this.runtimes = [];\n  this.policies = [];\n  this.pending = {};\n  util.handleEvents(this);\n\n  this.add(manager, config.policy);\n  this.runtimes[0].local = true;\n};\n\n/**\n * The policy a runtime is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultPolicy\n */\nPolicy.prototype.defaultPolicy = {\n  background: false, // Can this runtime run 'background' modules?\n  interactive: true // Is there a view associated with this runtime?\n  // TODO: remaining runtime policy.\n};\n\n/**\n * The constraints a code modules is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultConstraints\n */\nPolicy.prototype.defaultConstraints = {\n  isolation: \"always\", // values: always, app, never\n  placement: \"local\" // values: local, stable, redundant\n  // TODO: remaining constraints, express platform-specific dependencies.\n};\n\n/**\n * Resolve a module from its canonical URL.\n * Reponds with the promise of a port representing the module, \n * @method get\n * @param {String[]} lineage The lineage of the requesting module.\n * @param {String} id The canonical ID of the module to get.\n * @returns {Promise} A promise for the local port towards the module.\n */\nPolicy.prototype.get = function(lineage, id) {\n  \n  // Make sure that a module isn't getting located twice at the same time.\n  // This is resolved by delaying if it until we see it in a 'moduleAdd' event.\n  if (this.pending[id]) {\n    return new PromiseCompat(function (resolve, reject) {\n      this.once('placed', function(l, i) {\n        this.get(l, i).then(resolve, reject);\n      }.bind(this, lineage, id));\n    }.bind(this));\n  } else {\n    this.pending[id] = true;\n  }\n\n  return this.loadManifest(id).then(function(manifest) {\n    var constraints = this.overlay(this.defaultConstraints, manifest.constraints),\n        runtime = this.findDestination(lineage, id, constraints),\n        portId;\n    if (runtime.local) {\n      portId = this.isRunning(runtime, id, lineage,\n                             constraints.isolation !== 'never');\n      if(constraints.isolation !== 'always' && portId) {\n        this.debug.info('Reused port ' + portId);\n        delete this.pending[id];\n        this.emit('placed');\n        return runtime.manager.getPort(portId);\n      } else {\n        return new Module(id, manifest, lineage, this);\n      }\n    } else {\n      // TODO: Create a port to go to the remote runtime.\n      this.debug.error('Unexpected location selected for module placement');\n      return false;\n    }\n  }.bind(this), function(err) {\n    this.debug.error('Policy Error Resolving ' + id, err);\n    throw(err);\n  }.bind(this));\n};\n\n/**\n * Find the runtime destination for a module given its constraints and the\n * module creating it.\n * @method findDestination\n * @param {String[]} lineage The identity of the module creating this module.\n * @param {String] id The canonical url of the module\n * @param {Object} constraints Constraints for the module.\n * @returns {Object} The element of this.runtimes where the module should run.\n */\nPolicy.prototype.findDestination = function(lineage, id, constraints) {\n  var i;\n\n  // Step 1: if an instance already exists, the m\n  if (constraints.isolation !== 'always') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.isRunning(this.runtimes[i], id, lineage,\n                         constraints.isolation !== 'never')) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 2: if the module wants stability, it may need to be remote.\n  if (constraints.placement === 'local') {\n    return this.runtimes[0];\n  } else if (constraints.placement === 'stable') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.policies[i].background) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 3: if the module needs longevity / interactivity, it may want to be remote.\n  return this.runtimes[0];\n};\n\n/**\n * Determine if a known runtime is running an appropriate instance of a module.\n * @method isRunning\n * @param {Object} runtime The runtime to check.\n * @param {String} id The module to look for.\n * @param {String[]} from The identifier of the requesting module.\n * @param {Boolean} fullMatch If the module needs to be in the same app.\n * @returns {String|Boolean} The Module id if it is running, or false if not.\n */\nPolicy.prototype.isRunning = function(runtime, id, from, fullMatch) {\n  var i = 0, j = 0, okay;\n  for (i = 0; i < runtime.modules.length; i += 1) {\n    if (fullMatch && runtime.modules[i].length === from.length + 1) {\n      okay = true;\n      for (j = 0; j < from.length; j += 1) {\n        if (runtime.modules[i][j + 1].indexOf(from[j]) !== 0) {\n          okay = false;\n          break;\n        }\n      }\n      if (runtime.modules[i][0].indexOf(id) !== 0) {\n        okay = false;\n      }\n\n      if (okay) {\n        return runtime.modules[i][0];\n      }\n    } else if (!fullMatch && runtime.modules[i][0].indexOf(id) === 0) {\n      return runtime.modules[i][0];\n    }\n  }\n  return false;\n};\n\n/**\n * Get a promise of the manifest for a module ID.\n * @method loadManifest\n * @param {String} manifest The canonical ID of the manifest\n * @returns {Promise} Promise for the json contents of the manifest.\n */\nPolicy.prototype.loadManifest = function(manifest) {\n  return this.resource.getContents(manifest).then(function(data) {\n    var resp = {};\n    try {\n      return JSON.parse(data);\n    } catch(err) {\n      this.debug.error(\"Failed to load \" + manifest + \": \" + err);\n      throw new Error(\"No Manifest Available\");\n    }\n  }.bind(this));\n};\n\n/**\n * Add a runtime to keep track of in this policy.\n * @method add\n * @param {fdom.port} port The port to use for module lifetime info\n * @param {Object} policy The policy of the runtime.\n */\nPolicy.prototype.add = function(port, policy) {\n  var runtime = {\n    manager: port,\n    modules: []\n  };\n  this.runtimes.push(runtime);\n  this.policies.push(this.overlay(this.defaultPolicy, policy));\n\n  port.on('moduleAdd', function(runtime, info) {\n    var lineage = [];\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    runtime.modules.push(lineage);\n    if (this.pending[info.lineage[0]]) {\n      delete this.pending[info.lineage[0]];\n      this.emit('placed');\n    }\n  }.bind(this, runtime));\n  port.on('moduleRemove', function(runtime, info) {\n    var lineage = [], i, modFingerprint;\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    modFingerprint = lineage.toString();\n\n    for (i = 0; i < runtime.modules.length; i += 1) {\n      if (runtime.modules[i].toString() === modFingerprint) {\n        runtime.modules.splice(i, 1);\n        return;\n      }\n    }\n    this.debug.warn('Unknown module to remove: ', info.id);\n  }.bind(this, runtime));\n};\n\n/**\n * Overlay a specific policy or constraint instance on default settings.\n * TODO: consider making static.\n * @method overlay\n * @private\n * @param {Object} base The default object\n * @param {Object} overlay The superceeding object\n * @returns {Object} A new object with base parameters when not set in overlay.\n */\nPolicy.prototype.overlay = function(base, overlay) {\n  var ret = {};\n\n  util.mixin(ret, base);\n  if (overlay) {\n    util.mixin(ret, overlay, true);\n  }\n  return ret;\n};\n\nmodule.exports = Policy;\n","/*jslint indent:2, node:true, sloppy:true, browser:true */\nvar Consumer = require('./consumer');\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable provider.\n * @class Provider\n * @implements Port\n * @uses handleEvents\n * @param {Object} def The interface of the provider.\n * @param {Debug} debug The debugger to use for logging.\n * @contructor\n */\nvar Provider = function (def, debug) {\n  this.id = Consumer.nextId();\n  util.handleEvents(this);\n  this.debug = debug;\n\n  this.definition = def;\n  this.mode = Provider.mode.synchronous;\n  this.channels = {};\n  this.iface = null;\n  this.closeHandlers = {};\n  this.providerCls = null;\n\n  this.ifaces = {};\n  this.emits = {};\n};\n\n/**\n * Provider modes of operation.\n * @property mode\n * @static\n * @type number\n */\nProvider.mode = {\n  synchronous: 0,\n  asynchronous: 1,\n  promises: 2\n};\n\n/**\n * Receive external messages for the provider.\n * @method onMessage\n * @param {String} source the source identifier of the message.\n * @param {Object} message The received message.\n */\nProvider.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.channels[message.name] = message.channel;\n    this.emit(message.channel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    if (message.channel === this.controlChannel) {\n      delete this.controlChannel;\n    }\n    this.close();\n  } else {\n    if (!this.channels[source] && message.channel) {\n      this.channels[source] = message.channel;\n      this.emit('start');\n      return;\n    } else if (!this.channels[source]) {\n      this.debug.warn('Message from unconfigured source: ' + source);\n      return;\n    }\n\n    if (message.type === 'close' && message.to) {\n      this.teardown(source, message.to);\n    } else if (message.to && this.emits[source] &&\n               this.emits[source][message.to]) {\n      message.message.to = message.to;\n      this.emits[source][message.to](message.message);\n    } else if (message.to && message.message &&\n        message.message.type === 'construct') {\n      var args = Consumer.portableToMessage(\n          (this.definition.constructor && this.definition.constructor.value) ?\n              this.definition.constructor.value : [],\n          message.message,\n          this.debug\n        ),\n        instance;\n      if (!this.ifaces[source]) {\n        this.ifaces[source] = {};\n        this.emits[source] = {};\n      }\n      this.ifaces[source][message.to] = true;\n      instance = this.getProvider(source, message.to, args);\n      // don't save a reference to instance if it closed itself already.\n      if (this.ifaces[source] &&\n          this.ifaces[source][message.to]) {\n        this.ifaces[source][message.to] = instance.instance;\n        this.emits[source][message.to] = instance.onmsg;\n      }\n    } else {\n      this.debug.warn(this.toString() + ' dropping message ' +\n          JSON.stringify(message));\n    }\n  }\n};\n\n/**\n * Close / teardown the flow this provider terminates.\n * @method close\n */\nProvider.prototype.close = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Provider Closing',\n      request: 'close'\n    });\n    delete this.controlChannel;\n  }\n  this.emit('close');\n\n  // Release references.\n  delete this.iface;\n  delete this.providerCls;\n  this.ifaces = {};\n  this.emits = {};\n  this.emitChannel = null;\n};\n\n/**\n * Teardown a single instance of an object fulfilling this provider.\n * @method teardown\n * @param {String} source The consumer source of the instance.\n * @param {String} id The id of the instance to tear down.\n */\nProvider.prototype.teardown = function (source, id) {\n  // Ignore teardown of non-existant ids.\n  if (!this.ifaces[source]) {\n    return;\n  }\n\n  delete this.ifaces[source][id];\n  delete this.emits[source][id];\n  if (this.closeHandlers[source] && this.closeHandlers[source][id]) {\n    util.eachProp(this.closeHandlers[source][id], function (prop) {\n      prop();\n    });\n    delete this.closeHandlers[source][id];\n  }\n};\n\n/**\n * Get an interface to expose externally representing this port.\n * Providers are registered with the port using either\n * provideSynchronous or provideAsynchronous depending on the desired\n * return interface.\n * @method getInterface\n * @return {Object} The external interface of this Provider.\n */\nProvider.prototype.getInterface = function () {\n  if (this.iface) {\n    return this.iface;\n  } else {\n    var sanityCheck = function (provider) {\n      if (typeof provider !== \"function\") {\n        throw new Error(\"Provider \" + this.toString() +\n            \" needs to be implemented by a function.\");\n      }\n    };\n    this.iface = {\n      provideSynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.synchronous;\n      }.bind(this),\n      provideAsynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.asynchronous;\n      }.bind(this),\n      providePromises: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.promises;\n      }.bind(this)\n    };\n\n    util.eachProp(this.definition, function (prop, name) {\n      switch (prop.type) {\n      case \"constant\":\n        Object.defineProperty(this.iface, name, {\n          value: Consumer.recursiveFreezeObject(prop.value),\n          writable: false\n        });\n        break;\n      }\n    }.bind(this));\n\n    return this.iface;\n  }\n};\n\n/**\n * Create a function that can be used to get interfaces from this provider from\n * a user-visible point.\n * @method getProxyInterface\n */\nProvider.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    return p.getInterface();\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (ids, source) {\n        util.eachProp(ids, function (candidate, id) {\n          if (candidate === iface) {\n            this.teardown(source, id);\n            this.emit(this.channels[source], {\n              type: 'close',\n              to: id\n            });\n            return true;\n          }\n        }.bind(this));\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.close();\n    }\n  }.bind(this);\n\n  func.onClose = function (iface, handler) {\n    // Listen to the channel directly.\n    if (typeof iface === 'function' && handler === undefined) {\n      this.once('close', iface);\n      return;\n    }\n\n    util.eachProp(this.ifaces, function (ids, source) {\n      util.eachProp(ids, function (candidate, id) {\n        if (candidate === iface) {\n          if (!this.closeHandlers[source]) {\n            this.closeHandlers[source] = {};\n          }\n          if (!this.closeHandlers[source][id]) {\n            this.closeHandlers[source][id] = [];\n          }\n          this.closeHandlers[source][id].push(handler);\n          return true;\n        }\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n  return func;\n};\n\n/**\n * Get a new instance of the registered provider.\n * @method getProvider\n * @param {String} source The port this instance is interactign with.\n * @param {String} identifier the messagable address for this provider.\n * @param {Array} args Constructor arguments for the provider.\n * @return {Function} A function to send messages to the provider.\n */\nProvider.prototype.getProvider = function (source, identifier, args) {\n  if (!this.providerCls) {\n    this.debug.error('Cannot instantiate provider, since it is not provided');\n    return {instance: undefined, onmsg: undefined};\n  }\n\n  var events = {},\n    dispatchEvent,\n    BoundClass,\n    instance;\n\n  util.eachProp(this.definition, function (prop, name) {\n    if (prop.type === 'event') {\n      events[name] = prop;\n    }\n  });\n\n  dispatchEvent = function (src, ev, id, name, value) {\n    if (ev[name]) {\n      var streams = Consumer.messageToPortable(ev[name].value, value,\n                                                   this.debug);\n      this.emit(this.channels[src], {\n        type: 'message',\n        to: id,\n        message: {\n          name: name,\n          type: 'event',\n          text: streams.text,\n          binary: streams.binary\n        }\n      });\n    }\n  }.bind(this, source, events, identifier);\n\n  // this is all to say: new providerCls(dispatchEvent, args[0], args[1],...)\n  BoundClass = this.providerCls.bind.apply(this.providerCls,\n      [this.providerCls, dispatchEvent].concat(args || []));\n  instance = new BoundClass();\n\n  return {\n    instance: instance,\n    onmsg: function (port, src, msg) {\n      var prop, debug, args, returnPromise, ret;\n      if (msg.action === 'method') {\n        if (typeof this[msg.type] !== 'function') {\n          port.debug.warn(\"Provider does not implement \" + msg.type + \"()!\");\n          port.emit(port.channels[src], {\n            type: 'method',\n            to: msg.to,\n            message: {\n              to: msg.to,\n              type: 'method',\n              reqId: msg.reqId,\n              name: msg.type,\n              error: 'Provider does not implement ' + msg.type + '()!'\n            }\n          });\n          return;\n        }\n        prop = port.definition[msg.type];\n        debug = port.debug;\n        args = Consumer.portableToMessage(prop.value, msg, debug);\n        if (msg.reqId === null) {\n          // Reckless call.  Ignore return value.\n          ret = function(resolve, reject) {\n            if (reject) {\n              debug.error(reject);\n            }\n          };\n        } else {\n          ret = function (src, msg, prop, resolve, reject) {\n            var streams = Consumer.messageToPortable(prop.ret, resolve,\n                                                         debug);\n            this.emit(this.channels[src], {\n              type: 'method',\n              to: msg.to,\n              message: {\n                to: msg.to,\n                type: 'method',\n                reqId: msg.reqId,\n                name: msg.type,\n                text: streams.text,\n                binary: streams.binary,\n                error: reject\n              }\n            });\n          }.bind(port, src, msg, prop);\n        }\n        if (!Array.isArray(args)) {\n          args = [args];\n        }\n        if (port.mode === Provider.mode.synchronous) {\n          try {\n            ret(this[msg.type].apply(this, args));\n          } catch (e1) {\n            ret(undefined, e1.message + ' ' + e1.stack);\n          }\n        } else if (port.mode === Provider.mode.asynchronous) {\n          try {\n            this[msg.type].apply(instance, args.concat(ret));\n          } catch (e2) {\n            ret(undefined, e2.message + ' ' + e2.stack);\n          }\n        } else if (port.mode === Provider.mode.promises) {\n          try {\n            returnPromise = this[msg.type].apply(this, args);\n            if (returnPromise && returnPromise.then) {\n              returnPromise.then(ret, ret.bind({}, undefined));\n            } else {\n              ret(undefined, 'No promise returned from ' +\n                  msg.type + ': ' + returnPromise);\n            }\n          } catch (e3) {\n            ret(undefined, e3.message + ' ' + e3.stack);\n          }\n        }\n      }\n    }.bind(instance, this, source)\n  };\n};\n\n/**\n * Get a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nProvider.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Provider \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Provider]\";\n  }\n};\n\nmodule.exports = Provider;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('../util');\nvar Consumer = require('../consumer');\n\nvar ApiInterface = function(def, onMsg, emit, debug) {\n  var inflight = {},\n      events = null,\n      emitter = null,\n      reqId = 0,\n      args = arguments;\n\n  util.eachProp(def, function(prop, name) {\n    switch(prop.type) {\n    case 'method':\n      this[name] = function() {\n        // Note: inflight should be registered before message is passed\n        // in order to prepare for synchronous in-window pipes.\n        var thisReq = reqId,\n            promise = new PromiseCompat(function(resolve, reject) {\n              inflight[thisReq] = {\n                resolve:resolve,\n                reject:reject,\n                template: prop.ret\n              };\n            }),\n            streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        reqId += 1;\n        emit({\n          action: 'method',\n          type: name,\n          reqId: thisReq,\n          text: streams.text,\n          binary: streams.binary\n        });\n        return promise;\n      };\n      this[name].reckless = function () {\n        var streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        emit({\n          action: 'method',\n          type: name,\n          reqId: null,  // Marks this as a reckless call.\n          text: streams.text,\n          binary: streams.binary\n        });\n        // Return type is void.\n      };\n      break;\n    case 'event':\n      if(!events) {\n        util.handleEvents(this);\n        emitter = this.emit;\n        delete this.emit;\n        events = {};\n      }\n      events[name] = prop;\n      break;\n    case 'constant':\n      Object.defineProperty(this, name, {\n        value: Consumer.recursiveFreezeObject(prop.value),\n        writable: false\n      });\n      break;\n    }\n  }.bind(this));\n\n  onMsg(this, function(type, msg) {\n    if (type === 'close') {\n      if (this.off) {\n        this.off();\n      }\n      util.eachProp(inflight, function (obj) {\n        obj.reject('closed');\n      });\n      inflight = {};\n      return;\n    }\n    if (!msg) {\n      return;\n    }\n    if (msg.type === 'method') {\n      if (inflight[msg.reqId]) {\n        var resolver = inflight[msg.reqId],\n            template = resolver.template;\n        delete inflight[msg.reqId];\n        if (msg.error) {\n          resolver.reject(msg.error);\n        } else {\n          resolver.resolve(Consumer.portableToMessage(template, msg, debug));\n        }\n      } else {\n        debug.error('Incoming message claimed to be an RPC ' +\n                         'returning for unregistered call', msg.reqId);\n      }\n    } else if (msg.type === 'event') {\n      if (events[msg.name]) {\n        emitter(msg.name, Consumer.portableToMessage(events[msg.name].value,\n                msg, debug));\n      }\n    }\n  }.bind(this));\n\n  args = Consumer.messageToPortable(\n      (def.constructor && def.constructor.value) ? def.constructor.value : [],\n      Array.prototype.slice.call(args, 4),\n      debug);\n\n  emit({\n    type: 'construct',\n    text: args.text,\n    binary: args.binary\n  });\n};\n\nmodule.exports = ApiInterface;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar util = require('../util');\n\nvar EventInterface = function(onMsg, emit, debug) {\n  util.handleEvents(this);\n  \n  onMsg(this, function(emit, type, msg) {\n    if (type === 'close') {\n      return;\n    }\n    emit(msg.type, msg.message);\n  }.bind(this, this.emit));\n\n  this.emit = function(emitter, type, msg) {\n    emitter({type: type, message: msg}, true);\n  }.bind({}, emit);\n};\n\nmodule.exports = EventInterface;\n","/*jslint indent:2, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar EventInterface = require('./proxy/eventInterface');\nvar Consumer = require('./consumer');\nvar Provider = require('./provider');\n\n/**\n * A Proxy Binder manages the external interface, and creates one of\n * the different types of objects exposed by freedom either as a global\n * within a worker / module context, or returned by an external call to\n * create a freedom runtime.\n * @Class ProxyBinder\n * @param {Manager} manager The manager for the active runtime.\n */\nvar ProxyBinder = function (manager) {\n  'use strict';\n  this.manager = manager;\n};\n\n/**\n * Create a proxy for a freedom port, and return it once loaded.\n * @method getExternal\n * @param {Port} port The port for the proxy to communicate with.\n * @param {String} name The name of the proxy.\n * @param {Object} [definition] The definition of the API to expose.\n * @param {String} definition.name The name of the API.\n * @param {Object} definition.definition The definition of the API.\n * @param {Boolean} definition.provides Whether this is a consumer or provider.\n * @returns {Promise} A promise for the active proxy interface.\n */\nProxyBinder.prototype.getExternal = function (port, name, definition) {\n  'use strict';\n  var proxy, api;\n  return new PromiseCompat(function (resolve, reject) {\n    if (definition) {\n      api = definition.name;\n      if (definition.provides) {\n        proxy = new Provider(definition.definition, this.manager.debug);\n      } else {\n        proxy = new Consumer(ApiInterface.bind({},\n            definition.definition),\n            this.manager.debug);\n      }\n    } else {\n      proxy = new Consumer(EventInterface, this.manager.debug);\n    }\n\n    proxy.once('start', function () {\n      var iface = proxy.getProxyInterface();\n      if (api) {\n        iface.api = api;\n      }\n      resolve({\n        port: proxy,\n        external: iface\n      });\n    });\n\n    this.manager.createLink(port, name, proxy);\n  }.bind(this));\n};\n\n/**\n * Bind the default proxy for a freedom port.\n * @method bindDefault\n * @param {Port} port The port for the proxy to communicate with.\n * @param {Api} api The API loader with API definitions.\n * @param {Object} manifest The manifest of the module to expose.\n * @param {Boolean} internal Whether the interface is for inside the module.\n * @returns {Promise} A promise for a proxy interface.\n * @private\n */\nProxyBinder.prototype.bindDefault = function (port, api, manifest, internal) {\n  'use strict';\n  var metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description\n  }, def;\n\n  if (manifest['default']) {\n    def = api.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      def = {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    if (internal && manifest.provides &&\n        manifest.provides.indexOf(manifest['default']) !== false) {\n      def.provides = true;\n    } else if (internal) {\n      api.debug.warn(\"default API not provided, \" +\n                     \"are you missing a provides key in your manifest?\");\n    }\n  }\n\n  return this.getExternal(port, 'default', def).then(\n    function (metadata, info) {\n      info.external.manifest = metadata;\n      return info;\n    }.bind(this, metadata)\n  );\n};\n\n/**\n * Get the definition for a proxy given a requested API and the manifest of\n * the module.\n * @method getAPI\n * @param {Object} manifest The manifest for the proxy.\n * @param {Api} apiProvider The registry of known APIs.\n * @param {String} api The Requested API.\n * @returns {Object} definition The definition to use for calls to getExternal.\n */\nProxyBinder.prototype.getAPI = function (manifest, apiProvider, api) {\n  'use strict';\n  if (manifest.api && manifest.api[api]) {\n    return {\n      name: api,\n      definition: manifest.api[api]\n    };\n  } else if (manifest['default']) {\n    var def = apiProvider.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      return {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    return def;\n  } else {\n    return false;\n  }\n};\n\n\nmodule.exports = ProxyBinder;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('./util');\n\n/**\n * The Resource registry for FreeDOM.  Used to look up requested Resources,\n * and provide lookup and migration of resources.\n * @Class Resource\n * @param {Debug} debug The logger to use for debugging.\n * @constructor\n */\nvar Resource = function (debug) {\n  this.debug = debug;\n  this.files = {};\n  this.resolvers = [this.httpResolver, this.nullResolver];\n  this.contentRetrievers = {\n    'http': this.xhrRetriever,\n    'https': this.xhrRetriever,\n    'chrome-extension': this.xhrRetriever,\n    'resource': this.xhrRetriever,\n    'chrome': this.xhrRetriever,\n    'app': this.xhrRetriever,\n    'manifest': this.manifestRetriever\n  };\n};\n\n/**\n * Resolve a resurce URL requested from a module.\n * @method get\n * @param {String} manifest The canonical address of the module requesting.\n * @param {String} url The resource to get.\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.get = function (manifest, url) {\n  var key = JSON.stringify([manifest, url]);\n  \n  return new PromiseCompat(function (resolve, reject) {\n    if (this.files[key]) {\n      resolve(this.files[key]);\n    } else {\n      this.resolve(manifest, url).then(function (key, resolve, address) {\n        this.files[key] = address;\n        //fdom.debug.log('Resolved ' + key + ' to ' + address);\n        resolve(address);\n      }.bind(this, key, resolve), reject);\n    }\n  }.bind(this));\n};\n\n/**\n * Get the contents of a resource.\n * @method getContents\n * @param {String} url The resource to read.\n * @returns {Promise} A promise for the resource contents.\n */\nResource.prototype.getContents = function (url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var prop;\n    if (!url) {\n      this.debug.warn(\"Asked to get contents of undefined URL.\");\n      return reject();\n    }\n    for (prop in this.contentRetrievers) {\n      if (this.contentRetrievers.hasOwnProperty(prop)) {\n        if (url.indexOf(prop + \"://\") === 0) {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        } else if (url.indexOf(\"://\") === -1 && prop === \"null\") {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        }\n      }\n    }\n    reject();\n  }.bind(this));\n};\n\n/**\n * Return a promise that resolves when the first of an array of promises\n * resolves, or rejects after all promises reject. Can be thought of as\n * the missing 'Promise.any' - race is no good, since early rejections\n * preempt a subsequent resolution.\n * @private\n * @static\n * @method FirstPromise\n * @param {Promise[]} Promises to select from\n * @returns {Promise} Promise resolving with a value from arguments.\n */\nvar firstPromise = function(promises) {\n  return new PromiseCompat(function(resolve, reject) {\n    var errors = [];\n    promises.forEach(function(promise) {\n      promise.then(resolve, function(err) {\n        errors.push(err);\n        if (errors.length === promises.length) {\n          reject(errors);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Resolve a resource using known resolvers. Unlike get, resolve does\n * not cache resolved resources.\n * @method resolve\n * @private\n * @param {String} manifest The module requesting the resource.\n * @param {String} url The resource to resolve;\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.resolve = function (manifest, url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var promises = [];\n    if (url === undefined) {\n      return reject();\n    }\n    util.eachReverse(this.resolvers, function (resolver) {\n      promises.push(new PromiseCompat(resolver.bind({}, manifest, url)));\n    }.bind(this));\n    firstPromise(promises).then(resolve, function() {\n      reject('No resolvers to handle url: ' + JSON.stringify([manifest, url]));\n    });\n  }.bind(this));\n};\n\n/**\n * Register resolvers: code that knows how to get resources\n * needed by the runtime. A resolver will be called with four\n * arguments: the absolute manifest of the requester, the\n * resource being requested, and a resolve / reject pair to\n * fulfill a promise.\n * @method addResolver\n * @param {Function} resolver The resolver to add.\n */\nResource.prototype.addResolver = function (resolver) {\n  this.resolvers.push(resolver);\n};\n\n/**\n * Register retrievers: code that knows how to load resources\n * needed by the runtime. A retriever will be called with a URL\n * to retrieve with a protocol that it is able to handle.\n * @method addRetriever\n * @param {String} proto The protocol to register for.\n * @param {Function} retriever The retriever to add.\n */\nResource.prototype.addRetriever = function (proto, retriever) {\n  if (this.contentRetrievers[proto]) {\n    this.debug.warn(\"Unwilling to override file retrieval for \" + proto);\n    return;\n  }\n  this.contentRetrievers[proto] = retriever;\n};\n\n/**\n * Register external resolvers and retreavers\n * @method register\n * @param {{\"proto\":String, \"resolver\":Function, \"retreaver\":Function}[]}\n *     resolvers The list of retreivers and resolvers.\n */\nResource.prototype.register = function (resolvers) {\n  if (!resolvers.length) {\n    return;\n  }\n\n  resolvers.forEach(function (item) {\n    if (item.resolver) {\n      this.addResolver(item.resolver);\n    } else if (item.proto && item.retriever) {\n      this.addRetriever(item.proto, item.retriever);\n    }\n  }.bind(this));\n};\n\n/**\n * Determine if a URL is an absolute URL of a given Scheme.\n * @method hasScheme\n * @static\n * @private\n * @param {String[]} protocols Whitelisted protocols\n * @param {String} URL the URL to match.\n * @returns {Boolean} If the URL is an absolute example of one of the schemes.\n */\nResource.hasScheme = function (protocols, url) {\n  var i;\n  for (i = 0; i < protocols.length; i += 1) {\n    if (url.indexOf(protocols[i] + \"://\") === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Remove './' and '../' from a URL\n * Required because Chrome Apps for Mobile (cca) doesn't understand\n * XHR paths with these relative components in the URL.\n * @method removeRelativePath\n * @param {String} url The URL to modify\n * @returns {String} url without './' and '../'\n **/\nResource.removeRelativePath = function (url) {\n  var idx = url.indexOf(\"://\") + 3,\n    stack,\n    toRemove,\n    result;\n  // Remove all instances of /./\n  url = url.replace(/\\/\\.\\//g, \"/\");\n  //Weird bug where in cca, manifest starts with 'chrome:////'\n  //This forces there to only be 2 slashes\n  while (url.charAt(idx) === \"/\") {\n    url = url.slice(0, idx) + url.slice(idx + 1, url.length);\n  }\n\n  // Advance to next /\n  idx = url.indexOf(\"/\", idx);\n  // Removing ../\n  stack = url.substr(idx + 1).split(\"/\");\n  while (stack.indexOf(\"..\") !== -1) {\n    toRemove = stack.indexOf(\"..\");\n    if (toRemove === 0) {\n      stack.shift();\n    } else {\n      stack.splice((toRemove - 1), 2);\n    }\n  }\n  \n  //Rebuild string\n  result = url.substr(0, idx);\n  for (idx = 0; idx < stack.length; idx += 1) {\n    result += \"/\" + stack[idx];\n  }\n  return result;\n};\n\n/**\n * Resolve URLs which can be accessed using standard HTTP requests.\n * @method httpResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.httpResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"http\", \"https\", \"chrome\", \"chrome-extension\", \"resource\",\n                   \"app\"],\n    dirname,\n    protocolIdx,\n    pathIdx,\n    path,\n    base,\n    result;\n\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(Resource.removeRelativePath(url));\n    return true;\n  }\n  \n  if (!manifest) {\n    reject();\n    return false;\n  }\n  if (Resource.hasScheme(protocols, manifest) &&\n      url.indexOf(\"://\") === -1) {\n    dirname = manifest.substr(0, manifest.lastIndexOf(\"/\"));\n    protocolIdx = dirname.indexOf(\"://\");\n    pathIdx = protocolIdx + 3 + dirname.substr(protocolIdx + 3).indexOf(\"/\");\n    path = dirname.substr(pathIdx);\n    base = dirname.substr(0, pathIdx);\n    if (url.indexOf(\"/\") === 0) {\n      resolve(Resource.removeRelativePath(base + url));\n    } else {\n      resolve(Resource.removeRelativePath(base + path + \"/\" + url));\n    }\n    return true;\n  }\n  reject();\n};\n\n/**\n * Resolve URLs which are self-describing.\n * @method nullResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.nullResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"manifest\"];\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(url);\n    return true;\n  } else if (url.indexOf('data:') === 0) {\n    resolve(url);\n    return true;\n  }\n  reject();\n};\n\n/**\n * Retrieve manifest content from a self-descriptive manifest url.\n * These urls are used to reference a manifest without requiring subsequent,\n * potentially non-CORS requests.\n * @method manifestRetriever\n * @private\n * @param {String} manifest The Manifest URL\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.manifestRetriever = function (manifest, resolve, reject) {\n  var data;\n  try {\n    data = manifest.substr(11);\n    JSON.parse(data);\n    resolve(data);\n  } catch (e) {\n    this.debug.warn(\"Invalid manifest URL referenced:\" + manifest);\n    reject();\n  }\n};\n\n/**\n * Retrieve resource contents using an XHR request.\n * @method xhrRetriever\n * @private\n * @param {String} url The resource to fetch.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.xhrRetriever = function (url, resolve, reject) {\n  var ref = new XMLHttpRequest();\n  ref.addEventListener(\"readystatechange\", function (resolve, reject) {\n    if (ref.readyState === 4 && ref.responseText) {\n      resolve(ref.responseText);\n    } else if (ref.readyState === 4) {\n      this.debug.warn(\"Failed to load file \" + url + \": \" + ref.status);\n      reject(ref.status);\n    }\n  }.bind(this, resolve, reject), false);\n  ref.overrideMimeType(\"application/json\");\n  ref.open(\"GET\", url, true);\n  ref.send();\n};\n\nmodule.exports = Resource;\n","/*globals crypto, WebKitBlobBuilder, Blob, URL */\n/*globals webkitURL, Uint8Array, Uint16Array, ArrayBuffer */\n/*jslint indent:2,white:true,browser:true,node:true,sloppy:true */\n\n/**\n * Utility method used within the freedom Library.\n * @class util\n * @static\n */\nvar util = {};\n\n\n/**\n * Helper function for iterating over an array backwards. If the func\n * returns a true value, it will break out of the loop.\n * @method eachReverse\n * @static\n */\nutil.eachReverse = function(ary, func) {\n  if (ary) {\n    var i;\n    for (i = ary.length - 1; i > -1; i -= 1) {\n      if (ary[i] && func(ary[i], i, ary)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * @method hasProp\n * @static\n */\nutil.hasProp = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n/**\n * Cycles over properties in an object and calls a function for each\n * property value. If the function returns a truthy value, then the\n * iteration is stopped.\n * @method eachProp\n * @static\n */\nutil.eachProp = function(obj, func) {\n  var prop;\n  for (prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      if (func(obj[prop], prop)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Simple function to mix in properties from source into target,\n * but only if target does not already have a property of the same name.\n * This is not robust in IE for transferring methods that match\n * Object.prototype names, but the uses of mixin here seem unlikely to\n * trigger a problem related to that.\n * @method mixin\n * @static\n */\nutil.mixin = function(target, source, force) {\n  if (source) {\n    util.eachProp(source, function (value, prop) {\n      if (force || !util.hasProp(target, prop)) {\n        target[prop] = value;\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Get a unique ID.\n * @method getId\n * @static\n */\nutil.getId = function() {\n  var guid = 'guid',\n      domain = 12,\n      buffer;\n  // Chrome / Firefox.\n  if (typeof crypto === 'object' && crypto.getRandomValues) {\n    buffer = new Uint8Array(domain);\n    crypto.getRandomValues(buffer);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  // Node\n  } else if (typeof crypto === 'object' && crypto.randomBytes) {\n    buffer = crypto.randomBytes(domain);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  } else {\n    while (domain > 0) {\n      guid += '-' + Math.ceil(255 * Math.random());\n      domain -= 1;\n    }\n  }\n\n  return guid;\n};\n\n/**\n * Encode a string into a binary array buffer, by treating each character as a\n * utf16 encoded character - the native javascript encoding.\n * @method str2ab\n * @static\n * @param {String} str The string to encode.\n * @returns {ArrayBuffer} The encoded string.\n */\nutil.str2ab = function(str) {\n  var length = str.length,\n      buffer = new ArrayBuffer(length * 2), // 2 bytes for each char\n      bufferView = new Uint16Array(buffer),\n      i;\n  for (i = 0; i < length; i += 1) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n};\n\n/**\n * Convert an array buffer containing an encoded string back into a string.\n * @method ab2str\n * @static\n * @param {ArrayBuffer} buffer The buffer to unwrap.\n * @returns {String} The decoded buffer.\n */\nutil.ab2str = function(buffer) {\n  return String.fromCharCode.apply(null, new Uint16Array(buffer));\n};\n\n/**\n * Add 'on' and 'emit' methods to an object, which act as a light weight\n * event handling structure.\n * @class handleEvents\n * @static\n */\nutil.handleEvents = function(obj) {\n  var eventState = {\n    DEBUG_BACKREF: obj,\n    multiple: {},\n    maybemultiple: [],\n    single: {},\n    maybesingle: []\n  }, filter, push;\n\n  /**\n   * Filter a list based on a predicate. The list is filtered in place, with\n   * selected items removed and returned by the function.\n   * @method\n   * @param {Array} list The list to filter\n   * @param {Function} predicate The method to run on each item.\n   * @returns {Array} Selected items\n   */\n  filter = function(list, predicate) {\n    var ret = [], i;\n\n    if (!list || !list.length) {\n      return [];\n    }\n\n    for (i = list.length - 1; i >= 0; i -= 1) {\n      if (predicate(list[i])) {\n        ret.push(list.splice(i, 1));\n      }\n    }\n    return ret;\n  };\n\n  /**\n   * Enqueue a handler for a specific type.\n   * @method\n   * @param {String} to The queue ('single' or 'multiple') to queue on.\n   * @param {String} type The type of event to wait for.\n   * @param {Function} handler The handler to enqueue.\n   */\n  push = function(to, type, handler) {\n    if (typeof type === 'function') {\n      this['maybe' + to].push([type, handler]);\n    } else if (this[to][type]) {\n      this[to][type].push(handler);\n    } else {\n      this[to][type] = [handler];\n    }\n  };\n\n  /**\n   * Register a method to be executed when an event of a specific type occurs.\n   * @method on\n   * @param {String|Function} type The type of event to register against.\n   * @param {Function} handler The handler to run when the event occurs.\n   */\n  obj.on = push.bind(eventState, 'multiple');\n\n  /**\n   * Register a method to be execute the next time an event occurs.\n   * @method once\n   * @param {String|Function} type The type of event to wait for.\n   * @param {Function} handler The handler to run the next time a matching event\n   *     is raised.\n   */\n  obj.once = push.bind(eventState, 'single');\n\n  /**\n   * Emit an event on this object.\n   * @method emit\n   * @param {String} type The type of event to raise.\n   * @param {Object} data The payload of the event.\n   */\n  obj.emit = function(type, data) {\n    var i, queue;\n    // Note that registered handlers may stop events on the object, by calling\n    // this.off(). As such, the presence of these keys must be checked on each\n    // iteration of the relevant loops.\n    for (i = 0; this.multiple[type] &&\n         i < this.multiple[type].length; i += 1) {\n      if (this.multiple[type][i](data) === false) {\n        return;\n      }\n    }\n    if (this.single[type]) {\n      queue = this.single[type];\n      this.single[type] = [];\n      for (i = 0; i < queue.length; i += 1) {\n        queue[i](data);\n      }\n    }\n    for (i = 0; i < this.maybemultiple.length; i += 1) {\n      if (this.maybemultiple[i][0](type, data)) {\n        this.maybemultiple[i][1](data);\n      }\n    }\n    for (i = this.maybesingle.length - 1; i >= 0; i -= 1) {\n      if (this.maybesingle[i][0](type, data)) {\n        queue = this.maybesingle.splice(i, 1);\n        queue[0][1](data);\n      }\n    }\n  }.bind(eventState);\n\n  /**\n   * Remove an event handler\n   * @method off\n   * @param {String} type The type of event to remove.\n   * @param {Function?} handler The handler to remove.\n   */\n  obj.off = function(type, handler) {\n    if (!type) {\n      delete this.DEBUG_BACKREF;\n      this.multiple = {};\n      this.maybemultiple = [];\n      this.single = {};\n      this.maybesingle = [];\n      return;\n    }\n\n    if (typeof type === 'function') {\n      filter(this.maybesingle, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n      filter(this.maybemultiple, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n    }\n\n    if (!handler) {\n      delete this.multiple[type];\n      delete this.single[type];\n    } else {\n      filter(this.multiple[type], function(item) {\n        return item === handler;\n      });\n      filter(this.single[type], function(item) {\n        return item === handler;\n      });\n    }\n  }.bind(eventState);\n};\n\n/**\n * When run without a window, or specifically requested.\n * Note: Declaration can be redefined in forceModuleContext below.\n * @method isModuleContext\n * @for util\n * @static\n */\n/*!@preserve StartModuleContextDeclaration*/\nutil.isModuleContext = function() {\n  return (typeof document === 'undefined');\n};\n\n/**\n * Get a Blob object of a string.\n * Polyfills implementations which don't have a current Blob constructor, like\n * phantomjs.\n * @method getBlob\n * @static\n */\nutil.getBlob = function(data, type) {\n  if (typeof Blob !== 'function' && typeof WebKitBlobBuilder !== 'undefined') {\n    var builder = new WebKitBlobBuilder();\n    builder.append(data);\n    return builder.getBlob(type);\n  } else {\n    return new Blob([data], {type: type});\n  }\n};\n\n/**\n * Find all scripts on the given page.\n * @method scripts\n * @static\n */\nutil.scripts = function(global) {\n  return global.document.getElementsByTagName('script');\n};\n\nmodule.exports = util;\n","/*jslint node:true*/\n\nvar providers = [\n  require('../../providers/core/core.unprivileged'),\n  require('../../providers/core/core.echo'),\n  require('../../providers/core/core.console'),\n  require('../../providers/core/core.crypto'),\n  require('../../providers/core/core.peerconnection'),\n  require('../../providers/core/core.rtcpeerconnection'),\n  require('../../providers/core/core.rtcdatachannel'),\n  require('../../providers/core/core.storage'),\n  require('../../providers/core/core.view'),\n  require('../../providers/core/core.oauth'),\n  require('../../providers/core/core.websocket'),\n  require('../../providers/core/core.xhr')\n];\n\nfunction getFreedomScript() {\n  'use strict';\n  var script;\n  if (window.document.currentScript) {\n    // New browser API\n    script = window.document.currentScript.src;\n  } else if (document.readyState !== \"complete\" &&\n             document.readyState !== \"loaded\") {\n    // Included in HTML or through document.write\n    script = window.document.getElementsByTagName('script');\n    script = script[script.length - 1].src;\n  } else {\n    // Loaded through dom manipulation or async.\n    script = document.querySelector(\n      \"script[src*='freedom.js'],script[src*='freedom-']\"\n    );\n    if (script.length !== 1) {\n      console.error(\"Could not determine freedom.js script tag.\");\n    }\n    script = script[0].src;\n  }\n  return script;\n}\n\nif (typeof window !== 'undefined') {\n  window.freedom = require('../entry').bind({}, {\n    location: window.location.href,\n    portType: require('../link/worker'),\n    source: getFreedomScript(),\n    providers: providers,\n    oauth: [\n      require('../../providers/oauth/oauth.localpageauth'),\n      require('../../providers/oauth/oauth.remotepageauth')\n    ]\n  });\n} else {\n  require('../entry')({\n    isModule: true,\n    portType: require('../link/worker'),\n    providers: providers,\n    global: global\n  });\n}\n"]}