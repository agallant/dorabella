{"version":3,"sources":["../build/node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","../build/dist/bundle.compiled.js","../build/node_modules/es6-promise/dist/es6-promise.js","../build/node_modules/grunt-browserify/node_modules/browserify/node_modules/process/browser.js","../build/node_modules/webrtc-adapter/adapter.js","../build/providers/core/core.console.js","../build/providers/core/core.crypto.js","../build/providers/core/core.echo.js","../build/providers/core/core.oauth.js","../build/providers/core/core.peerconnection.js","../build/providers/core/core.rtcdatachannel.js","../build/providers/core/core.rtcpeerconnection.js","../build/providers/core/core.storage.js","../build/providers/core/core.unprivileged.js","../build/providers/core/core.view.js","../build/providers/core/core.websocket.js","../build/providers/core/core.xhr.js","../build/providers/oauth/oauth.localpageauth.js","../build/providers/oauth/oauth.remotepageauth.js","../build/src/api.js","../build/src/bundle.js","../build/src/consumer.js","../build/src/debug.js","../build/src/entry.js","../build/src/hub.js","../build/src/link.js","../build/src/link/worker.js","../build/src/manager.js","../build/src/module.js","../build/src/moduleinternal.js","../build/src/policy.js","../build/src/provider.js","../build/src/proxy/apiInterface.js","../build/src/proxy/eventInterface.js","../build/src/proxybinder.js","../build/src/resource.js","../build/src/util.js","../build/src/util/workerEntry.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","name","api","log","type","value","debug","info","warn","error","getRandomBytes","ret","setup","send","message","createChannel","channel","identifier","bindChannel","getId","getLogger","initiateOAuth","redirect","state","err","errcode","launchAuthFlow","channelLabel","text","binary","buffer","onReceived","openDataChannel","closeDataChannel","onOpenDataChannel","channelId","onCloseDataChannel","getBufferedAmount","getInfo","createOffer","offerToReceiveVideo","offerToReceiveAudio","voiceActivityDetection","iceRestart","sdp","close","onClose","constructor","getLabel","getOrdered","getMaxPacketLifeTime","getMaxRetransmits","getProtocol","getNegotiated","getReadyState","onopen","onerror","onclose","onmessage","getBinaryType","setBinaryType","sendBuffer","iceServers","urls","username","credential","iceTransports","peerIdentity","createAnswer","setLocalDescription","getLocalDescription","setRemoteDescription","getRemoteDescription","getSignalingState","updateIce","addIceCandidate","candidate","sdpMid","sdpMLineIndex","getIceGatheringState","getIceConnectionState","getConfiguration","getLocalStreams","getRemoteStreams","getStreamById","addStream","removeStream","createDataChannel","ordered","maxPacketLifeTime","maxRetransmits","protocol","negotiated","id","ondatachannel","getStats","onnegotiationneeded","onicecandidate","onsignalingstatechange","onaddstream","stream","onremovestream","oniceconnectionstatechange","keys","get","set","remove","clear","connected","localAddress","localPort","peerAddress","peerPort","ERRCODE","SUCCESS","UNKNOWN","ALREADY_CONNECTED","INVALID_ARGUMENT","TIMED_OUT","NOT_CONNECTED","NETWORK_CHANGED","CONNECTION_CLOSED","CONNECTION_RESET","CONNECTION_REFUSED","CONNECTION_FAILED","NAME_NOT_RESOLVED","INTERNET_DISCONNECTED","ADDRESS_INVALID","ADDRESS_UNREACHABLE","HOST_UNREACHABLE","onDisconnect","connect","secure","pause","resume","prepareSecure","write","onData","data","listen","onConnection","socket","host","port","ALREADY_BOUND","SNED_FAILED","bind","sendTo","destroy","resultCode","address","show","isSecure","postMessage","onMessage","onOpen","onError","reason","wasClean","open","string","abort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","getResponse","object","getResponseText","getResponseURL","getResponseType","setResponseType","getStatus","getStatusText","getTimeout","setTimeout","getWithCredentials","setWithCredentials","onloadstart","lengthComputable","loaded","total","onprogress","onabort","onload","ontimeout","onloadend","onreadystatechange","onuploadloadstart","onuploadprogress","onuploadabort","onuploaderror","onuploadload","onuploadtimeout","onuploadloadend","onuploadreadystatechange","OFFLINE","MALFORMEDPARAMETERS","LOGIN_BADCREDENTIALS","LOGIN_FAILEDCONNECTION","LOGIN_ALREADYONLINE","LOGIN_OAUTHERROR","SEND_INVALIDDESTINATION","STATUS","ONLINE","ONLINE_WITH_OTHER_APP","login","agent","version","url","interactive","rememberLogin","userId","clientId","status","lastUpdated","lastSeen","clearCachedCredentials","getClients","getUsers","sendMessage","logout","from","onUserProfile","imageData","onClientState","scope","SESSION","DEVICE_LOCAL","USER_LOCAL","SHARED","tag","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","nextTick","process","versions","node","match","Array","isArray","setImmediate","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","document","createTextNode","observe","characterData","lib$es6$promise$asap$$useMessageChannel","MessageChannel","port1","port2","lib$es6$promise$asap$$useSetTimeout","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertex","vertx","runOnLoop","runOnContext","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFullfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","promise","then","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","parent","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","this","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","Constructor","input","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","resolve","lib$es6$promise$promise$resolve$$resolve","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","_eachEntry","entry","c","_settledAt","_willSettleAt","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","all","race","reject","_setScheduler","_setAsap","_asap","result","arguments","catch","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","clearTimeout","Item","fun","array","noop","args","push","apply","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","myRTCPeerConnection","myRTCSessionDescription","myRTCIceCandidate","renameIceURLs","config","forEach","server","fixChromeStatsResponse","response","standardReport","reports","report","standardStats","timestamp","names","stat","fixFirefoxStatsResponse","sessionHasData","desc","hasData","prefix","split","line","slice","RTCPeerConnection","mozRTCPeerConnection","configuration","constraints","pc","boundGetStats","selector","successCallback","failureCallback","successCallbackWrapper","firefoxStatsResponse","dataEnabled","boundCreateDataChannel","label","dataChannelDict","dc","localDescription","remoteDescription","event","Event","webkitRTCPeerConnection","chromeStatsResponse","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","util","Logger_console","cap","level","console","handleEvents","print","severity","source","msg","arr","freedom","unshift","maxLogLevel","freedomDump","dump","toUpperCase","join","continuation","provider","flags","Core_crypto","dispatchEvent","number","Uint8Array","crypto","getRandomValues","Echo_unprivileged","mod","Core","core","controlChannel","request","proxy","chan","m","str","OAuth","handlers","ongoing","register","boundHandlers","reset","redirectURIs","authUrl","stateObj","hasOwnProperty","SimpleDataPeer","peerName","stunServers","dataChannelCallbacks","mocks","channels","onConnectedQueue","optional","DtlsSrtpKeyAgreement","sendSignalMessage","addEventListener","onIceCallback","onNegotiationNeeded","onDataChannel","signalingState","pcState","SimpleDataPeerState","CONNECTED","map","DISCONNECTED","PeerConnection","portModule","Math","random","freedomModule","signallingChannel","peer","CONNECTING","constaints","runWhenConnected","func","dataChannel","addDataChannel","negotiateConnection","closeChannel","bufferedAmount","setSendSignalMessage","sendSignalMessageFn","handleSignalMessage","messageText","ice_candidate","json","JSON","parse","onDescription","isClosed","callbacks","readyState","onOpenFn","onCloseFn","onMessageFn","onErrorFn","description","stringify","logSuccess","op","logFail","onSignalingStateChange","signallingChannelId","initiateConnection","openDataChannelContinuation","ArrayBuffer","Blob","success","sendInfo","objToSend","eventNames","unAttachedChannels","pendingEvents","allocateChannel","eventName","handler","currentHandler","RTCDataChannelAdapter","dispatchEvents","Connection","drainPendingEvents","manageEvents","attach","binaryType","Components","myData","utils","cloneInto","allocate","adapter","PromiseCompat","DataChannel","RTCPeerConnectionAdapter","connection","events","iceGatheringState","iceConnectionState","style","Storage_unprivileged","localStorage","key","val","getItem","setItem","removeItem","EventInterface","Consumer","Core_unprivileged","manager","unboundChannels","contextId","moduleInternal","getChannel","isInModule","delegate","flow","iface","getProxyInterface","doClose","remote","reply","manifest","toBind","newSource","createLink","toDelegate","p","cb","hub","getDestination","getInterface","dependencyName","registerId","setId","Core_View","listener","active","page","resources","root","frame","container","body","getElementById","createElement","width","height","display","appendChild","setAttribute","border","background","src","contentWindow","removeChild","removeEventListener","views","toResolve","main","files","fname","resource","manifestId","PageProvider","WSHandle","nodeStyle","WS","protocols","WSImplementation","isNode","WebSocket","websocket","SyntaxError","toSend","errorCode","setSocket","impl","XhrClass","XhrProvider","XMLHttpRequest","_dispatchEvent","_xhr","_events","_setupListeners","method","async","user","password","header","mime","responseType","responseText","responseURL","statusText","withCredentials","wc","upload","setImpl","oAuthRedirectId","loadedOnStartup","TIMEOUT","location","href","indexOf","Date","LocalPageAuth","listeners","here","pathname","storageListener","RemotePageAuth","hasCredentials","Api","apis","providers","waiters","definition","inst","getCore","provideCore","cleanup","prop","doReject","waiter","Bundle","interfaces","registry","bundle","interfaceCls","nextId","ifaces","closeHandlers","errorHandlers","emits","reverse","emitChannel","to","teardown","eachProp","Iface","getInterfaceConstructor","getListener","instance","obj","binder","doEmit","messageToPortable","template","externals","conform","portableToMessage","streams","separate","String","Number","Boolean","makeArrayBuffer","thing","DataView","recursiveFreezeObject","k","defineProperty","writable","enumerable","Debug","logger","LEVELS","setLogger","format","argarr","alist","quiet","splice","getLoggingShim","asyncMethod","methods","backing","item","mthd","freedomGlobal","Hub","Manager","Policy","ProxyBinder","Resource","getGlobal","context","policy","link","Port","site_cfg","moduleContext","isModule","isModuleContext","mixin","substr","resolvers","portType","fallbackLogger","getIface","canonical_manifest","bindDefault","external","apps","routes","destination","app","trace","action","getSource","force","deregister","install","route","generateRoute","uninstall","Link","deliverMessage","start","addErrorHandler","emitMessage","WorkerLink","setupListener","setupWorker","stop","onMsg","worker","Worker","terminate","ModuleInternal","controlFlows","dataFlows","reverseFlowMap","origin","reverseFlow","overrideDest","addResolver","addRetriever","service","removeLink","getPort","portId","lineage","destName","toDest","outgoingName","outgoing","rflow","forgetFlow","Provider","Module","manifestURL","creator","externalPortMap","internalPortMap","dependantChannels","started","dependencies","deregisterFlow","provides","modInternal","internal","loadLinks","appId","addDependency","dep","updateEnv","permissions","metadata","icon","manifests","pendingPorts","requests","unboundPorts","updateManifest","defaultPort","externalChannel","objects","mapProxies","generateEnv","loadScripts","script","items","def","exp","manifestPredicate","onManifest","getExternal","CoreProv","provideAsynchronous","getLoggerSync","getAPI","proxies","seen","scripts","scripts_count","load","importer","next","tryLoad","stack","runtimes","policies","pending","add","defaultPolicy","defaultConstraints","isolation","placement","loadManifest","overlay","runtime","findDestination","isRunning","fullMatch","okay","j","modules","getContents","modFingerprint","base","mode","synchronous","providerCls","asynchronous","promises","getProvider","onmsg","sanityCheck","provideSynchronous","prov","providePromises","ids","BoundClass","ev","returnPromise","reqId","e1","e2","e3","ApiInterface","inflight","emitter","thisReq","reckless","apiProvider","httpResolver","nullResolver","contentRetrievers","http","xhrRetriever","https","chrome-extension","chrome","manifestRetriever","firstPromise","errors","eachReverse","proto","retriever","hasScheme","removeRelativePath","toRemove","idx","replace","charAt","shift","dirname","protocolIdx","pathIdx","path","lastIndexOf","ref","ary","hasProp","target","guid","domain","randomBytes","ceil","str2ab","bufferView","Uint16Array","charCodeAt","ab2str","fromCharCode","filter","eventState","DEBUG_BACKREF","multiple","maybemultiple","single","maybesingle","list","predicate","getBlob","WebKitBlobBuilder","builder","append","getElementsByTagName","getFreedomScript","currentScript","querySelector","oauth"],"mappings":"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SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,S,SC5EA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,S,SCnxflhOA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,S,SChpjhnMA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,S,kBCtvlKA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,S,SClCA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,S,SCzdkBCrnrclchzHA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,S,SCnkBCrUA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA","file":"freedom.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = [{\"name\":\"console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.crypto\",\"api\":{\"getRandomBytes\":{\"type\":\"method\",\"value\":[\"number\"],\"ret\":\"buffer\"}}},{\"name\":\"core.echo\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"message\":{\"type\":\"event\",\"value\":\"string\"}}},{\"name\":\"core\",\"api\":{\"createChannel\":{\"type\":\"method\",\"value\":[],\"ret\":{\"channel\":\"proxy\",\"identifier\":\"string\"}},\"bindChannel\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getLogger\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"require\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"proxy\"}}},{\"name\":\"core.oauth\",\"api\":{\"initiateOAuth\":{\"type\":\"method\",\"value\":[[\"array\",\"string\"]],\"ret\":{\"redirect\":\"string\",\"state\":\"string\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"launchAuthFlow\":{\"type\":\"method\",\"value\":[\"string\",{\"redirect\":\"string\",\"state\":\"string\"},\"boolean\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"core.peerconnection\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"string\",[\"array\",\"string\"],\"boolean\"]},\"send\":{\"type\":\"method\",\"value\":[{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}]},\"onReceived\":{\"type\":\"event\",\"value\":{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"openDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"closeDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"onOpenDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"onCloseDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveVideo\":\"number\",\"offerToReceiveAudio\":\"number\",\"voiceActivityDetection\":\"boolean\",\"iceRestart\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[]},\"onClose\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"core.rtcdatachannel\",\"api\":{\"constructor\":{\"value\":[\"string\"]},\"getLabel\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getOrdered\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getMaxPacketLifeTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getMaxRetransmits\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getProtocol\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getNegotiated\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"onopen\":{\"type\":\"event\",\"value\":[]},\"onerror\":{\"type\":\"event\",\"value\":[]},\"onclose\":{\"type\":\"event\",\"value\":[]},\"close\":{\"type\":\"method\",\"value\":[]},\"onmessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"buffer\":\"buffer\"}},\"getBinaryType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setBinaryType\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"sendBuffer\":{\"type\":\"method\",\"value\":[\"buffer\"]}}},{\"name\":\"core.rtcpeerconnection\",\"api\":{\"constructor\":{\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}]},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveAudio\":\"number\",\"offerToReceiveVideo\":\"number\",\"iceRestart\":\"boolean\",\"voiceActivityDetection\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"createAnswer\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setLocalDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}]},\"getLocalDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setRemoteDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}],\"ret\":{}},\"getRemoteDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"getSignalingState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"updateIce\":{\"type\":\"method\",\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}],\"ret\":{}},\"addIceCandidate\":{\"type\":\"method\",\"value\":[{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}],\"ret\":{}},\"getIceGatheringState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getIceConnectionState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getConfiguration\":{\"type\":\"method\",\"value\":[],\"ret\":{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}},\"getLocalStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getRemoteStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getStreamById\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"addStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"removeStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":{}},\"createDataChannel\":{\"type\":\"method\",\"value\":[\"string\",{\"ordered\":\"boolean\",\"maxPacketLifeTime\":\"number\",\"maxRetransmits\":\"number\",\"protocol\":\"string\",\"negotiated\":\"boolean\",\"id\":\"number\"}],\"ret\":\"string\"},\"ondatachannel\":{\"type\":\"event\",\"value\":{\"channel\":\"string\"}},\"getStats\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"object\"},\"onnegotiationneeded\":{\"type\":\"event\",\"value\":[]},\"onicecandidate\":{\"type\":\"event\",\"value\":{\"candidate\":{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}}},\"onsignalingstatechange\":{\"type\":\"event\",\"value\":[]},\"onaddstream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"onremovestream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"oniceconnectionstatechange\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.storage\",\"api\":{\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\"},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"clear\":{\"type\":\"method\",\"value\":[]}}},{\"name\":\"core.tcpsocket\",\"api\":{\"constructor\":{\"value\":[\"number\"]},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"connected\":\"boolean\",\"localAddress\":\"string\",\"localPort\":\"number\",\"peerAddress\":\"string\",\"peerPort\":\"number\"}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_CONNECTED\":\"Socket already connected\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"TIMED_OUT\":\"Timed out\",\"NOT_CONNECTED\":\"Socket not connected\",\"NETWORK_CHANGED\":\"Network changed\",\"CONNECTION_CLOSED\":\"Connection closed gracefully\",\"CONNECTION_RESET\":\"Connection reset\",\"CONNECTION_REFUSED\":\"Connection refused\",\"CONNECTION_FAILED\":\"Connection failed\",\"NAME_NOT_RESOLVED\":\"DNS lookup failed\",\"INTERNET_DISCONNECTED\":\"Cannot reach any network\",\"ADDRESS_INVALID\":\"Invalid address\",\"ADDRESS_UNREACHABLE\":\"No route to host\",\"HOST_UNREACHABLE\":\"SOCKS proxy server could not reach host\"}},\"close\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onDisconnect\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"connect\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"secure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"pause\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"resume\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"prepareSecure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"write\":{\"type\":\"method\",\"value\":[\"buffer\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"data\":\"buffer\"}},\"listen\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onConnection\":{\"type\":\"event\",\"value\":{\"socket\":\"number\",\"host\":\"string\",\"port\":\"number\"}}}},{\"name\":\"core.udpsocket\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_BOUND\":\"Socket already bound\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"NETWORK_CHANGED\":\"Network changed\",\"SNED_FAILED\":\"Send failed\"}},\"bind\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"localAddress\":\"string\",\"localPort\":\"number\"}},\"sendTo\":{\"type\":\"method\",\"value\":[\"buffer\",\"string\",\"number\"],\"ret\":\"number\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"destroy\":{\"type\":\"method\",\"value\":[]},\"onData\":{\"type\":\"event\",\"value\":{\"resultCode\":\"number\",\"address\":\"string\",\"port\":\"number\",\"data\":\"buffer\"}}}},{\"name\":\"core.view\",\"api\":{\"show\":{\"type\":\"method\",\"value\":[\"string\"]},\"isSecure\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"close\":{\"type\":\"method\",\"value\":[]},\"postMessage\":{\"type\":\"method\",\"value\":[\"object\"]},\"message\":{\"type\":\"event\",\"value\":\"object\"},\"onClose\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.websocket\",\"api\":{\"constructor\":{\"value\":[\"string\",[\"array\",\"string\"]]},\"send\":{\"type\":\"method\",\"value\":[{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"close\":{\"type\":\"method\",\"value\":[\"number\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"onOpen\":{\"type\":\"event\",\"value\":[]},\"onError\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onClose\":{\"type\":\"event\",\"value\":{\"code\":\"number\",\"reason\":\"string\",\"wasClean\":\"boolean\"}}}},{\"name\":\"core.xhr\",\"api\":{\"open\":{\"type\":\"method\",\"value\":[\"string\",\"string\",\"boolean\",\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[{\"string\":\"string\",\"buffer\":\"buffer\"}]},\"abort\":{\"type\":\"method\",\"value\":[]},\"getResponseHeader\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"getAllResponseHeaders\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setRequestHeader\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"overrideMimeType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getResponse\":{\"type\":\"method\",\"value\":[],\"ret\":{\"string\":\"string\",\"buffer\":\"buffer\",\"object\":\"object\"}},\"getResponseText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseURL\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setResponseType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getStatus\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getStatusText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getTimeout\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"setTimeout\":{\"type\":\"method\",\"value\":[\"number\"]},\"getWithCredentials\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"setWithCredentials\":{\"type\":\"method\",\"value\":[\"boolean\"]},\"onloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onerror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"ontimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onreadystatechange\":{\"type\":\"event\",\"value\":{}},\"onuploadloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploaderror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadtimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadreadystatechange\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"social\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"User is currently offline\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\",\"LOGIN_BADCREDENTIALS\":\"Error authenticating with server\",\"LOGIN_FAILEDCONNECTION\":\"Error connecting to server\",\"LOGIN_ALREADYONLINE\":\"User is already logged in\",\"LOGIN_OAUTHERROR\":\"OAuth Error\",\"SEND_INVALIDDESTINATION\":\"Message sent to an invalid destination\"}},\"STATUS\":{\"type\":\"constant\",\"value\":{\"OFFLINE\":\"OFFLINE\",\"ONLINE\":\"ONLINE\",\"ONLINE_WITH_OTHER_APP\":\"ONLINE_WITH_OTHER_APP\"}},\"login\":{\"type\":\"method\",\"value\":[{\"agent\":\"string\",\"version\":\"string\",\"url\":\"string\",\"interactive\":\"boolean\",\"rememberLogin\":\"boolean\"}],\"ret\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clearCachedCredentials\":{\"type\":\"method\",\"value\":[]},\"getClients\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getUsers\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"sendMessage\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"logout\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"from\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"message\":\"string\"}},\"onUserProfile\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"lastUpdated\":\"number\",\"name\":\"string\",\"url\":\"string\",\"imageData\":\"string\"}},\"onClientState\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"}}}},{\"name\":\"storage\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"storebuffer\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"transport\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"proxy\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"tag\":\"string\",\"data\":\"buffer\"}},\"onClose\":{\"type\":\"event\",\"value\":[]}}}];\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.3.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*jslint node:true*/\n/*globals RTCPeerConnection, mozRTCPeerConnection, webkitRTCPeerConnection */\n/*globals RTCSessionDescription, mozRTCSessionDescription */\n/*globals RTCIceCandidate, mozRTCIceCandidate */\n'use strict';\n\nvar myRTCPeerConnection = null;\nvar myRTCSessionDescription = null;\nvar myRTCIceCandidate = null;\n\nvar renameIceURLs = function (config) {\n  if (!config) {\n    return;\n  }\n  if (!config.iceServers) {\n    return config;\n  }\n  config.iceServers.forEach(function (server) {\n    server.url = server.urls;\n    delete server.urls;\n  });\n  return config;\n};\n\nvar fixChromeStatsResponse = function(response) {\n  var standardReport = {};\n  var reports = response.result();\n  reports.forEach(function(report) {\n    var standardStats = {\n      id: report.id,\n      timestamp: report.timestamp,\n      type: report.type\n    };\n    report.names().forEach(function(name) {\n      standardStats[name] = report.stat(name);\n    });\n    standardReport[standardStats.id] = standardStats;\n  });\n\n  return standardReport;\n};\n\nvar fixFirefoxStatsResponse = function(response) {\n  // Giving the response directly to the callback gives an object w/o interface\n  // https://developer.mozilla.org/en-US/docs/Mozilla/WebIDL_bindings#ChromeOnly\n  var standardReport = {};\n  response.forEach(function (report) {\n    standardReport[report.id] = report;\n  });\n  return standardReport;\n};\n\nvar sessionHasData = function(desc) {\n  if (!desc) {\n    return false;\n  }\n  var hasData = false;\n  var prefix = 'm=application';\n  desc.sdp.split('\\n').forEach(function(line) {\n    if (line.slice(0, prefix.length) === prefix) {\n      hasData = true;\n    }\n  });\n  return hasData;\n};\n\n// Unify PeerConnection Object.\nif (typeof RTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = RTCPeerConnection;\n} else if (typeof mozRTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = function (configuration, constraints) {\n    // Firefox uses 'url' rather than 'urls' for RTCIceServer.urls\n    var pc = new mozRTCPeerConnection(renameIceURLs(configuration), constraints);\n\n    // Firefox stats response is only visible 'ChromeOnly' so process it here\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(firefoxStatsResponse) {\n        successCallback(fixFirefoxStatsResponse(firefoxStatsResponse));\n      };\n      boundGetStats(selector, successCallbackWrapper, failureCallback);\n    };\n\n    // Firefox doesn't fire 'onnegotiationneeded' when a data channel is created\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n    var dataEnabled = false;\n    var boundCreateDataChannel = pc.createDataChannel.bind(pc);\n    pc.createDataChannel = function(label, dataChannelDict) {\n      var dc = boundCreateDataChannel(label, dataChannelDict);\n      if (!dataEnabled) {\n        dataEnabled = true;\n        if (pc.onnegotiationneeded &&\n            !sessionHasData(pc.localDescription) &&\n            !sessionHasData(pc.remoteDescription)) {\n          var event = new Event('negotiationneeded');\n          pc.onnegotiationneeded(event);\n        }\n      }\n      return dc;\n    };\n\n    return pc;\n  };\n} else if (typeof webkitRTCPeerConnection !== 'undefined') {\n  // Chrome returns a nonstandard, non-JSON-ifiable response from getStats.\n  myRTCPeerConnection = function(configuration, constraints) {\n    var pc = new webkitRTCPeerConnection(configuration, constraints);\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(chromeStatsResponse) {\n        successCallback(fixChromeStatsResponse(chromeStatsResponse));\n      };\n      // Chrome also takes its arguments in the wrong order.\n      boundGetStats(successCallbackWrapper, failureCallback, selector);\n    };\n    return pc;\n  };\n}\n\n// Unify SessionDescrption Object.\nif (typeof RTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = RTCSessionDescription;\n} else if (typeof mozRTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = mozRTCSessionDescription;\n}\n\n// Unify IceCandidate Object.\nif (typeof RTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = RTCIceCandidate;\n} else if (typeof mozRTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = mozRTCIceCandidate;\n}\n\nexports.RTCPeerConnection = myRTCPeerConnection;\nexports.RTCSessionDescription = myRTCSessionDescription;\nexports.RTCIceCandidate = myRTCIceCandidate;\n","/*globals process, console */\n/*jslint indent:2,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A freedom.js logging provider that logs to chrome, firefox, and node consoles.\n * @Class Logger_console\n * @constructor\n * @private\n * @param {config: Object} cap Capabilities - console requires global config.\n */\nvar Logger_console = function (cap) {\n  this.level = (cap.config && cap.config.debug) || 'log';\n  this.console = (cap.config && cap.config.global.console);\n  util.handleEvents(this);\n};\n\n\n/**\n * Logging levels, for filtering output.\n * @private\n * @static\n */\nLogger_console.level = {\n  \"debug\": 0,\n  \"info\": 1,\n  \"log\": 2,\n  \"warn\": 3,\n  \"error\": 4\n};\n\n/**\n * Print a message with appropriate formatting.\n * @method print\n */\nLogger_console.prototype.print = function (severity, source, msg) {\n  var arr = msg;\n  if (typeof this.console === 'undefined' ||\n      this.console.freedom === true) {\n    return;\n  }\n  if (typeof arr === 'string') {\n    arr = [arr];\n  }\n  \n  if (Logger_console.level[this.level] !== undefined &&\n      Logger_console.level[severity] < Logger_console.level[this.level]) {\n    return;\n  }\n  \n  if (source) {\n    if (typeof process !== 'undefined' &&\n        {}.toString.call(process) === '[object process]') {\n      // Node.\n      arr.unshift('\\x1B[39m');\n      arr.unshift('\\x1B[31m' + source);\n    } else if (this.console.maxLogLevel) {\n      // Firefox in JSM context:\n      //   http://mxr.mozilla.org/mozilla-release/source/toolkit/devtools/Console.jsm\n      if (!this.console.freedomDump) {\n        this.console.freedomDump = this.console.dump;\n        this.console.dump = function() {};\n      }\n      this.console.freedomDump(source + ' ' + severity[0].toUpperCase() + ' ' +\n          arr.join(' ') + '\\n');\n    } else {\n      arr.unshift('color: none');\n      arr.unshift('color: red');\n      arr.unshift('%c' + source + '%c');\n    }\n  }\n\n  if (!this.console[severity] && this.console.log) {\n    severity = 'log';\n  }\n  this.console[severity].apply(this.console, arr);\n};\n\n/**\n * Log a message to the console.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.log = function (source, msg, continuation) {\n  this.print('log', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with debug priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.debug = function (source, msg, continuation) {\n  this.print('debug', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with info priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.info = function (source, msg, continuation) {\n  this.print('info', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with warn priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.warn = function (source, msg, continuation) {\n  this.print('warn', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with error priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.error = function (source, msg, continuation) {\n  this.print('error', source, msg);\n  continuation();\n};\n\n/** REGISTER PROVIDER **/\nexports.provider = Logger_console;\nexports.name = 'core.console';\nexports.flags = {config: true};\n","/*globals console, crypto */\n/*jslint indent:2, node:true */\nvar util = require('../../src/util');\n\n/**\n * A Core provider for getting cryptographically random buffers. This\n * functionality may not exist in all unpriviledged contexts - namely at this\n * point, firefox addon workers.\n * @Class Core_crypto\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Core_crypto = function(cap, dispatchEvent) {\n  'use strict';\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n};\n\n/**\n * Get a random buffer of some number of bytes.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\n Core_crypto.prototype.getRandomBytes = function(number, continuation) {\n   'use strict';\n   var buffer = new Uint8Array(number);\n   crypto.getRandomValues(buffer);\n   continuation(buffer.buffer);\n};\n\nexports.provider = Core_crypto;\nexports.name = \"core.crypto\";\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A minimal provider implementing the core.echo interface for interaction with\n * custom channels.  Primarily used for testing the robustness of the custom\n * channel implementation.\n * @Class Echo_unprivileged\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Echo_unprivileged = function(cap, dispatchEvent) {\n  this.mod = cap.module;\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n\n  // The Core object for managing channels.\n  this.mod.once('core', function(Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.mod.emit(this.mod.controlChannel, {\n    type: 'core request delegated to echo',\n    request: 'core'\n  });\n};\n\n/**\n * Setup the provider to echo on a specific proxy. Subsequent messages\n * From the custom channel bound here will be re-emitted as a message\n * from the provider.  Subsequent messages to the provider will be\n * emitted on the bound channel.\n * @param {Object} proxy The identifier for the custom channel to bind.\n * @param {Function} continuation Function to call when setup is complete.\n * @method setup\n */\nEcho_unprivileged.prototype.setup = function(proxy, continuation) {\n  continuation();\n  if (!this.core) {\n    this.dispatchEvent('message', 'no core available to setup proxy with at echo');\n    return;\n  }\n\n  this.core.bindChannel(proxy, function(chan) {\n    if (this.chan) {\n      this.chan.close();\n    }\n    this.chan = chan;\n    this.chan.onClose(function() {\n      delete this.chan;\n    }.bind(this));\n    this.dispatchEvent('message', 'channel bound to echo');\n    this.chan.on('message', function(m) {\n      this.dispatchEvent('message', 'from custom channel: ' + m);\n    }.bind(this));\n  }.bind(this));\n};\n\n/**\n * Send a message to the bound custom channel.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\nEcho_unprivileged.prototype.send = function(str, continuation) {\n  continuation();\n  if (this.chan) {\n    this.chan.emit('message', str);\n  } else {\n    this.dispatchEvent('message', 'no channel available');\n  }\n};\n\nexports.provider = Echo_unprivileged;\nexports.name = \"core.echo\";\nexports.flags = {module: true};\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true,node:true */\n\n/**\n * An oAuth meta-provider allowing multiple platform-dependant\n * oAuth implementations to serve as the redirectURL for an oAuth flow.\n * The core implementations are provided in providers/oauth, and are\n * supplemented in platform-dependent repositories.\n *\n */\nvar OAuth = function (handlers, cap, dispatchEvent) {\n  this.handlers = handlers;\n  this.dispatchEvent = dispatchEvent;\n  this.ongoing = {};\n};\n\n/**\n * Register oAuth handlers.\n * This method should be called before provider is used, and binds the current\n * oAuth provider to be associated with registered handlers. This is used so\n * that handlers which are registered by the user apply only the the freedom()\n * setup call they are associated with, while still being registered across\n * multiple instances of OAuth providers.\n *\n * @method register\n * @param {[constructor]} handlers\n * @private\n */\nOAuth.register = function (handlers) {\n  var i,\n      boundHandlers = [];\n  if (!handlers || !handlers.length) {\n    return OAuth.reset();\n  }\n\n  for (i = 0; i < handlers.length; i += 1) {\n    boundHandlers.push(new handlers[i]());\n  }\n  exports.provider = OAuth.bind(this, boundHandlers);\n};\n\n/**\n * Reset the oAuth provider registrations.\n * @method reset\n * @private\n */\nOAuth.reset = function () {\n  exports.provider = OAuth.bind(this, []);\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n */\nOAuth.prototype.initiateOAuth = function (redirectURIs, continuation) {\n  var promise, i, successCallback;\n  successCallback = function(result) {\n    this.ongoing[result.state] = this.handlers[i];\n    continuation(result);\n  }.bind(this);\n\n  for (i = 0; i < this.handlers.length; i += 1) {\n    if (this.handlers[i].initiateOAuth(redirectURIs, successCallback)) {\n      return;\n    }\n  }\n  //If here, we have no compatible providers\n  continuation(null, {\n    'errcode': 'UNKNOWN',\n    'message': 'No requested redirects can be handled.'\n  });\n  return;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive OAuth flow.\n *    Defaults to true.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nOAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive,\n                                          continuation) {\n  if (!this.ongoing.hasOwnProperty(stateObj.state)) {\n    continuation(undefined, {\n      'errcode': 'UNKNOWN',\n      'message': 'You must begin the oAuth flow with initiateOAuth first'\n    });\n    return;\n  }\n  if (interactive === undefined) {\n    interactive = true;\n  }\n  this.ongoing[stateObj.state].launchAuthFlow(\n      authUrl, stateObj, interactive, continuation);\n  delete this.ongoing[stateObj.state];\n};\n\nexports.register = OAuth.register;\nexports.reset = OAuth.reset;\nexports.provider = OAuth.bind(this, []);\nexports.name = 'core.oauth';\n","/*globals console, RTCPeerConnection, webkitRTCPeerConnection */\n/*globals mozRTCPeerConnection, RTCSessionDescription, RTCIceCandidate */\n/*globals mozRTCSessionDescription, mozRTCIceCandidate */\n/*globals ArrayBuffer, Blob */\n/*jslint indent:2,sloppy:true,node:true */\n/**\n * DataPeer - a class that wraps peer connections and data channels.\n */\n// TODO: check that Handling of pranswer is treated appropriately.\nvar SimpleDataPeerState = {\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED'\n};\n\nfunction SimpleDataPeer(peerName, stunServers, dataChannelCallbacks, mocks) {\n  var constraints,\n    config,\n    i;\n  this.peerName = peerName;\n  this.channels = {};\n  this.dataChannelCallbacks = dataChannelCallbacks;\n  this.onConnectedQueue = [];\n\n  if (typeof mocks.RTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mocks.RTCPeerConnection;\n  } else if (typeof webkitRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = webkitRTCPeerConnection;\n  } else if (typeof mozRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mozRTCPeerConnection;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCPeerConnection\");\n  }\n\n  if (typeof mocks.RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mocks.RTCSessionDescription;\n  } else if (typeof RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = RTCSessionDescription;\n  } else if (typeof mozRTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mozRTCSessionDescription;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCSessionDescription\");\n  }\n\n  if (typeof mocks.RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mocks.RTCIceCandidate;\n  } else if (typeof RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = RTCIceCandidate;\n  } else if (typeof mozRTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mozRTCIceCandidate;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCIceCandidate\");\n  }\n\n\n  constraints = {\n    optional: [{DtlsSrtpKeyAgreement: true}]\n  };\n  // A way to speak to the peer to send SDP headers etc.\n  this.sendSignalMessage = null;\n\n  this.pc = null;  // The peer connection.\n  // Get TURN servers for the peer connection.\n  config = {iceServers: []};\n  for (i = 0; i < stunServers.length; i += 1) {\n    config.iceServers.push({\n      'url' : stunServers[i]\n    });\n  }\n  this.pc = new this.RTCPeerConnection(config, constraints);\n  // Add basic event handlers.\n  this.pc.addEventListener(\"icecandidate\",\n                            this.onIceCallback.bind(this));\n  this.pc.addEventListener(\"negotiationneeded\",\n                            this.onNegotiationNeeded.bind(this));\n  this.pc.addEventListener(\"datachannel\",\n                            this.onDataChannel.bind(this));\n  this.pc.addEventListener(\"signalingstatechange\", function () {\n    // TODO: come up with a better way to detect connection.  We start out\n    // as \"stable\" even before we are connected.\n    // TODO: this is not fired for connections closed by the other side.\n    // This will be fixed in m37, at that point we should dispatch an onClose\n    // event here for freedom.transport to pick up.\n    if (this.pc.signalingState === \"stable\") {\n      this.pcState = SimpleDataPeerState.CONNECTED;\n      this.onConnectedQueue.map(function (callback) { callback(); });\n    }\n  }.bind(this));\n  // This state variable is used to fake offer/answer when they are wrongly\n  // requested and we really just need to reuse what we already have.\n  this.pcState = SimpleDataPeerState.DISCONNECTED;\n\n  // Note: to actually do something with data channels opened by a peer, we\n  // need someone to manage \"datachannel\" event.\n}\n\nSimpleDataPeer.prototype.createOffer = function (constaints, continuation) {\n  this.pc.createOffer(continuation, function () {\n    console.error('core.peerconnection createOffer failed.');\n  }, constaints);\n};\n\nSimpleDataPeer.prototype.runWhenConnected = function (func) {\n  if (this.pcState === SimpleDataPeerState.CONNECTED) {\n    func();\n  } else {\n    this.onConnectedQueue.push(func);\n  }\n};\n\nSimpleDataPeer.prototype.send = function (channelId, message, continuation) {\n  this.channels[channelId].send(message);\n  continuation();\n};\n\nSimpleDataPeer.prototype.openDataChannel = function (channelId, continuation) {\n  var dataChannel = this.pc.createDataChannel(channelId, {});\n  dataChannel.onopen = function () {\n    this.addDataChannel(channelId, dataChannel);\n    continuation();\n  }.bind(this);\n  dataChannel.onerror = function (err) {\n    //@(ryscheng) todo - replace with errors that work across the interface\n    console.error(err);\n    continuation(undefined, err);\n  };\n  // Firefox does not fire \"negotiationneeded\", so we need to\n  // negotate here if we are not connected.\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n  if (typeof mozRTCPeerConnection !== \"undefined\" &&\n      this.pcState === SimpleDataPeerState.DISCONNECTED) {\n    this.negotiateConnection();\n  }\n};\n\nSimpleDataPeer.prototype.closeChannel = function (channelId) {\n  if (this.channels[channelId] !== undefined) {\n    this.channels[channelId].close();\n    delete this.channels[channelId];\n  }\n};\n\nSimpleDataPeer.prototype.getBufferedAmount = function (channelId,\n                                                       continuation) {\n  if (this.channels[channelId] !== undefined) {\n    var dataChannel = this.channels[channelId];\n    return dataChannel.bufferedAmount;\n  }\n  throw new Error(\"No channel with id: \" + channelId);\n};\n\nSimpleDataPeer.prototype.setSendSignalMessage = function (sendSignalMessageFn) {\n  this.sendSignalMessage = sendSignalMessageFn;\n};\n\n// Handle a message send on the signalling channel to this peer.\nSimpleDataPeer.prototype.handleSignalMessage = function (messageText) {\n  //console.log(this.peerName + \": \" + \"handleSignalMessage: \\n\" + messageText);\n  var json = JSON.parse(messageText),\n    ice_candidate;\n\n  // TODO: If we are offering and they are also offerring at the same time,\n  // pick the one who has the lower randomId?\n  // (this.pc.signalingState == \"have-local-offer\" && json.sdp &&\n  //    json.sdp.type == \"offer\" && json.sdp.randomId < this.localRandomId)\n  if (json.sdp) {\n    // Set the remote description.\n    this.pc.setRemoteDescription(\n      new this.RTCSessionDescription(json.sdp),\n      // Success\n      function () {\n        //console.log(this.peerName + \": setRemoteDescription succeeded\");\n        if (this.pc.remoteDescription.type === \"offer\") {\n          this.pc.createAnswer(this.onDescription.bind(this),\n                               console.error);\n        }\n      }.bind(this),\n      // Failure\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setRemoteDescription failed:\", e);\n      }.bind(this)\n    );\n  } else if (json.candidate) {\n    // Add remote ice candidate.\n    //console.log(this.peerName + \": Adding ice candidate: \" + JSON.stringify(json.candidate));\n    ice_candidate = new this.RTCIceCandidate(json.candidate);\n    this.pc.addIceCandidate(ice_candidate);\n  } else {\n    console.warn(this.peerName + \": \" +\n        \"handleSignalMessage got unexpected message: \", messageText);\n  }\n};\n\n// Connect to the peer by the signalling channel.\nSimpleDataPeer.prototype.negotiateConnection = function () {\n  this.pcState = SimpleDataPeerState.CONNECTING;\n  this.pc.createOffer(\n    this.onDescription.bind(this),\n    function (e) {\n      console.error(this.peerName + \": \" +\n          \"createOffer failed: \", e.toString());\n      this.pcState = SimpleDataPeerState.DISCONNECTED;\n    }.bind(this)\n  );\n};\n\nSimpleDataPeer.prototype.isClosed = function () {\n  return !this.pc || this.pc.signalingState === \"closed\";\n};\n\nSimpleDataPeer.prototype.close = function () {\n  if (!this.isClosed()) {\n    this.pc.close();\n  }\n  //console.log(this.peerName + \": \" + \"Closed peer connection.\");\n};\n\nSimpleDataPeer.prototype.addDataChannel = function (channelId, channel) {\n  var callbacks = this.dataChannelCallbacks;\n  this.channels[channelId] = channel;\n\n  if (channel.readyState === \"connecting\") {\n    channel.onopen = callbacks.onOpenFn.bind(this, channel, {label: channelId});\n  }\n\n  channel.onclose = callbacks.onCloseFn.bind(this, channel, {label: channelId});\n\n  channel.onmessage = callbacks.onMessageFn.bind(this, channel,\n                                                 {label: channelId});\n\n  channel.onerror = callbacks.onErrorFn.bind(this, channel, {label: channel});\n};\n\n// When we get our description, we set it to be our local description and\n// send it to the peer.\nSimpleDataPeer.prototype.onDescription = function (description) {\n  if (this.sendSignalMessage) {\n    this.pc.setLocalDescription(\n      description,\n      function () {\n        //console.log(this.peerName + \": setLocalDescription succeeded\");\n        this.sendSignalMessage(JSON.stringify({'sdp': description}));\n      }.bind(this),\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setLocalDescription failed:\", e);\n      }.bind(this)\n    );\n  } else {\n    console.error(this.peerName + \": \" +\n        \"_onDescription: _sendSignalMessage is not set, so we did not \" +\n            \"set the local description. \");\n  }\n};\n\nSimpleDataPeer.prototype.onNegotiationNeeded = function (e) {\n  //console.log(this.peerName + \": \" + \"onNegotiationNeeded\",\n  //            JSON.stringify(this._pc), e);\n  if (this.pcState !== SimpleDataPeerState.DISCONNECTED) {\n    // Negotiation messages are falsely requested for new data channels.\n    //   https://code.google.com/p/webrtc/issues/detail?id=2431\n    // This code is a hack to simply reset the same local and remote\n    // description which will trigger the appropriate data channel open event.\n    // TODO: fix/remove this when Chrome issue is fixed.\n    var logSuccess = function (op) {\n      return function () {\n        //console.log(this.peerName + \": \" + op + \" succeeded \");\n      }.bind(this);\n    }.bind(this),\n      logFail = function (op) {\n        return function (e) {\n          //console.log(this.peerName + \": \" + op + \" failed: \" + e);\n        }.bind(this);\n      }.bind(this);\n    if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"offer\") {\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n    } else if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"answer\") {\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n    } else {\n      console.error(this.peerName + ', onNegotiationNeeded failed');\n    }\n    return;\n  }\n  this.negotiateConnection();\n};\n\nSimpleDataPeer.prototype.onIceCallback = function (event) {\n  if (event.candidate) {\n    // Send IceCandidate to peer.\n    //console.log(this.peerName + \": \" + \"ice callback with candidate\", event);\n    if (this.sendSignalMessage) {\n      this.sendSignalMessage(JSON.stringify({'candidate': event.candidate}));\n    } else {\n      console.warn(this.peerName + \": \" + \"_onDescription: _sendSignalMessage is not set.\");\n    }\n  }\n};\n\nSimpleDataPeer.prototype.onSignalingStateChange = function () {\n  //console.log(this.peerName + \": \" + \"onSignalingStateChange: \", this._pc.signalingState);\n  if (this.pc.signalingState === \"stable\") {\n    this.pcState = SimpleDataPeerState.CONNECTED;\n    this.onConnectedQueue.map(function (callback) { callback(); });\n  }\n};\n\nSimpleDataPeer.prototype.onDataChannel = function (event) {\n  this.addDataChannel(event.channel.label, event.channel);\n  // RTCDataChannels created by a RTCDataChannelEvent have an initial\n  // state of open, so the onopen event for the channel will not\n  // fire. We need to fire the onOpenDataChannel event here\n  // http://www.w3.org/TR/webrtc/#idl-def-RTCDataChannelState\n\n  // Firefox channels do not have an initial state of \"open\"\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=1000478\n  if (event.channel.readyState === \"open\") {\n    this.dataChannelCallbacks.onOpenFn(event.channel,\n                                       {label: event.channel.label});\n  }\n};\n\n// _signallingChannel is a channel for emitting events back to the freedom Hub.\nfunction PeerConnection(portModule, dispatchEvent,\n                        RTCPeerConnection, RTCSessionDescription,\n                        RTCIceCandidate) {\n  // Channel for emitting events to consumer.\n  this.dispatchEvent = dispatchEvent;\n\n  // a (hopefully unique) ID for debugging.\n  this.peerName = \"p\" + Math.random();\n\n  // This is the portApp (defined in freedom/src/port-app.js). A way to speak\n  // to freedom.\n  this.freedomModule = portModule.module;\n\n  // For tests we may mock out the PeerConnection and\n  // SessionDescription implementations\n  this.RTCPeerConnection = RTCPeerConnection;\n  this.RTCSessionDescription = RTCSessionDescription;\n  this.RTCIceCandidate = RTCIceCandidate;\n\n  // This is the a channel to send signalling messages.\n  this.signallingChannel = null;\n\n  // The DataPeer object for talking to the peer.\n  this.peer = null;\n\n  // The Core object for managing channels.\n  this.freedomModule.once('core', function (Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.freedomModule.emit(this.freedomModule.controlChannel, {\n    type: 'core request delegated to peerconnection',\n    request: 'core'\n  });\n}\n\n// Start a peer connection using the given freedomChannelId as the way to\n// communicate with the peer. The argument |freedomChannelId| is a way to speak\n// to an identity provide to send them SDP headers negotiate the address/port to\n// setup the peer to peerConnection.\n//\n// options: {\n//   peerName: string,   // For pretty printing messages about this peer.\n//   debug: boolean           // should we add extra\n// }\nPeerConnection.prototype.setup = function (signallingChannelId, peerName,\n                                           stunServers, initiateConnection,\n                                           continuation) {\n  this.peerName = peerName;\n  var mocks = {RTCPeerConnection: this.RTCPeerConnection,\n               RTCSessionDescription: this.RTCSessionDescription,\n               RTCIceCandidate: this.RTCIceCandidate},\n    self = this,\n    dataChannelCallbacks = {\n      // onOpenFn is called at the point messages will actually get through.\n      onOpenFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onOpenDataChannel\",\n                         { channelId: info.label});\n      },\n      onCloseFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onCloseDataChannel\",\n                         { channelId: info.label});\n      },\n      // Default on real message prints it to console.\n      onMessageFn: function (dataChannel, info, event) {\n        if (event.data instanceof ArrayBuffer) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'buffer': event.data\n          });\n        } else if (event.data instanceof Blob) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'binary': event.data\n          });\n        } else if (typeof (event.data) === 'string') {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'text': event.data\n          });\n        }\n      },\n      // Default on error, prints it.\n      onErrorFn: function (dataChannel, info, err) {\n        console.error(dataChannel.peerName + \": dataChannel(\" +\n                      dataChannel.dataChannel.label + \"): error: \", err);\n      }\n    },\n    channelId,\n    openDataChannelContinuation;\n\n  this.peer = new SimpleDataPeer(this.peerName, stunServers,\n                                 dataChannelCallbacks, mocks);\n\n  // Setup link between Freedom messaging and _peer's signalling.\n  // Note: the signalling channel should only be sending receiveing strings.\n  this.core.bindChannel(signallingChannelId, function (channel) {\n    this.signallingChannel = channel;\n    this.peer.setSendSignalMessage(function (msg) {\n      this.signallingChannel.emit('message', msg);\n    }.bind(this));\n    this.signallingChannel.on('message',\n        this.peer.handleSignalMessage.bind(this.peer));\n    this.signallingChannel.emit('ready');\n    if (!initiateConnection) {\n      this.peer.runWhenConnected(continuation);\n    }\n  }.bind(this));\n\n  if (initiateConnection) {\n    // Setup a connection right away, then invoke continuation.\n    console.log(this.peerName + ' initiating connection');\n    channelId = 'hello' + Math.random().toString();\n    openDataChannelContinuation = function (success, error) {\n      if (error) {\n        continuation(undefined, error);\n      } else {\n        this.closeDataChannel(channelId, continuation);\n      }\n    }.bind(this);\n    this.openDataChannel(channelId, openDataChannelContinuation);\n  }\n};\n\nPeerConnection.prototype.createOffer = function (constraints, continuation) {\n  this.peer.createOffer(constraints, continuation);\n};\n\n// TODO: delay continuation until the open callback from _peer is called.\nPeerConnection.prototype.openDataChannel = function (channelId, continuation) {\n  this.peer.openDataChannel(channelId, continuation);\n};\n\nPeerConnection.prototype.closeDataChannel = function (channelId, continuation) {\n  this.peer.closeChannel(channelId);\n  continuation();\n};\n\n// Called to send a message over the given datachannel to a peer. If the data\n// channel doesn't already exist, the DataPeer creates it.\nPeerConnection.prototype.send = function (sendInfo, continuation) {\n  var objToSend = sendInfo.text || sendInfo.buffer || sendInfo.binary;\n  if (typeof objToSend === 'undefined') {\n    console.error(\"No valid data to send has been provided.\", sendInfo);\n    return;\n  }\n  //DEBUG\n  // objToSend = new ArrayBuffer(4);\n  //DEBUG\n  this.peer.send(sendInfo.channelLabel, objToSend, continuation);\n};\n\nPeerConnection.prototype.getBufferedAmount = function (channelId, continuation) {\n  continuation(this.peer.getBufferedAmount(channelId));\n};\n\nPeerConnection.prototype.close = function (continuation) {\n  if (this.peer.isClosed()) {\n    // Peer already closed, run continuation without dispatching event.\n    continuation();\n    return;\n  }\n  this.peer.close();\n  this.dispatchEvent(\"onClose\");\n  continuation();\n};\n\nexports.provider = PeerConnection;\nexports.name = 'core.peerconnection';\nexports.flags = {module: true};\n","/*jslint sloppy:true, node:true */\n/*globals Components, ArrayBuffer */\n\nvar util = require('../../src/util');\n\nvar eventNames = [\n  'onopen',\n  'onerror',\n  'onclose',\n  'onmessage'\n];\n\nvar unAttachedChannels = {};\nvar pendingEvents = {};\nvar allocateChannel = function (dataChannel) {\n  var id = util.getId();\n  unAttachedChannels[id] = dataChannel;\n  pendingEvents[id] = [];\n  eventNames.forEach(function(eventName) {\n    // This listener will be overridden (re-set) after the constructor runs.\n    var handler = function(event) {\n      var currentHandler = dataChannel[eventName];\n      if (currentHandler === handler) {\n        pendingEvents[id].push(event);\n      } else if (typeof currentHandler === 'function') {\n        // If an event somehow runs on this event handler after it has been\n        // replaced, forward that event to the new event handler.\n        currentHandler(event);\n      } else {\n        throw new Error('No handler for ' + event.type + ' event');\n      }\n    };\n    dataChannel[eventName] = handler;\n  });\n  return id;\n};\n\nvar RTCDataChannelAdapter = function (cap, dispatchEvents, id) {\n  this.dispatchEvent = dispatchEvents;\n  if (!unAttachedChannels[id]) {\n    console.warn('Invalid ID, creating acting on unattached DataChannel');\n    var Connection = require('./core.rtcpeerconnection').provider,\n      provider = new Connection();\n    id = provider.createDataChannel();\n    provider.close();\n  }\n\n  this.channel = unAttachedChannels[id];\n  delete unAttachedChannels[id];\n\n  // After the constructor returns, and the caller has a chance to register\n  // event listeners, fire all pending events, and then ensure that all\n  // subsequent events are handled immediately.\n  setTimeout(function() {\n    this.drainPendingEvents(id);\n\n    // This function must not be called until after the pending events are\n    // drained, to ensure that messages are delivered in order.\n    this.manageEvents(true);\n  }.bind(this), 0);\n};\n\nRTCDataChannelAdapter.prototype.drainPendingEvents = function(id) {\n  pendingEvents[id].forEach(function(event) {\n    this['on' + event.type](event);\n  }.bind(this));\n  delete pendingEvents[id];\n};\n\n// Attach or detach listeners for events against the connection.\nRTCDataChannelAdapter.prototype.manageEvents = function (attach) {\n  eventNames.forEach(function (eventName) {\n    if (attach) {\n      this[eventName] = this[eventName].bind(this);\n      this.channel[eventName] = this[eventName];\n    } else {\n      delete this.channel[eventName];\n    }\n  }.bind(this));\n};\n\nRTCDataChannelAdapter.prototype.getLabel = function (callback) {\n  callback(this.channel.label);\n};\n\nRTCDataChannelAdapter.prototype.getOrdered = function (callback) {\n  callback(this.channel.ordered);\n};\n\nRTCDataChannelAdapter.prototype.getMaxPacketLifeTime = function (callback) {\n  callback(this.channel.maxPacketLifeTime);\n};\n\nRTCDataChannelAdapter.prototype.getMaxRetransmits = function (callback) {\n  callback(this.channel.maxRetransmits);\n};\n\nRTCDataChannelAdapter.prototype.getProtocol = function (callback) {\n  callback(this.channel.protocol);\n};\n\nRTCDataChannelAdapter.prototype.getNegotiated = function (callback) {\n  callback(this.channel.negotiated);\n};\n\nRTCDataChannelAdapter.prototype.getId = function (callback) {\n  callback(this.channel.id);\n};\n\nRTCDataChannelAdapter.prototype.getReadyState = function (callback) {\n  callback(this.channel.readyState);\n};\n\nRTCDataChannelAdapter.prototype.getBufferedAmount = function (callback) {\n  callback(this.channel.bufferedAmount);\n};\n\nRTCDataChannelAdapter.prototype.getBinaryType = function (callback) {\n  callback(this.channel.binaryType);\n};\nRTCDataChannelAdapter.prototype.setBinaryType = function (binaryType, callback) {\n  this.channel.binaryType = binaryType;\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.send = function (text, callback) {\n  this.channel.send(text);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.sendBuffer = function (buffer, callback) {\n  this.channel.send(buffer);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.close = function (callback) {\n  if (!this.channel) {\n    return callback();\n  }\n  this.manageEvents(false);\n  this.channel.close();\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.onopen = function (event) {\n  this.dispatchEvent('onopen', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onerror = function (event) {\n  this.dispatchEvent('onerror', {\n    errcode: event.type,\n    message: event.message\n  });\n};\n\nRTCDataChannelAdapter.prototype.onclose = function (event) {\n  this.dispatchEvent('onclose', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onmessage = function (event) {\n  if (typeof event.data === 'string') {\n    this.dispatchEvent('onmessage', {text: event.data});\n  } else if (this.channel.binaryType === 'arraybuffer' &&\n      typeof Components !== 'undefined' &&\n      !(event.data instanceof ArrayBuffer)) {\n    // In Firefox Addons, incoming array buffers are not always owned by the\n    // Addon context. The following line clones the object to take ownership.\n    // See: https://developer.mozilla.org/en-US/docs/Components.utils.cloneInto\n    var myData = Components.utils.cloneInto(event.data, {});\n    this.dispatchEvent('onmessage', {buffer: myData});\n  } else {\n    this.dispatchEvent('onmessage', {buffer: event.data});\n  }\n};\n\nexports.name = \"core.rtcdatachannel\";\nexports.provider = RTCDataChannelAdapter;\nexports.allocate = allocateChannel;\n","/*jslint indent:2,sloppy:true, node:true */\n\nvar adapter = require('webrtc-adapter');\nvar PromiseCompat = require('es6-promise').Promise;\nvar RTCPeerConnection = adapter.RTCPeerConnection;\nvar RTCSessionDescription = adapter.RTCSessionDescription;\nvar RTCIceCandidate = adapter.RTCIceCandidate;\n\nvar DataChannel = require('./core.rtcdatachannel');\n\nvar RTCPeerConnectionAdapter = function (cap, dispatchEvent, configuration) {\n  this.dispatchEvent = dispatchEvent;\n  try {\n    this.connection = new RTCPeerConnection(configuration);\n  } catch (e) {\n    // Note: You can't ask the provider to close you synchronously, since\n    // the constructor has not yet returned, so there's no 'this' that\n    // the provider can know about yet.\n    setTimeout(cap.provider.close.bind(cap.provider, this), 0);\n    return;\n  }\n\n  this.events = [\n    'ondatachannel',\n    'onnegotiationneeded',\n    'onicecandidate',\n    'onsignalingstatechange',\n    'onaddstream',\n    'onremovestream',\n    'oniceconnectionstatechange'\n  ];\n  this.manageEvents(true);\n};\n\n// Attach or detach listeners for events against the connection.\nRTCPeerConnectionAdapter.prototype.manageEvents = function (attach) {\n  this.events.forEach(function (event) {\n    if (attach) {\n      this[event] = this[event].bind(this);\n      this.connection[event] = this[event];\n    } else if (this.connection) {\n      delete this.connection[event];\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createOffer = function (constraints) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createOffer(resolve, reject, constraints);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createAnswer = function () {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createAnswer(resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.setLocalDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setLocalDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalDescription = function () {\n  return PromiseCompat.resolve(this.connection.localDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.setRemoteDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setRemoteDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteDescription = function () {\n  return PromiseCompat.resolve(this.connection.remoteDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.getSignalingState = function () {\n  return PromiseCompat.resolve(this.connection.signalingState);\n};\n\nRTCPeerConnectionAdapter.prototype.updateIce = function (configuration) {\n  this.connection.updateIce(configuration);\n  return PromiseCompat.resolve();\n};\n\nRTCPeerConnectionAdapter.prototype.addIceCandidate = function (candidate) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.addIceCandidate(new RTCIceCandidate(candidate),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getIceGatheringState = function () {\n  return PromiseCompat.resolve(this.connection.iceGatheringState);\n};\n\nRTCPeerConnectionAdapter.prototype.getIceConnectionState = function () {\n  return PromiseCompat.resolve(this.connection.iceConnectionState);\n};\n\nRTCPeerConnectionAdapter.prototype.getConfiguration = function () {\n  var configuration = this.connection.getConfiguration();\n  return PromiseCompat.resolve(configuration);\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getStreamById = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.addStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.removeStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.close = function () {\n  if (!this.connection) {\n    return PromiseCompat.resolve();\n  }\n  this.manageEvents(false);\n  try {\n    this.connection.close();\n    return PromiseCompat.resolve();\n  } catch (e) {\n    return PromiseCompat.reject({\n      errcode: e.name,\n      message: e.message\n    });\n  }\n};\n\nRTCPeerConnectionAdapter.prototype.createDataChannel = function (label, dataChannelDict) {\n  var id = DataChannel.allocate(this.connection.createDataChannel(label, dataChannelDict));\n  return PromiseCompat.resolve(id);\n};\n\nRTCPeerConnectionAdapter.prototype.getStats = function (selector) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.getStats(selector, resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.ondatachannel = function (event) {\n  var id = DataChannel.allocate(event.channel);\n  this.dispatchEvent('ondatachannel', {channel: id});\n};\n\nRTCPeerConnectionAdapter.prototype.onnegotiationneeded = function (event) {\n  this.dispatchEvent('onnegotiationneeded', event.message);\n};\n\nRTCPeerConnectionAdapter.prototype.onicecandidate = function (event) {\n  var msg;\n  if (event.candidate && event.candidate.candidate) {\n    msg = {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex\n      }\n    };\n  } else {\n    msg = {\n      candidate: null\n    };\n  }\n  this.dispatchEvent('onicecandidate', msg);\n};\n  \nRTCPeerConnectionAdapter.prototype.onsignalingstatechange = function (event) {\n  this.dispatchEvent('onsignalingstatechange', event.message);\n};\n  \nRTCPeerConnectionAdapter.prototype.onaddstream = function (event) {\n  //TODO: provide ID of allocated stream.\n  this.dispatchEvent('onaddstream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.onremovestream = function (event) {\n  //TODO: provide ID of deallocated stream.\n  this.dispatchEvent('onremovestream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.oniceconnectionstatechange = function (event) {\n  this.dispatchEvent('oniceconnectionstatechange', event.message);\n};\n\n\nexports.name = \"core.rtcpeerconnection\";\nexports.provider = RTCPeerConnectionAdapter;\nexports.style = \"providePromises\";\nexports.flags = {provider: true};\n","/*globals localStorage */\n/*jslint indent:2,sloppy:true,node:true */\nvar util = require('../../src/util');\n\n/**\n * A FreeDOM core.storage provider that depends on localStorage\n * Thus, this only works in the context of a webpage and has\n * some size limitations.\n * Note that this can conflict with other scripts using localStorage\n * as keys are raw\n * @Class Storage_unprivileged\n * @constructor\n * @private\n * @param {Object} cap Capabilities for the provider\n */\nvar Storage_unprivileged = function (cap, dispatchEvent) {\n  util.handleEvents(this);\n};\n\n/**\n * Lists keys in the storage repository\n * @method keys\n */\nStorage_unprivileged.prototype.keys = function (continuation) {\n  var result = [],\n    i;\n  for (i = 0; i < localStorage.length; i += 1) {\n    result.push(localStorage.key(i));\n  }\n  continuation(result);\n};\n\n/**\n * Get a key from the storage repository.\n * @param {String} key The item to get from storage.\n * @method get\n */\nStorage_unprivileged.prototype.get = function (key, continuation) {\n  try {\n    var val = localStorage.getItem(key);\n    continuation(val);\n  } catch (e) {\n    continuation(null);\n  }\n};\n\n/**\n * Set a key in the storage repository.\n * @param {String} key The item to save in storage.\n * @param {String} value The value to save in storage.\n * @method set\n */\nStorage_unprivileged.prototype.set = function (key, value, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.setItem(key, value);\n  continuation(ret);\n};\n\n/**\n * Remove a key from the storage repository.\n * @param {String} key The item to remove from storage;\n * @method remove\n */\nStorage_unprivileged.prototype.remove = function (key, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.removeItem(key);\n  continuation(ret);\n};\n\n/**\n * Reset the contents of the storage repository.\n * @method clear\n */\nStorage_unprivileged.prototype.clear = function (continuation) {\n  localStorage.clear();\n  continuation();\n};\n\nexports.provider = Storage_unprivileged;\nexports.name = 'core.storage';\n","/*jslint indent:2,white:true,sloppy:true,node:true */\nvar EventInterface = require('../../src/proxy/eventInterface');\nvar Consumer = require('../../src/consumer');\nvar util = require('../../src/util');\n\n/**\n * Core freedom services available to all modules.\n * Created by the environment helper in response to a 'core' request.\n * @Class Core_unprivileged\n * @constructor\n * @param {Manager} manager The manager this core is connected with.\n * @private\n */\nvar Core_unprivileged = function(manager, postMessage) {\n  this.manager = manager.module;\n  this.debug = this.manager.debug;\n};\n\nCore_unprivileged.unboundChannels = {};\n\nCore_unprivileged.contextId = undefined;\nCore_unprivileged.moduleInternal = undefined;\n\n/**\n * Create a custom channel.\n * Returns the structure {channel: Proxy, identifier: Object},\n * where the identifier can be 'redeemed' by another module or provider using\n * bind channel, at which point the deferred object will resolve with a channel\n * between the two endpoints.\n * @method createChannel\n * @params {Function} continuation Method to call with the cosntructed structure.\n */\nCore_unprivileged.prototype.createChannel = function(continuation) {\n  var proxy = new Consumer(EventInterface, this.manager.debug),\n      id = util.getId(),\n      chan = this.getChannel(proxy);\n  this.manager.setup(proxy);\n\n  if (this.isInModule()) {\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'register',\n        id: id\n      }\n    });\n  }\n  Core_unprivileged.unboundChannels[id] = {\n    local: true,\n    proxy: proxy\n  };\n\n  proxy.once('start', this.getChannel.bind(this, proxy));\n\n  continuation({\n    channel: chan,\n    identifier: id\n  });\n};\n\nCore_unprivileged.prototype.getChannel = function(proxy) {\n  var iface = proxy.getProxyInterface(),\n      chan = iface();\n  chan.close = iface.close;\n  chan.onClose = iface.onClose;\n  iface.onClose(chan, function() {\n    proxy.doClose();\n  });\n  return chan;\n};\n\n/**\n * Receive a message from another core instance.\n * Note: Core_unprivileged is not registered on the hub. it is a provider,\n *     as it's location and name would indicate. This function is called by\n *     port-app to relay messages up to higher levels.  More generally, the\n *     messages emitted by the core to 'this.manager.emit(this.mananage.delegate'\n *     Should be onMessaged to the controlling core.\n * @param {String} source The source of the message.\n * @param {Object} msg The messsage from an isolated core provider.\n */\nCore_unprivileged.prototype.onMessage = function(source, msg) {\n  if (msg.type === 'register') {\n    Core_unprivileged.unboundChannels[msg.id] = {\n      remote: true,\n      resolve: msg.reply,\n      source: source\n    };\n  } else if (msg.type === 'clear') {\n    delete Core_unprivileged.unboundChannels[msg.id];\n  } else if (msg.type === 'bind') {\n    if (Core_unprivileged.unboundChannels[msg.id]) {\n      this.bindChannel(msg.id, function() {}, source);\n    }\n  } else if (msg.type === 'require') {\n    source.require(msg.id, msg.manifest);\n  }\n};\n\n/**\n * Bind a custom channel.\n * Creates a proxy interface to the custom channel, which will be bound to\n * the proxy obtained through an earlier createChannel call.\n * channel to a proxy.\n * @method bindChannel\n * @param {Object} identifier An identifier obtained through createChannel.\n * @param {Function} continuation A function to be called with the proxy.\n */\nCore_unprivileged.prototype.bindChannel = function(identifier, continuation, source) {\n  var toBind = Core_unprivileged.unboundChannels[identifier],\n      newSource = !source;\n\n  // when bindChannel is called directly, source will be undefined.\n  // When it is propogated by onMessage, a source for binding will already exist.\n  if (newSource) {\n    this.debug.debug('making local proxy for core binding');\n    source = new Consumer(EventInterface, this.debug);\n    this.manager.setup(source);\n  }\n\n  // If this is a known identifier and is in the same context, binding is easy.\n  if (toBind && toBind.local) {\n    this.debug.debug('Binding a channel to port on this hub:' + source);\n    this.manager.createLink(source, identifier, toBind.proxy, 'default');\n    delete Core_unprivileged.unboundChannels[identifier];\n    if (this.manager.delegate && this.manager.toDelegate.core) {\n      this.manager.emit(this.manager.delegate, {\n        type: 'Delegation',\n        request: 'handle',\n        flow: 'core',\n        message: {\n          type: 'clear',\n          id: identifier\n        }\n      });\n    }\n  } else if (toBind && toBind.remote) {\n    this.debug.debug('Binding a channel into a module.');\n    this.manager.createLink(\n        source,\n        newSource ? 'default' : identifier,\n        toBind.source,\n        identifier);\n    toBind.resolve({\n      type: 'Bind Channel',\n      request:'core',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    delete Core_unprivileged.unboundChannels[identifier];\n  } else if (this.isInModule()) {\n    this.debug.info('delegating channel bind for an unknown ID:' + identifier);\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    source.once('start', function(p, cb) {\n      cb(this.getChannel(p));\n    }.bind(this, source, continuation));\n    this.manager.createLink(source,\n        'default',\n        this.manager.hub.getDestination(this.manager.delegate),\n        identifier);\n    delete Core_unprivileged.unboundChannels[identifier];\n    return;\n  } else {\n    this.debug.warn('Asked to bind unknown channel: ' + identifier);\n    this.debug.log(Core_unprivileged.unboundChannels);\n    continuation();\n    return;\n  }\n\n  if (source.getInterface) {\n    continuation(this.getChannel(source));\n  } else {\n    continuation();\n  }\n};\n\n/**\n * @method isInModule\n * @private\n * @returns {Boolean} Whether this class is running in a module.\n */\nCore_unprivileged.prototype.isInModule = function () {\n  return (this.manager.delegate && this.manager.toDelegate.core);\n};\n\n/**\n * Require a dynamic dependency for your freedom module.\n * If new permissions are needed beyond what are already available to the\n * freedom context, the user will need to approve of the requested permissions.\n * @method require\n * @param {String} manifest The URL of the manifest to require.\n * @param {String} api The API of the dependency to expose if not default.\n * @param {Function} callback The function to call with the dependency.\n */\nCore_unprivileged.prototype.require = function (manifest, api, callback) {\n  if (this.isInModule() && Core_unprivileged.moduleInternal) {\n    // Register a callback with moduleInternal.\n    // DependencyName is the name of the channel moduelInternal will allocate\n    // callback will be called once a link to that channel is seen.\n    var dependencyName =\n        Core_unprivileged.moduleInternal.registerId(api, callback);\n\n    // Request the dependency be added.\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'require',\n        manifest: manifest,\n        id: dependencyName\n      }\n    });\n  } else {\n    this.debug.error('The require function in external context makes no sense' +\n        ' Instead create a new freedom() context.');\n    callback(undefined, {\n      errcode: 'InvalidContext',\n      message: 'Cannot call require() from this context.'\n    });\n  }\n};\n\n/**\n * Get the ID of the current freedom.js context.  Provides an\n * array of module URLs, the lineage of the current context.\n * When not in an application context, the ID is the lineage\n * of the current View.\n * @method getId\n * @param {Function} callback The function called with ID information.\n */\nCore_unprivileged.prototype.getId = function(callback) {\n  // TODO: make sure contextID is properly frozen.\n  callback(Core_unprivileged.contextId);\n};\n\n/**\n * Get a logger for logging to the freedom.js logger. Provides a\n * log object with an interface similar to the standard javascript console,\n * which logs via debug.\n * @method getLogger\n * @param {String} name The name of the logger, used as its 'source'\n * @param {Function} callback The function to call with the logger.\n */\nCore_unprivileged.prototype.getLogger = function(name, callback) {\n  callback(this.manager.debug.getLogger(name));\n};\n\n/**\n * Set the ID of the current freedom.js context.\n * @method setId\n * @private\n * @param {String[]} id The lineage of the current context.\n * @param {ModuleInternal} moduleInternal The Module environment if one exists.\n */\nCore_unprivileged.prototype.setId = function(id, moduleInternal) {\n  Core_unprivileged.contextId = id;\n  Core_unprivileged.moduleInternal = moduleInternal;\n};\n\nexports.provider = Core_unprivileged;\nexports.name = \"core\";\nexports.flags = {module: true};\n","/*globals document */\r\n/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('../../src/util');\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\n/**\r\n * A freedom.js view is the interface for user interaction.\r\n * A view exists as an iFrame, which is shown to the user in some way.\r\n * communication between the view and the freedom.js module is performed\r\n * through the HTML5 postMessage mechanism, which this provider translates\r\n * to freedom.js message events.\r\n * @Class View_unprivileged\r\n * @constructor\r\n * @private\r\n * @param {View Provider} provider\r\n * @param {provider:Provider,module:Module} cap The instantiator of the view.\r\n * @param {Function} dispatchEvent Function to call to emit events.\r\n */\r\nvar Core_View = function (provider, cap, dispatchEvent) {\r\n  this.provider = provider;\r\n  this.dispatchEvent = dispatchEvent;\r\n  setTimeout(cap.provider.onClose.bind(\r\n    cap.provider,\r\n    this,\r\n    this.close.bind(this, function () {})\r\n  ), 0);\r\n  this.module = cap.module;\r\n  util.handleEvents(this);\r\n};\r\n\r\n/**\r\n * The is the default provider for core.view, unless overridden by context or\r\n * a user supplied provider. The interface is documented at:\r\n * https://github.com/freedomjs/freedom/wiki/freedom.js-Views\r\n *\r\n * Generally, a view provider consists of 3 methods:\r\n * onOpen is called when a view should be shown.\r\n *     id - is a unique identifier for this view, used on subsequent calls\r\n *          for communication and to eventually close the view.\r\n *     name - is the name of the view (as defined in the manifest),\r\n *            in order to place it appropriately.\r\n *     page - is the resolved URL to open.\r\n *     resources - is an array of resolved URLs which are referenced.\r\n *     postMessage - is a function to call when messages are emitted\r\n *                   by the window in which the view is opened.\r\n * onOpen returns a promise that completes when the view is loaded.\r\n * onMessage is called to send a message to an open view.\r\n *     id - is the unique identifier for the open view.\r\n *     message - is the message to postMessage to the view's window.\r\n * onClose is called to close a view.\r\n *     id - is the unique identifier for the view.\r\n */\r\nCore_View.provider = {\r\n  listener: undefined,\r\n  active: {},\r\n  onOpen: function (id, name, page, resources, postMessage) {\r\n    var container = document.body,\r\n      root,\r\n      frame;\r\n    \r\n    if (!this.listener) {\r\n      this.listener = function (msg) {\r\n        var i;\r\n        for (i in this.active) {\r\n          if (this.active.hasOwnProperty(i) &&\r\n              this.active[i].source === msg.source) {\r\n            this.active[i].postMessage(msg.data);\r\n          }\r\n        }\r\n      }.bind(this);\r\n      window.addEventListener('message', this.listener, true);\r\n    }\r\n\r\n    // Views open by default in an element with their ID, or fill the page\r\n    // otherwise.\r\n    if (document.getElementById(name)) {\r\n      container = document.getElementById(name);\r\n    }\r\n\r\n    root = document.createElement(\"div\");\r\n    root.style.width = \"100%\";\r\n    root.style.height = \"100%\";\r\n    root.style.display = \"relative\";\r\n\r\n    container.appendChild(root);\r\n    \r\n    return new PromiseCompat(function (resolve, reject) {\r\n      frame = document.createElement(\"iframe\");\r\n      frame.setAttribute(\"sandbox\", \"allow-scripts allow-forms\");\r\n      frame.style.width = \"100%\";\r\n      frame.style.height = \"100%\";\r\n      frame.style.border = \"0\";\r\n      frame.style.background = \"transparent\";\r\n      frame.src = page;\r\n      frame.addEventListener('load', resolve, true);\r\n      frame.addEventListener('error', reject, true);\r\n\r\n      root.appendChild(frame);\r\n\r\n      this.active[id] = {\r\n        postMessage: postMessage,\r\n        container: container,\r\n        root: root,\r\n        source: frame.contentWindow\r\n      };\r\n    }.bind(this));\r\n  },\r\n  onMessage: function (id, message) {\r\n    this.active[id].source.postMessage(message, '*');\r\n  },\r\n  onClose: function (id) {\r\n    this.active[id].container.removeChild(this.active[id].root);\r\n    delete this.active[id];\r\n    \r\n    if (Object.keys(this.active).length === 0) {\r\n      window.removeEventListener('message', this.listener, true);\r\n      this.listener = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Ask for this view to open a specific location, either a File relative to\r\n * the loader, or an explicit code location.\r\n * @method show\r\n * @param {String} name The identifier of the view.\r\n * @param {Function} continuation Function to call when view is loaded.\r\n */\r\nCore_View.prototype.show = function (name, continuation) {\r\n  if (this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'ALREADY_OPEN',\r\n      message: 'Cannot show multiple views through one instance.'\r\n    });\r\n  }\r\n  this.id = util.getId();\r\n\r\n  var config = this.module.manifest.views,\r\n    toResolve = [];\r\n  if (!config || !config[name]) {\r\n    return continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n\r\n  if (config[name].main && config[name].files) {\r\n    toResolve = config[name].files.concat(config[name].main);\r\n    PromiseCompat.all(toResolve.map(function (fname) {\r\n      return this.module.resource.get(this.module.manifestId, fname);\r\n    }.bind(this))).then(function (files) {\r\n      this.provider.onOpen(this.id,\r\n          name,\r\n          files[files.length - 1],\r\n          files,\r\n          this.dispatchEvent.bind(this, 'message')).then(\r\n        function (c) {\r\n          // Make sure continuation is called without an argument.\r\n          c();\r\n        }.bind({}, continuation),\r\n        continuation.bind({}, undefined)\r\n      );\r\n    }.bind(this), function (err) {\r\n      this.module.debug.error('Unable to open view ' + name + ': ', err);\r\n      continuation(undefined, {\r\n        errcode: 'VIEW_MALFORMED',\r\n        message: 'Malformed View Declaration: ' + err\r\n      });\r\n    });\r\n  } else {\r\n    continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * isSecure determines whether the module can have confidence that its\r\n * communication with its view cannot be intercepted by an untrusted 3rd party.\r\n * In practice, this means that its okay for the runtime to have access to the\r\n * messages, and if the context is a web server or a browser extension then\r\n * that context is trusted. However, if a provider wants to allow their e.g.\r\n * social provider to be used on arbitrary websites, this mechanism means that\r\n * if the website uses a trusted version of the freedom.js library, then the\r\n * module can be used.\r\n * @method isSecure\r\n * @returns {Boolean} if the channel to the view is secure.\r\n */\r\nCore_View.prototype.isSecure = function (continuation) {\r\n  continuation(false);\r\n};\r\n\r\n/**\r\n * Send a message to an open view.\r\n * @method postMessage\r\n */\r\nCore_View.prototype.postMessage = function (msg, continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot post message to uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onMessage(this.id, msg);\r\n  continuation();\r\n};\r\n\r\n/**\r\n * Close an active view.\r\n * @method close\r\n */\r\nCore_View.prototype.close = function (continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot close uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onClose(this.id);\r\n  delete this.id;\r\n\r\n  continuation();\r\n};\r\n\r\n\r\n/**\r\n * Allow a web page to redefine behavior for how views are shown.\r\n * @method register\r\n * @static\r\n * @param {Function} PageProvider The custom view behavior.\r\n */\r\nCore_View.register = function (PageProvider) {\r\n  var provider = PageProvider ? new PageProvider() : Core_View.provider;\r\n  exports.provider = Core_View.bind(this, provider);\r\n};\r\n\r\nexports.provider = Core_View.bind(this, Core_View.provider);\r\nexports.name = 'core.view';\r\nexports.register = Core_View.register;\r\nexports.flags = {provider: true, module: true};\r\n","/*globals WebSocket, ArrayBuffer, Blob, Uint8Array, console */\n/*jslint sloppy:true, node:true */\n\nvar WSHandle = null;\nvar nodeStyle = false;\n\n/**\n * A WebSocket core provider\n *\n * @param {Object} cap Capabilities for the provider\n * @param {Function} dispatchEvent Function to dispatch events.\n * @param {String} url The Remote URL to connect with.\n * @param {String[]} protocols SubProtocols to open.\n * @param {WebSocket?} socket An alternative socket class to use.\n */\nvar WS = function (cap, dispatchEvent, url, protocols, socket) {\n  var WSImplementation = null,\n    error;\n  this.isNode = nodeStyle;\n  if (typeof socket !== 'undefined') {\n    WSImplementation = socket;\n  } else if (WSHandle !== null) {\n    WSImplementation = WSHandle;\n  } else if (typeof WebSocket !== 'undefined') {\n    WSImplementation = WebSocket;\n  } else {\n    console.error('Platform does not support WebSocket');\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    if (protocols) {\n      this.websocket = new WSImplementation(url, protocols);\n    } else {\n      this.websocket = new WSImplementation(url);\n    }\n    this.websocket.binaryType = 'arraybuffer';\n  } catch (e) {\n    error = {};\n    if (e instanceof SyntaxError) {\n      error.errcode = 'SYNTAX';\n    } else {\n      error.errcode = e.name;\n    }\n    error.message = e.message;\n    dispatchEvent('onError', error);\n    return;\n  }\n\n  if (this.isNode) {\n    this.websocket.on('message', this.onMessage.bind(this));\n    this.websocket.on('open', this.onOpen.bind(this));\n    // node.js websocket implementation not compliant\n    this.websocket.on('close', this.onClose.bind(this, {\n      code: 0,\n      reason: 'UNKNOWN',\n      wasClean: true\n    }));\n    this.websocket.on('error', this.onError.bind(this));\n  } else {\n    this.websocket.onopen = this.onOpen.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n};\n\nWS.prototype.send = function (data, continuation) {\n  var toSend = data.text || data.binary || data.buffer,\n    errcode,\n    message;\n\n  if (toSend) {\n    try {\n      // For node.js, we have to do weird buffer stuff\n      if (this.isNode && toSend instanceof ArrayBuffer) {\n        this.websocket.send(\n          new Uint8Array(toSend),\n          { binary: true },\n          this.onError.bind(this)\n        );\n      } else {\n        this.websocket.send(toSend);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        errcode = \"SYNTAX\";\n      } else {\n        errcode = \"INVALID_STATE\";\n      }\n      message = e.message;\n    }\n  } else {\n    errcode = \"BAD_SEND\";\n    message = \"No text, binary, or buffer data found.\";\n  }\n\n  if (errcode) {\n    continuation(undefined, {\n      errcode: errcode,\n      message: message\n    });\n  } else {\n    continuation();\n  }\n};\n\nWS.prototype.getReadyState = function (continuation) {\n  continuation(this.websocket.readyState);\n};\n\nWS.prototype.getBufferedAmount = function (continuation) {\n  continuation(this.websocket.bufferedAmount);\n};\n\nWS.prototype.close = function (code, reason, continuation) {\n  try {\n    if (code && reason) {\n      this.websocket.close(code, reason);\n    } else {\n      this.websocket.close();\n    }\n    continuation();\n  } catch (e) {\n    var errorCode;\n    if (e instanceof SyntaxError) {\n      errorCode = \"SYNTAX\";\n    } else {\n      errorCode = \"INVALID_ACCESS\";\n    }\n    continuation(undefined, {\n      errcode: errorCode,\n      message: e.message\n    });\n  }\n};\n\nWS.prototype.onOpen = function (event) {\n  this.dispatchEvent('onOpen');\n};\n\nWS.prototype.onMessage = function (event, flags) {\n  var data = {};\n  if (this.isNode && flags && flags.binary) {\n    data.buffer = new Uint8Array(event).buffer;\n  } else if (this.isNode) {\n    data.text = event;\n  } else if (typeof ArrayBuffer !== 'undefined' && event.data instanceof ArrayBuffer) {\n    data.buffer = event.data;\n  } else if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n    data.binary = event.data;\n  } else if (typeof event.data === 'string') {\n    data.text = event.data;\n  }\n  this.dispatchEvent('onMessage', data);\n};\n\nWS.prototype.onError = function (event) {\n  // Nothing to pass on\n  // See: http://stackoverflow.com/a/18804298/300539\n  this.dispatchEvent('onError');\n};\n\nWS.prototype.onClose = function (event) {\n  this.dispatchEvent('onClose',\n                     {code: event.code,\n                      reason: event.reason,\n                      wasClean: event.wasClean});\n};\n\nexports.provider = WS;\nexports.name = 'core.websocket';\nexports.setSocket = function (impl, isNode) {\n  WSHandle = impl;\n  nodeStyle = isNode;\n};\n","/*jshint node:true*/\n/*global */\nvar PromiseCompat = require('es6-promise').Promise;\nvar XhrClass = null;\n\nvar XhrProvider = function(cap, dispatchEvent) {\n  \"use strict\";\n  if (typeof window !== \"undefined\" &&\n      typeof window.XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom\n    XhrClass = window.XMLHttpRequest;\n  } else if (typeof XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom-for-firefox\n    XhrClass = XMLHttpRequest;\n  } else if (XhrClass === null) {\n    console.error(\"Platform does not support XMLHttpRequest\");\n  }\n\n  this._dispatchEvent = dispatchEvent;\n  this._xhr = new XhrClass();\n\n  setTimeout(cap.provider.onClose.bind(\n    cap.provider,\n    this,\n    this.abort.bind(this)\n  ), 0);\n\n  this._events = [\n    \"loadstart\",\n    \"progress\",\n    \"abort\",\n    \"error\",\n    \"load\",\n    \"timeout\",\n    \"loadend\",\n    \"readystatechange\"\n  ];\n  this._setupListeners();\n\n};\n\nXhrProvider.prototype.open = function(method, url, async, user, password) {\n  \"use strict\";\n  if (typeof async !== \"undefined\" && async !== true) {\n    return PromiseCompat.reject({\n      errcode: \"InvalidAccessError\",\n      message: \"async should always be set to true\"\n    });\n  }\n\n  // Force async to be true. undefined can lead to async=false in Chrome packaged apps\n  this._xhr.open(method, url, true, user, password);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.send = function(data) {\n  \"use strict\";\n  if (!(data instanceof Object)) {\n    this._xhr.send();\n  } else if (data.hasOwnProperty(\"string\")) {\n    this._xhr.send(data.string);\n  } else if (data.hasOwnProperty(\"buffer\")) {\n    this._xhr.send(data.buffer);\n  } else {\n    this._xhr.send();\n  }\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.abort = function() {\n  \"use strict\";\n  this._xhr.abort();\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getResponseHeader = function(header) {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getResponseHeader(header));\n};\n\nXhrProvider.prototype.getAllResponseHeaders = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getAllResponseHeaders());\n};\n\nXhrProvider.prototype.setRequestHeader = function(header, value) {\n  \"use strict\";\n  this._xhr.setRequestHeader(header, value);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.overrideMimeType = function(mime) {\n  \"use strict\";\n  this._xhr.overrideMimeType(mime);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getReadyState = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.readyState);\n};\n\nXhrProvider.prototype.getResponse = function() {\n  \"use strict\";\n  if (this._xhr.response === null) {\n    return PromiseCompat.resolve(null);\n  } else if (this._xhr.responseType === \"text\" || this._xhr.responseType === \"\") {\n    return PromiseCompat.resolve({ string: this._xhr.response });\n  } else if (this._xhr.responseType === \"arraybuffer\") {\n    return PromiseCompat.resolve({ buffer: this._xhr.response });\n  } else if (this._xhr.responseType === \"json\") {\n    return PromiseCompat.resolve({ object: this._xhr.response });\n  }\n\n  return PromiseCompat.reject(\"core.xhr cannot determine type of response\");\n};\n\nXhrProvider.prototype.getResponseText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseText);\n};\n\nXhrProvider.prototype.getResponseURL = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseURL);\n};\n\nXhrProvider.prototype.getResponseType = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseType);\n};\n\nXhrProvider.prototype.setResponseType = function(type) {\n  \"use strict\";\n  this._xhr.responseType = type;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getStatus = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.status);\n};\n\nXhrProvider.prototype.getStatusText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.statusText);\n};\n\nXhrProvider.prototype.getTimeout = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.timeout);\n};\n\nXhrProvider.prototype.setTimeout = function(timeout) {\n  \"use strict\";\n  this._xhr.timeout = timeout;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getWithCredentials = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.withCredentials);\n};\n\nXhrProvider.prototype.setWithCredentials = function(wc) {\n  \"use strict\";\n  this._xhr.withCredentials = wc;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype._setupListeners = function() {\n  \"use strict\";\n  // Download events\n  this._events.forEach(function (eventName) {\n    this._xhr.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"on\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n\n  // Upload events\n  this._events.forEach(function (eventName) {\n    this._xhr.upload.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"onupload\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n};\n\nexports.name = \"core.xhr\";\nexports.provider = XhrProvider;\nexports.style = \"providePromises\";\nexports.flags = { provider: true };\nexports.setImpl = function(impl) {\n  \"use strict\";\n  XhrClass = impl;\n};\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar loadedOnStartup = false;\n\nvar TIMEOUT = 5000;\n\n/**\n * If there is redirection back to the page, and oAuthRedirectID is set,\n * then report the auth and close the window.\n */\nif (typeof window !== 'undefined' && window && window.location &&\n    window.addEventListener) {\n  window.addEventListener('load', function () {\n    \"use strict\";\n    loadedOnStartup = true;\n  }, true);\n\n  if (window.localStorage &&\n      window.location.href.indexOf(oAuthRedirectId) > 0) {\n    // This will trigger a 'storage' event on the window. See storageListener\n    window.localStorage.setItem(oAuthRedirectId, new Date());\n    window.close();\n  }\n}\n\nvar LocalPageAuth = function() {\n  \"use strict\";\n  this.listeners = {};\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nLocalPageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof window !== 'undefined' && window && loadedOnStartup) {\n    var here = window.location.protocol + \"//\" + window.location.host +\n        window.location.pathname;\n    if (redirectURIs.indexOf(here) > -1) {\n      continuation({\n        redirect: here,\n        state: oAuthRedirectId + Math.random()\n      });\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nLocalPageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var listener = this.storageListener.bind(this, continuation, stateObj);\n  this.listeners[stateObj.state] = listener;\n  window.addEventListener(\"storage\", listener, false);\n  // Start 'er up\n  window.open(authUrl);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (this.listeners[stateObj.state]) {\n        // Listener has not been deleted, indicating oauth has completed.\n        window.removeEventListener(\n            \"storage\", this.listeners[stateObj.state], false);\n        delete this.listeners[stateObj.state];\n        continuation(undefined, 'Error launching auth flow');\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * Handler for storage events, which relays them to waiting clients.\n * For the schema of the storage msg, see:\n * http://tutorials.jenkov.com/html5/local-storage.html#storage-events\n * @param {Function} continuation function to call with result\n * @param {Object.<string, string>} stateObj the return value from initiateOAuth\n\n * @param {Object} msg storage event\n */\nLocalPageAuth.prototype.storageListener = function(continuation, stateObj, msg) {\n  'use strict';\n  if (msg.url.indexOf(stateObj.state) > -1) {\n    window.removeEventListener(\"storage\", this.listeners[stateObj.state], false);\n    delete this.listeners[stateObj.state];\n    continuation(msg.url);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = LocalPageAuth;\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar TIMEOUT = 5000;\n\nfunction RemotePageAuth() {\n  \"use strict\";\n  this.listeners = {};\n}\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nRemotePageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof global !== 'undefined' && global && global.document) {\n    for (var i=0; i<redirectURIs.length; i++) {\n      // TODO: remove restriction on URL pattern match.\n      if ((redirectURIs[i].indexOf('http://') === 0 ||\n          redirectURIs[i].indexOf('https://') === 0) &&\n          redirectURIs[i].indexOf('oauth-relay.html') > 0) {\n        continuation({\n          redirect: redirectURIs[i],\n          state: oAuthRedirectId + Math.random()\n        });\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nRemotePageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var frame = global.document.createElement('iframe');\n  frame.src = stateObj.redirect;\n  frame.style.display = 'none';\n\n  global.document.body.appendChild(frame);\n  frame.addEventListener('load', function () {\n    this.listeners[stateObj.state] = continuation;\n    window.open(authUrl);\n\n    frame.contentWindow.postMessage(stateObj.state, '*');\n  }.bind(this));\n\n  var hasCredentials = false;\n  window.addEventListener('message', function (frame, msg) {\n    if (msg.data && msg.data.key && msg.data.url && this.listeners[msg.data.key]) {\n      hasCredentials = true;\n      this.listeners[msg.data.key](msg.data.url);\n      delete this.listeners[msg.data.key];\n      try {\n        document.body.removeChild(frame);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }.bind(this, frame), false);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (hasCredentials === false) {\n        continuation(undefined, 'Error launching auth flow');\n        delete this.listeners[stateObj.state];\n        try {\n          document.body.removeChild(frame);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = RemotePageAuth;\n","/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\n/**\n * The API registry for freedom.js.  Used to look up requested APIs,\n * and provides a bridge for core APIs to act like normal APIs.\n * @Class API\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Api = function(debug) {\n  this.debug = debug;\n  this.apis = {};\n  this.providers = {};\n  this.waiters = {};\n};\n\n/**\n * Get an API.\n * @method get\n * @param {String} api The API name to get.\n * @returns {{name:String, definition:API}} The API if registered.\n */\nApi.prototype.get = function(api) {\n  if (!this.apis[api]) {\n    return false;\n  }\n  return {\n    name: api,\n    definition: this.apis[api]\n  };\n};\n\n/**\n * Set an API to a definition.\n * @method set\n * @param {String} name The API name.\n * @param {API} definition The JSON object defining the API.\n */\nApi.prototype.set = function(name, definition) {\n  this.apis[name] = definition;\n};\n\n/**\n * Register a core API provider.\n * @method register\n * @param {String} name the API name.\n * @param {Function} constructor the function to create a provider for the API.\n * @param {String?} style The style the provider is written in. Valid styles\n *   are documented in fdom.port.Provider.prototype.getInterface. Defaults to\n *   provideAsynchronous\n * @param {Object?} flags Prefixed arguments needed by the core provider.\n *   valid keys are 'module', 'provider', and 'config'.\n */\nApi.prototype.register = function(name, constructor, style, flags) {\n  var i,\n    args;\n\n  this.providers[name] = {\n    constructor: constructor,\n    style: style || 'provideAsynchronous',\n    flags: flags || {}\n  };\n\n  if (this.waiters[name]) {\n    for (i = 0; i < this.waiters[name].length; i += 1) {\n      args = {};\n      if (flags.module) {\n        args.module = this.waiters[name][i].from;\n      }\n      if (flags.config) {\n        args.config = this.waiters[name][i].from.config;\n      }\n      this.waiters[name][i].resolve({\n        args: args,\n        inst: constructor.bind({}, args)\n      });\n    }\n    delete this.waiters[name];\n  }\n};\n\n/**\n * Get a core API connected to a given FreeDOM module.\n * @method getCore\n * @param {String} name the API to retrieve.\n * @param {Module} from The instantiating App.\n * @returns {Promise} A promise of a fdom.App look-alike (and argument object),\n * matching a local API definition.\n */\nApi.prototype.getCore = function(name, from) {\n  return new PromiseCompat(function(resolve, reject) {\n    if (this.apis[name]) {\n      if (this.providers[name]) {\n        var args = {};\n        if (this.providers[name].flags.module) {\n          args.module = from;\n        }\n        if (this.providers[name].flags.config) {\n          args.config = from.config;\n        }\n        resolve({\n          args: args,\n          inst: this.providers[name].constructor.bind({}, args)\n        });\n      } else {\n        if (!this.waiters[name]) {\n          this.waiters[name] = [];\n        }\n        this.waiters[name].push({\n          resolve: resolve,\n          reject: reject,\n          from: from\n        });\n      }\n    } else {\n      this.debug.warn('Api.getCore asked for unknown core: ' + name);\n      reject(null);\n    }\n  }.bind(this));\n};\n\n/**\n * Configure a {Provider} to provide a named core api on behalf of a\n * given port.\n * @param {String} name The name of the provider\n * @param {Provider} provider The provider that will provide the named api\n * @param {Module} from The module requesting the core provider.\n */\nApi.prototype.provideCore = function (name, provider, from) {\n  return this.getCore(name, from).then(function (core) {\n    var flags = this.providers[name].flags,\n      iface = provider.getProxyInterface();\n    if (flags.provider) {\n      core.args.provider = iface;\n    }\n    iface()[this.providers[name].style](core.inst);\n  }.bind(this), function (err) {\n    this.debug.error('Could not provide core: ', err);\n  }.bind(this));\n};\n\n/**\n * Shutdown the API registry, and reject any pending waiters.\n */\nApi.prototype.cleanup = function () {\n  var prop,\n    doReject = function (waiter) {\n      waiter.reject();\n    };\n  for (prop in this.waiters) {\n    if (this.waiters.hasOwnProperty(prop)) {\n      this.waiters[prop].forEach(doReject);\n    }\n  }\n  delete this.waiters;\n};\n\n/**\n * Defines the apis module and provider registry.\n */\nmodule.exports = Api;\n","/*jslint indent:2,node:true */\n\nvar Bundle = function () {\n  'use strict';\n  this.interfaces = require('../dist/bundle.compiled');\n};\n\n/**\n * Populate an API registry with provided providers, and with known API\n * definitions.\n * @static\n * @method register\n * @param {{name: string, provider: Function, style?: string}[]} providers\n *   The core providers made available to this freedom.js instance.\n * @param {Api} registry The API registry to populate.\n */\nexports.register = function (providers, registry) {\n  'use strict';\n  var bundle = new Bundle();\n  bundle.interfaces.forEach(function (api) {\n    if (api && api.name && api.api) {\n      registry.set(api.name, api.api);\n    }\n  });\n\n  providers.forEach(function (provider) {\n    if (provider.name) {\n      registry.register(provider.name,\n                        provider.provider,\n                        provider.style,\n                        provider.flags);\n    }\n  });\n};\n","/*globals Blob, ArrayBuffer, DataView */\n/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable api.\n * @class Consumer\n * @implements Port\n * @uses handleEvents\n * @param {Object} interfaceCls The api interface exposed by this consumer.\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Consumer = function (interfaceCls, debug) {\n  this.id = Consumer.nextId();\n  this.interfaceCls = interfaceCls;\n  this.debug = debug;\n  util.handleEvents(this);\n\n  this.ifaces = {};\n  this.closeHandlers = {};\n  this.errorHandlers = {};\n  this.emits = {};\n};\n\n/**\n * Receive incoming messages for this consumer.\n * @method onMessage\n * @param {String} source The source of the message.\n * @param {Object} message The received message.\n */\nConsumer.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.emitChannel = message.channel;\n    this.emit(this.emitChannel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    delete this.controlChannel;\n    this.doClose();\n  } else {\n    if (!this.emitChannel && message.channel) {\n      this.emitChannel = message.channel;\n      this.emit('start');\n      return;\n    }\n    if (message.type === 'close' && message.to) {\n      this.teardown(message.to);\n      return;\n    }\n    if (message.type === 'error') {\n      this.error(message.to, message.message);\n      return;\n    }\n    if (message.to) {\n      if (this.emits[message.to]) {\n        this.emits[message.to]('message', message.message);\n      } else {\n        this.debug.warn('Could not deliver message, no such interface: ' + message.to);\n      }\n    } else {\n      var msg = message.message;\n      util.eachProp(this.emits, function (iface) {\n        iface('message', message.message);\n      });\n    }\n  }\n};\n\n/**\n * Create a consumer.Interface associated with this consumer.\n * An interface is returned, which is supplied with important control of the\n * api via constructor arguments: (bound below in getInterfaceConstructor)\n *\n * onMsg: function(binder) sets the function to call when messages for this\n *    interface arrive on the channel,\n * emit: function(msg) allows this interface to emit messages,\n * id: string is the Identifier for this interface.\n * @method getInterface\n */\nConsumer.prototype.getInterface = function () {\n  var Iface = this.getInterfaceConstructor(),\n    args = Array.prototype.slice.call(arguments, 0);\n  if (args.length) {\n    Iface = Iface.bind.apply(Iface, [Iface].concat(args));\n  }\n  return new Iface();\n};\n\n/**\n * Attach an 'onEvent' listener to an interface, allowing external consumers\n * to either listen to channel state, or register callbacks on lifetime events\n * of individual instances of the interface.\n * @method getListener\n * @parma {String} name The event to listen to.\n * @private\n */\nConsumer.prototype.getListener = function (name) {\n  return function (instance, handler) {\n    // Listen to the channel directly.\n    if (typeof instance === 'function' && handler === undefined) {\n      this.once(name, instance);\n      return;\n    }\n\n    // Listen to a specific instance.\n    var handlers = name + 'Handlers';\n    util.eachProp(this.ifaces, function (candidate, id) {\n      if (candidate === instance) {\n        if (this[handlers][id]) {\n          this[handlers][id].push(handler);\n        } else {\n          this[handlers][id] = [handler];\n        }\n        return true;\n      }\n    }.bind(this));\n  }.bind(this);\n};\n\n/**\n * Create a function that can be used to get interfaces from this api consumer\n * from a user-visible point.\n * @method getProxyInterface\n */\nConsumer.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    if (args.length > 0) {\n      return p.getInterface.apply(p, args);\n    } else {\n      return p.getInterface();\n    }\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (candidate, id) {\n        if (candidate === iface) {\n          this.teardown(id);\n          this.emit(this.emitChannel, {\n            type: 'close',\n            to: id\n          });\n          return true;\n        }\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.doClose();\n    }\n  }.bind(this);\n\n  func.onClose = this.getListener('close');\n  func.onError = this.getListener('error');\n\n  return func;\n};\n\n/**\n * Provides a bound class for creating a consumer.Interface associated\n * with this api. This partial level of construction can be used\n * to allow the consumer to be used as a provider for another API.\n * @method getInterfaceConstructor\n * @private\n */\nConsumer.prototype.getInterfaceConstructor = function () {\n  var id = Consumer.nextId();\n  return this.interfaceCls.bind(\n    {},\n    function (id, obj, binder) {\n      this.ifaces[id] = obj;\n      this.emits[id] = binder;\n    }.bind(this, id),\n    this.doEmit.bind(this, id),\n    this.debug\n  );\n};\n\n/**\n * Emit a message on the channel once setup is complete.\n * @method doEmit\n * @private\n * @param {String} to The ID of the flow sending the message.\n * @param {Object} msg The message to emit\n * @param {Boolean} all Send message to all recipients.\n */\nConsumer.prototype.doEmit = function (to, msg, all) {\n  if (all) {\n    to = false;\n  }\n  if (this.emitChannel) {\n    this.emit(this.emitChannel, {to: to, type: 'message', message: msg});\n  } else {\n    this.once('start', this.doEmit.bind(this, to, msg));\n  }\n};\n\n/**\n * Teardown a single interface of this api.\n * @method teardown\n * @param {String} id The id of the interface to tear down.\n */\nConsumer.prototype.teardown = function (id) {\n  if (this.emits[id]) {\n    this.emits[id]('close');\n  }\n  delete this.emits[id];\n  if (this.closeHandlers[id]) {\n    util.eachProp(this.closeHandlers[id], function (prop) {\n      prop();\n    });\n  }\n  delete this.ifaces[id];\n  delete this.closeHandlers[id];\n  delete this.errorHandlers[id];\n};\n\n/**\n * Handle a message error reported to this api.\n * @method error\n * @param {String?} id The id of the interface where the error occured.\n * @param {Object} message The message which failed, if relevant.\n */\nConsumer.prototype.error = function (id, message) {\n  if (id && this.errorHandlers[id]) {\n    util.eachProp(this.errorHandlers[id], function (prop) {\n      prop(message);\n    });\n  } else if (!id) {\n    this.emit('error', message);\n  }\n};\n\n\n/**\n * Close / teardown the flow this api terminates.\n * @method doClose\n */\nConsumer.prototype.doClose = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Channel Closing',\n      request: 'close'\n    });\n  }\n\n  util.eachProp(this.emits, function (emit, id) {\n    this.teardown(id);\n  }.bind(this));\n\n  this.emit('close');\n  this.off();\n\n  this.emitChannel = null;\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return The description of this port.\n */\nConsumer.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Consumer \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Consumer]\";\n  }\n};\n\n/**\n * Get the next ID for an api channel.\n * @method nextId\n * @static\n * @private\n */\nConsumer.nextId = function () {\n  if (!Consumer.id) {\n    Consumer.id = 1;\n  }\n  return (Consumer.id += 1);\n};\n\n/**\n * Convert a structured data structure into a message stream conforming to\n * a template and an array of binary data elements.\n * @static\n * @method messageToPortable\n * @param {Object} template The template to conform to\n * @param {Object} value The instance of the data structure to confrom\n * @param {Debug} debug A debugger for errors.\n * @return {{text: Object, binary: Array}} Separated data streams.\n */\nConsumer.messageToPortable = function (template, value, debug) {\n  var externals = [],\n    message = Consumer.conform(template, value, externals, true, debug);\n  return {\n    text: message,\n    binary: externals\n  };\n};\n\n/**\n * Convert Structured Data streams into a data structure conforming to a\n * template.\n * @static\n * @method portableToMessage\n * @param {Object} template The template to conform to\n * @param {{text: Object, binary: Array}} streams The streams to conform\n * @param {Debug} debug A debugger for errors.\n * @return {Object} The data structure matching the template.\n */\nConsumer.portableToMessage = function (template, streams, debug) {\n  return Consumer.conform(template, streams.text, streams.binary, false, debug);\n};\n\n/**\n * Force a collection of values to look like the types and length of an API\n * template.\n * @static\n * @method conform\n * @param {Object} template The template to conform to\n * @param {Object} from The value to conform\n * @param {Array} externals Listing of binary elements in the template\n * @param {Boolean} Whether to to separate or combine streams.\n * @aparam {Debug} debug A debugger for errors.\n */\nConsumer.conform = function (template, from, externals, separate, debug) {\n  /* jshint -W086 */\n  if (typeof (from) === 'function' && template !== 'proxy') {\n    //from = undefined;\n    //throw \"Trying to conform a function\";\n    debug.error(\"Message discarded as functions can't cross modules!\");\n    return undefined;\n  } else if (typeof (from) === 'undefined') {\n    return undefined;\n  } else if (from === null) {\n    return null;\n  } else if (template === undefined) {\n    debug.error(\"Message discarded for not matching declared type!\", from);\n    return undefined;\n  }\n\n  switch (template) {\n  case 'string':\n    return String('') + from;\n  case 'number':\n    return Number(1) * from;\n  case 'boolean':\n    return Boolean(from === true);\n  case 'object':\n    // TODO(willscott): Allow removal if sandboxing enforces this.\n    if (typeof from === 'undefined') {\n      return undefined;\n    } else {\n      return JSON.parse(JSON.stringify(from));\n    }\n  case 'blob':\n    if (separate) {\n      if (from instanceof Blob) {\n        externals.push(from);\n        return externals.length - 1;\n      } else {\n        debug.error('conform expecting Blob, but saw ' + (typeof from));\n        externals.push(new Blob([]));\n        return externals.length - 1;\n      }\n    } else {\n      return externals[from];\n    }\n  case 'buffer':\n    if (separate) {\n      externals.push(Consumer.makeArrayBuffer(from, debug));\n      return externals.length - 1;\n    } else {\n      return Consumer.makeArrayBuffer(externals[from], debug);\n    }\n  case 'proxy':\n    return from;\n  }\n  var val, i;\n  if (Array.isArray(template) && from !== undefined) {\n    val = [];\n    i = 0;\n    if (template.length === 2 && template[0] === 'array') {\n      //console.log(\"template is array, value is \" + JSON.stringify(value));\n      for (i = 0; i < from.length; i += 1) {\n        val.push(Consumer.conform(template[1], from[i], externals,\n                                  separate, debug));\n      }\n    } else {\n      for (i = 0; i < template.length; i += 1) {\n        if (from[i] !== undefined) {\n          val.push(Consumer.conform(template[i], from[i], externals,\n                                    separate, debug));\n        } else {\n          val.push(undefined);\n        }\n      }\n    }\n    return val;\n  } else if (typeof template === 'object' && from !== undefined) {\n    val = {};\n    util.eachProp(template, function (prop, name) {\n      if (from[name] !== undefined) {\n        val[name] = Consumer.conform(prop, from[name], externals, separate,\n                                     debug);\n      }\n    });\n    return val;\n  }\n  debug.error('Unknown template provided: ' + template);\n};\n\n/**\n * Make a thing into an Array Buffer\n * @static\n * @method makeArrayBuffer\n * @param {Object} thing\n * @param {Debug} debug A debugger in case of errors.\n * @return {ArrayBuffer} An Array Buffer\n */\nConsumer.makeArrayBuffer = function (thing, debug) {\n  if (!thing) {\n    return new ArrayBuffer(0);\n  }\n\n  if (thing instanceof ArrayBuffer) {\n    return thing;\n  } else if (thing.constructor.name === \"ArrayBuffer\" &&\n      typeof thing.prototype === \"undefined\") {\n    // Workaround for webkit origin ownership issue.\n    // https://github.com/UWNetworksLab/freedom/issues/28\n    return new DataView(thing).buffer;\n  } else {\n    debug.error('expecting ArrayBuffer, but saw ' +\n        (typeof thing) + ': ' + JSON.stringify(thing));\n    return new ArrayBuffer(0);\n  }\n};\n\n/**\n * Recursively traverse a [nested] object and freeze its keys from being\n * writable. Note, the result can have new keys added to it, but existing ones\n * cannot be  overwritten. Doesn't do anything for arrays or other collections.\n *\n * @method recursiveFreezeObject\n * @static\n * @param {Object} obj - object to be frozen\n * @return {Object} obj\n **/\nConsumer.recursiveFreezeObject = function (obj) {\n  var k, ret = {};\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      Object.defineProperty(ret, k, {\n        value: Consumer.recursiveFreezeObject(obj[k]),\n        writable: false,\n        enumerable: true\n      });\n    }\n  }\n  return ret;\n};\n\nmodule.exports = Consumer;\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom entry point for debugging.\n * @uses handleEvents\n * @implements Port\n * @constructor\n */\nvar Debug = function (logger) {\n  this.id = 'debug';\n  this.emitChannel = false;\n  this.config = false;\n  util.handleEvents(this);\n};\n\n/**\n * The supported log levels for debugging.\n * @static\n */\nDebug.LEVELS = ['debug', 'info', 'log', 'warn', 'error'];\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the textual description.\n */\nDebug.prototype.toString = function () {\n  return '[Console]';\n};\n\n/**\n * Register a logger for outputting debugging messages.\n * @method setLogger\n * @param {Console} logger The logger to register\n */\nDebug.prototype.setLogger = function (logger) {\n  if (this.logger) {\n    this.info('Replacing Logger.');\n  }\n  this.logger = logger;\n  this.emit('logger');\n};\n\n/**\n * Handler for receiving messages sent to the debug port.\n * These messages are used to retreive config for exposing console.\n * @method onMessage\n * @param {String} source the source identifier for the message.\n * @param {Object} message the received message.\n */\nDebug.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.channel && !this.emitChannel) {\n    this.emitChannel = message.channel;\n    this.config = message.config;\n    if (!this.config.global.console) {\n      if (typeof console !== 'undefined') {\n        this.config.global.console = console;\n      } else {\n        this.config.global.console = this.getLogger('Console');\n      }\n    }\n    this.emit('ready');\n  }\n};\n\n/**\n * Dispatch a debug message with arbitrary severity.\n * All debug messages are routed through the manager, to allow for delegation.\n * @method format\n * @param {String} severity the severity of the message.\n * @param {String} source The location of message.\n * @param {String[]} args The contents of the message.\n * @private\n */\nDebug.prototype.format = function (severity, source, args) {\n  var i, alist = [], argarr;\n  if (typeof args === \"string\" && source) {\n    try {\n      argarr = JSON.parse(args);\n      if (argarr instanceof Array) {\n        args = argarr;\n      }\n    } catch (e) {\n      // pass.\n    }\n  }\n\n  if (typeof args === \"string\") {\n    alist.push(args);\n  } else {\n    for (i = 0; i < args.length; i += 1) {\n      alist.push(args[i]);\n    }\n  }\n  if (!this.emitChannel) {\n    this.on('ready', this.format.bind(this, severity, source, alist));\n    return;\n  }\n  this.emit(this.emitChannel, {\n    severity: severity,\n    source: source,\n    quiet: true,\n    request: 'debug',\n    msg: JSON.stringify(alist)\n  });\n};\n\n/**\n * Print received messages on the console.\n * This is called by the manager in response to an emission from format.\n * @method print\n * @param {Object} message The message emitted by {@see format} to print.\n */\nDebug.prototype.print = function (message) {\n  if (!this.logger) {\n    this.once('logger', this.print.bind(this, message));\n    return;\n  }\n\n  var args, arr = [], i = 0;\n  args = JSON.parse(message.msg);\n  if (typeof args === \"string\") {\n    arr.push(args);\n  } else {\n    while (args[i] !== undefined) {\n      arr.push(args[i]);\n      i += 1;\n    }\n  }\n  this.logger[message.severity].call(this.logger, message.source, arr, function () {});\n};\n\n/**\n * Print a log message to the console.\n * @method log\n */\nDebug.prototype.log = function () {\n  this.format('log', undefined, arguments);\n};\n\n/**\n * Print an info message to the console.\n * @method log\n */\nDebug.prototype.info = function () {\n  this.format('info', undefined, arguments);\n};\n\n/**\n * Print a debug message to the console.\n * @method log\n */\nDebug.prototype.debug = function () {\n  this.format('debug', undefined, arguments);\n};\n\n/**\n * Print a warning message to the console.\n * @method warn\n */\nDebug.prototype.warn = function () {\n  this.format('warn', undefined, arguments);\n};\n\n/**\n * Print an error message to the console.\n * @method error\n */\nDebug.prototype.error = function () {\n  this.format('error', undefined, arguments);\n};\n\n/**\n * Get a logger that logs messages prefixed by a given name.\n * @method getLogger\n * @param {String} name The prefix for logged messages.\n * @returns {Console} A console-like object.\n */\nDebug.prototype.getLogger = function (name) {\n  var log = function (severity, source) {\n    var args = Array.prototype.splice.call(arguments, 2);\n    this.format(severity, source, args);\n  },\n    logger = {\n      freedom: true\n    };\n  Debug.LEVELS.forEach(function (level) {\n    logger[level] = log.bind(this, level, name);\n  }.bind(this));\n  return logger;\n};\n\n/**\n * Create a synchronous 'getLogger' method that binds around an asynchronous\n * logger by creating a buffer until the asynchronous logger is resolved.\n * @see {ModuleInternal.loadLinks} for where this method is bound to the created\n *     external interface.\n * @method getLoggingShim\n * @param {Function} asyncMethod The wrapper to 'getLogger'\n */\nDebug.prototype.getLoggingShim = function (asyncMethod) {\n  return function getLogggerSync(name) {\n    var toResolve = asyncMethod(name),\n      buffer = [],\n      methods = Debug.LEVELS,\n      backing = null,\n      ret = {};\n    toResolve.then(function (logger) {\n      backing = logger;\n      buffer.forEach(function (item) {\n        backing[item[0]].apply(backing, item[1]);\n      });\n    });\n    methods.forEach(function (mthd) {\n      ret[mthd] = function() {\n        var args = Array.prototype.splice.call(arguments, 0);\n        if (backing) {\n          backing[this].apply(backing, args);\n        } else {\n          buffer.push([this, args]);\n        }\n      }.bind(mthd);\n    });\n    return ret;\n  };\n};\n\nmodule.exports = Debug;\n","/*jslint indent:2,node:true */\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\nvar Api = require('./api');\r\nvar Debug = require('./debug');\r\nvar Hub = require('./hub');\r\nvar Manager = require('./manager');\r\nvar Policy = require('./policy');\r\nvar ProxyBinder = require('./proxybinder');\r\nvar Resource = require('./resource');\r\nvar util = require('./util');\r\nvar Bundle = require('./bundle');\r\n\r\nvar freedomGlobal;\r\nvar getGlobal = function () {\r\n  'use strict';\r\n  \r\n  // Node.js\r\n  if (typeof global !== 'undefined' && global.prototype === undefined) {\r\n    freedomGlobal = global;\r\n  // Browsers\r\n  } else {\r\n    setTimeout(function () {\r\n      freedomGlobal = this;\r\n    }, 0);\r\n  }\r\n};\r\ngetGlobal();\r\n\r\n/**\r\n * Create a new freedom context.\r\n * @param {Object} context Information about the local context.\r\n * @see {util/workerEntry.js}\r\n * @param {String} manifest The manifest to load.\r\n * @param {Object} config Configuration keys set by the user.\r\n * @returns {Promise} A promise for the module defined in the manifest.\r\n */\r\nvar setup = function (context, manifest, config) {\r\n  'use strict';\r\n  var debug = new Debug(),\r\n    hub = new Hub(debug),\r\n    resource = new Resource(debug),\r\n    api = new Api(debug),\r\n    manager = new Manager(hub, resource, api),\r\n    binder = new ProxyBinder(manager),\r\n    policy,\r\n    site_cfg = {\r\n      'debug': 'log',\r\n      'manifest': manifest,\r\n      'moduleContext': (!context || typeof (context.isModule) === \"undefined\") ?\r\n          util.isModuleContext() :\r\n          context.isModule\r\n    },\r\n    link,\r\n    Port,\r\n    cleanup = function () {\r\n      api.cleanup();\r\n      manager.destroy();\r\n    };\r\n\r\n  if (config) {\r\n    util.mixin(site_cfg, config, true);\r\n  }\r\n  site_cfg.global = freedomGlobal;\r\n  if (context) {\r\n    util.mixin(site_cfg, context, true);\r\n  }\r\n\r\n  // Register user-supplied extensions.\r\n  // For example the 'core.oauth' provider defines a register function,\r\n  // which enables site_cfg.oauth to be registered with it.\r\n  context.providers.forEach(function (provider) {\r\n    var name;\r\n    if (provider.name.indexOf('core.') === 0 &&\r\n        typeof provider.register === 'function') {\r\n      name = provider.name.substr(5);\r\n      // Invert priority and prefer user config over local context for these.\r\n      if (config && config[name]) {\r\n        provider.register(config[name]);\r\n      } else if (site_cfg[name]) {\r\n        provider.register(site_cfg[name]);\r\n      } else {\r\n        provider.register(undefined);\r\n      }\r\n    }\r\n  });\r\n  \r\n  Bundle.register(context.providers, api);\r\n  resource.register(context.resolvers || []);\r\n\r\n  return new PromiseCompat(function (resolve, reject) {\r\n    if (site_cfg.moduleContext) {\r\n      Port = site_cfg.portType;\r\n      link = new Port('Outbound', resource);\r\n      manager.setup(link);\r\n\r\n      // Delay debug messages until delegation to the parent context is setup.\r\n      manager.once('delegate', manager.setup.bind(manager, debug));\r\n    } else {\r\n      manager.setup(debug);\r\n      policy = new Policy(manager, resource, site_cfg);\r\n\r\n      // Define how to load a root module.\r\n      var fallbackLogger, getIface;\r\n      fallbackLogger = function (message) {\r\n        api.getCore('core.console', {\r\n          config: site_cfg\r\n        }).then(function (provider) {\r\n          var logger = new provider.inst();\r\n          debug.setLogger(logger);\r\n          if (message) {\r\n            debug.error(message);\r\n          }\r\n        });\r\n      };\r\n      getIface = function (manifest) {\r\n        return resource.get(site_cfg.location, manifest).then(\r\n          function (canonical_manifest) {\r\n            return policy.get([], canonical_manifest);\r\n          }\r\n        ).then(function (instance) {\r\n          manager.setup(instance);\r\n          return binder.bindDefault(instance, api, instance.manifest);\r\n        });\r\n      };\r\n\r\n      // Load appropriate Logger.\r\n      if (site_cfg.logger) {\r\n        getIface(site_cfg.logger).then(function (iface) {\r\n          if (iface.external.api !== 'console') {\r\n            fallbackLogger(\"Unwilling to use logger with unknown API:\",\r\n              iface.external.api);\r\n          } else {\r\n            debug.setLogger(iface.external());\r\n          }\r\n        }, fallbackLogger);\r\n      } else {\r\n        fallbackLogger();\r\n      }\r\n\r\n      // Load root module.\r\n      getIface(site_cfg.manifest).then(function (iface) {\r\n        iface.port.once('close', cleanup);\r\n        return iface.external;\r\n      }, function (err) {\r\n        debug.error('Failed to retrieve manifest: ' + err);\r\n        throw err;\r\n      }).then(resolve, reject);\r\n    }\r\n\r\n    hub.emit('config', site_cfg);\r\n  });\r\n};\r\n\r\nmodule.exports = setup;\r\n","/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('./util');\r\n\r\n/**\r\n * Defines fdom.Hub, the core message hub between freedom modules.\r\n * Incomming messages from apps are sent to hub.onMessage()\r\n * @class Hub\r\n * @param {Debug} debug Logger for debugging.\r\n * @constructor\r\n */\r\nvar Hub = function (debug) {\r\n  this.debug = debug;\r\n  this.config = {};\r\n  this.apps = {};\r\n  this.routes = {};\r\n\r\n  util.handleEvents(this);\r\n  this.on('config', function (config) {\r\n    util.mixin(this.config, config);\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * Handle an incoming message from a freedom app.\r\n * @method onMessage\r\n * @param {String} source The identifiying source of the message.\r\n * @param {Object} message The sent message.\r\n */\r\nHub.prototype.onMessage = function (source, message) {\r\n  var destination = this.routes[source], type;\r\n  if (!destination || !destination.app) {\r\n    this.debug.warn(\"Message dropped from unregistered source \" + source);\r\n    return;\r\n  }\r\n\r\n  if (!this.apps[destination.app]) {\r\n    this.debug.warn(\"Message dropped to destination \" + destination.app);\r\n    return;\r\n  }\r\n\r\n  // The firehose tracing all internal freedom.js messages.\r\n  if (!message.quiet && !destination.quiet && this.config && this.config.trace) {\r\n    type = message.type;\r\n    if (message.type === 'message' && message.message &&\r\n        message.message.action === 'method') {\r\n      type = 'method.' + message.message.type;\r\n    } else if (message.type === 'method' && message.message &&\r\n        message.message.type === 'method') {\r\n      type = 'return.' + message.message.name;\r\n    } else if (message.type === 'message' && message.message &&\r\n        message.message.type === 'event') {\r\n      type = 'event.' + message.message.name;\r\n    }\r\n    this.debug.debug(this.apps[destination.source].toString() +\r\n        \" -\" + type + \"-> \" +\r\n        this.apps[destination.app].toString() + \".\" + destination.flow);\r\n  }\r\n\r\n  this.apps[destination.app].onMessage(destination.flow, message);\r\n};\r\n\r\n/**\r\n * Get the local destination port of a flow.\r\n * @method getDestination\r\n * @param {String} source The flow to retrieve.\r\n * @return {Port} The destination port.\r\n */\r\nHub.prototype.getDestination = function (source) {\r\n  var destination = this.routes[source];\r\n  if (!destination) {\r\n    return null;\r\n  }\r\n  return this.apps[destination.app];\r\n};\r\n\r\n/**\r\n * Get the local source port of a flow.\r\n * @method getSource\r\n * @param {Port} source The flow identifier to retrieve.\r\n * @return {Port} The source port.\r\n */\r\nHub.prototype.getSource = function (source) {\r\n  if (!source) {\r\n    return false;\r\n  }\r\n  if (!this.apps[source.id]) {\r\n    this.debug.warn(\"No registered source '\" + source.id + \"'\");\r\n    return false;\r\n  }\r\n  return this.apps[source.id];\r\n};\r\n\r\n/**\r\n * Register a destination for messages with this hub.\r\n * @method register\r\n * @param {Port} app The Port to register.\r\n * @param {Boolean} [force] Whether to override an existing port.\r\n * @return {Boolean} Whether the app was registered.\r\n */\r\nHub.prototype.register = function (app, force) {\r\n  if (!this.apps[app.id] || force) {\r\n    this.apps[app.id] = app;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Deregister a destination for messages with the hub.\r\n * Note: does not remove associated routes. As such, deregistering will\r\n * prevent the installation of new routes, but will not distrupt existing\r\n * hub routes.\r\n * @method deregister\r\n * @param {Port} app The Port to deregister\r\n * @return {Boolean} Whether the app was deregistered.\r\n */\r\nHub.prototype.deregister = function (app) {\r\n  if (!this.apps[app.id]) {\r\n    return false;\r\n  }\r\n  delete this.apps[app.id];\r\n  return true;\r\n};\r\n\r\n/**\r\n * Install a new route in the hub.\r\n * @method install\r\n * @param {Port} source The source of the route.\r\n * @param {Port} destination The destination of the route.\r\n * @param {String} flow The flow where the destination will receive messages.\r\n * @param {Boolean} quiet Whether messages on this route should be suppressed.\r\n * @return {String} A routing source identifier for sending messages.\r\n */\r\nHub.prototype.install = function (source, destination, flow, quiet) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n  if (!destination) {\r\n    this.debug.warn(\"Unwilling to generate blackhole flow from \" + source.id);\r\n    return;\r\n  }\r\n\r\n  var route = this.generateRoute();\r\n  this.routes[route] = {\r\n    app: destination,\r\n    flow: flow,\r\n    source: source.id,\r\n    quiet: quiet\r\n  };\r\n  if (typeof source.on === 'function') {\r\n    source.on(route, this.onMessage.bind(this, route));\r\n  }\r\n\r\n  return route;\r\n};\r\n\r\n/**\r\n * Uninstall a hub route.\r\n * @method uninstall\r\n * @param {Port} source The source of the route.\r\n * @param {String} flow The route to uninstall.\r\n * @return {Boolean} Whether the route was able to be uninstalled.\r\n */\r\nHub.prototype.uninstall = function (source, flow) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n\r\n  var route = this.routes[flow];\r\n  if (!route) {\r\n    return false;\r\n  } else if (route.source !== source.id) {\r\n    this.debug.warn(\"Flow \" + flow + \" does not belong to port \" + source.id);\r\n    return false;\r\n  }\r\n\r\n  delete this.routes[flow];\r\n  if (typeof source.off === 'function') {\r\n    source.off(route);\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Remove all listeners and notify all connected destinations of their removal.\r\n * @method teardown\r\n */\r\nHub.prototype.teardown = function () {\r\n  util.eachProp(this.apps, function (source) {\r\n    if (typeof source.off === 'function') {\r\n      source.off();\r\n    }\r\n  });\r\n  this.apps = {};\r\n  this.routes = {};\r\n};\r\n\r\n/**\r\n * Generate a unique routing identifier.\r\n * @method generateRoute\r\n * @return {String} a routing source identifier.\r\n * @private\r\n */\r\nHub.prototype.generateRoute = function () {\r\n  return util.getId();\r\n};\r\n\r\nmodule.exports = Hub;\r\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A link connects two freedom hubs. This is an abstract class\n * providing common functionality of translating control channels,\n * and integrating config information.\n * @class Link\n * @implements Port\n * @constructor\n */\nvar Link = function (name, resource) {\n  this.id = 'Link' + Math.random();\n  this.name = name;\n  this.resource = resource;\n  this.config = {};\n  this.src = null;\n\n  util.handleEvents(this);\n  util.mixin(this, Link.prototype);\n};\n\n/**\n * Receive messages from the hub to this port.\n * Manages startup, and passes others to 'deliverMessage' implemented\n * in derived classes.\n * @method onMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nLink.prototype.onMessage = function (flow, message) {\n  if (flow === 'control' && !this.controlChannel) {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.start();\n    }\n  } else {\n    this.deliverMessage(flow, message);\n  }\n};\n\n/**\n * Register a handler to alert of errors on this port.\n * @method addErrorHandler\n * @param {Function} handler Method to call with errors.\n */\nLink.prototype.addErrorHandler = function (handler) {\n  this.onError = handler;\n};\n\n/**\n * Report an error on this link.\n * @method onerror\n * @param {Error} err The error that occurred.\n */\nLink.prototype.onError = function (err) {\n  //Filled in by addErrorHandler\n};\n\n/**\n * Emit messages to the the hub, mapping control channels.\n * @method emitMessage\n * @param {String} flow the flow to emit the message on.\n * @param {Object} messgae The message to emit.\n */\nLink.prototype.emitMessage = function (flow, message) {\n  if (flow === 'control' && this.controlChannel) {\n    flow = this.controlChannel;\n  }\n  this.emit(flow, message);\n};\n\nmodule.exports = Link;\n","/*globals Worker */\n/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar Link = require('../link');\n\n/**\n * A port providing message transport between two freedom contexts via Worker.\n * @class Worker\n * @extends Link\n * @uses handleEvents\n * @constructor\n */\nvar WorkerLink = function(id, resource) {\n  Link.call(this, id, resource);\n  if (id) {\n    this.id = id;\n  }\n};\n\n/**\n * Start this port by listening or creating a worker.\n * @method start\n * @private\n */\nWorkerLink.prototype.start = function() {\n  if (this.config.moduleContext) {\n    this.setupListener();\n  } else {\n    this.setupWorker();\n  }\n};\n\n/**\n * Stop this port by destroying the worker.\n * @method stop\n * @private\n */\nWorkerLink.prototype.stop = function() {\n  // Function is determined by setupListener or setupFrame as appropriate.\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nWorkerLink.prototype.toString = function() {\n  return \"[Worker \" + this.id + \"]\";\n};\n\n/**\n * Set up a global listener to handle incoming messages to this\n * freedom.js context.\n * @method setupListener\n */\nWorkerLink.prototype.setupListener = function() {\n  var onMsg = function(msg) {\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this);\n  this.obj = this.config.global;\n  this.obj.addEventListener('message', onMsg, true);\n  this.stop = function() {\n    this.obj.removeEventListener('message', onMsg, true);\n    delete this.obj;\n  };\n  this.emit('started');\n  this.obj.postMessage(\"Ready For Messages\");\n};\n\n/**\n * Set up a worker with an isolated freedom.js context inside.\n * @method setupWorker\n */\nWorkerLink.prototype.setupWorker = function() {\n  var worker,\n    blob,\n    self = this;\n  worker = new Worker(this.config.source + '#' + this.id);\n\n  worker.addEventListener('error', function(err) {\n    this.onError(err);\n  }.bind(this), true);\n  worker.addEventListener('message', function(worker, msg) {\n    if (!this.obj) {\n      this.obj = worker;\n      this.emit('started');\n      return;\n    }\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this, worker), true);\n  this.stop = function() {\n    worker.terminate();\n    if (this.obj) {\n      delete this.obj;\n    }\n  };\n};\n\n/**\n * Receive messages from the hub to this port.\n * Received messages will be emitted from the other side of the port.\n * @method deliverMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nWorkerLink.prototype.deliverMessage = function(flow, message) {\n  if (flow === 'control' && message.type === 'close' &&\n      message.channel === 'control') {\n    this.stop();\n  } else {\n    if (this.obj) {\n      this.obj.postMessage({\n        flow: flow,\n        message: message\n      });\n    } else {\n      this.once('started', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\nmodule.exports = WorkerLink;\n\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar ModuleInternal = require('./moduleinternal');\n\n/**\n * A freedom port which manages the control plane of of changing hub routes.\n * @class Manager\n * @implements Port\n * @param {Hub} hub The routing hub to control.\n * @param {Resource} resource The resource manager for the runtime.\n * @param {Api} api The API manager for the runtime.\n * @constructor\n */\nvar Manager = function (hub, resource, api) {\n  this.id = 'control';\n  this.config = {};\n  this.controlFlows = {};\n  this.dataFlows = {};\n  this.dataFlows[this.id] = [];\n  this.reverseFlowMap = {};\n\n  this.debug = hub.debug;\n  this.hub = hub;\n  this.resource = resource;\n  this.api = api;\n\n  this.delegate = null;\n  this.toDelegate = {};\n\n  this.hub.on('config', function (config) {\n    util.mixin(this.config, config);\n    this.emit('config');\n  }.bind(this));\n\n  util.handleEvents(this);\n  this.hub.register(this);\n};\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nManager.prototype.toString = function () {\n  return \"[Local Controller]\";\n};\n\n/**\n * Process messages sent to this port.\n * The manager, or 'control' destination handles several types of messages,\n * identified by the request property.  The actions are:\n * 1. debug. Prints the message to the console.\n * 2. link. Creates a link between the source and a provided destination port.\n * 3. environment. Instantiate a module environment defined in ModuleInternal.\n * 4. delegate. Routes a defined set of control messages to another location.\n * 5. resource. Registers the source as a resource resolver.\n * 6. core. Generates a core provider for the requester.\n * 7. close. Tears down routes involing the requesting port.\n * 8. unlink. Tears down a route from the requesting port.\n * @method onMessage\n * @param {String} flow The source identifier of the message.\n * @param {Object} message The received message.\n */\nManager.prototype.onMessage = function (flow, message) {\n  var reverseFlow = this.controlFlows[flow], origin;\n  if (!reverseFlow) {\n    this.debug.warn(\"Unknown message source: \" + flow);\n    return;\n  }\n  origin = this.hub.getDestination(reverseFlow);\n\n  if (this.delegate && reverseFlow !== this.delegate &&\n      this.toDelegate[flow]) {\n    // Ship off to the delegee\n    this.emit(this.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      quiet: true,\n      flow: flow,\n      message: message\n    });\n    return;\n  }\n\n  if (message.request === 'debug') {\n    this.debug.print(message);\n    return;\n  }\n\n  if (message.request === 'link') {\n    this.createLink(origin, message.name, message.to, message.overrideDest);\n  } else if (message.request === 'environment') {\n    this.createLink(origin, message.name, new ModuleInternal(this));\n  } else if (message.request === 'delegate') {\n    // Initate Delegation.\n    if (this.delegate === null) {\n      this.delegate = reverseFlow;\n    }\n    this.toDelegate[message.flow] = true;\n    this.emit('delegate');\n  } else if (message.request === 'resource') {\n    this.resource.addResolver(message.args[0]);\n    this.resource.addRetriever(message.service, message.args[1]);\n  } else if (message.request === 'core') {\n    if (this.core && reverseFlow === this.delegate) {\n      (new this.core()).onMessage(origin, message.message);\n      return;\n    }\n    this.getCore(function (to, core) {\n      this.hub.onMessage(to, {\n        type: 'core',\n        core: core\n      });\n    }.bind(this, reverseFlow));\n  } else if (message.request === 'close') {\n    this.destroy(origin);\n  } else if (message.request === 'unlink') {\n    this.removeLink(origin, message.to);\n  } else {\n    this.debug.warn(\"Unknown control request: \" + message.request);\n    this.debug.log(JSON.stringify(message));\n    return;\n  }\n};\n\n/**\n * Get the port messages will be routed to given its id.\n * @method getPort\n * @param {String} portId The ID of the port.\n * @returns {fdom.Port} The port with that ID.\n */\nManager.prototype.getPort = function (portId) {\n  return this.hub.getDestination(this.controlFlows[portId]);\n};\n\n/**\n * Set up a port with the hub.\n * @method setup\n * @param {Port} port The port to register.\n */\nManager.prototype.setup = function (port) {\n  if (!port.id) {\n    this.debug.warn(\"Refusing to setup unidentified port \");\n    return false;\n  }\n\n  if (this.controlFlows[port.id]) {\n    this.debug.warn(\"Refusing to re-initialize port \" + port.id);\n    return false;\n  }\n\n  if (!this.config.global) {\n    this.once('config', this.setup.bind(this, port));\n    return;\n  }\n\n  this.hub.register(port);\n  var flow = this.hub.install(this, port.id, \"control\"),\n    reverse = this.hub.install(port, this.id, port.id);\n  this.controlFlows[port.id] = flow;\n  this.dataFlows[port.id] = [reverse];\n  this.reverseFlowMap[flow] = reverse;\n  this.reverseFlowMap[reverse] = flow;\n\n  if (port.lineage) {\n    this.emit('moduleAdd', {id: port.id, lineage: port.lineage});\n  }\n\n  this.hub.onMessage(flow, {\n    type: 'setup',\n    channel: reverse,\n    config: this.config\n  });\n\n  return true;\n};\n\n/**\n * Tear down a port on the hub, or the full local hub.\n * @method destroy\n * @apram {Port?} port The port to unregister.\n */\nManager.prototype.destroy = function (port) {\n  if (!port) {\n    // Tear down everything!\n    util.eachProp(this.controlFlows, function (flow) {\n      this.hub.onMessage(flow, {\n        type: 'close'\n      });\n    }.bind(this));\n    this.hub.teardown();\n    return;\n  }\n\n  if (!port.id) {\n    this.debug.warn(\"Unable to tear down unidentified port\");\n    return false;\n  }\n\n  if (port.lineage) {\n    this.emit('moduleRemove', {id: port.id, lineage: port.lineage});\n  }\n\n  // Remove the port.\n  delete this.controlFlows[port.id];\n\n  // Remove associated links.\n  var i;\n  for (i = this.dataFlows[port.id].length - 1; i >= 0; i -= 1) {\n    this.removeLink(port, this.dataFlows[port.id][i]);\n  }\n\n  // Remove the port.\n  delete this.dataFlows[port.id];\n  this.hub.deregister(port);\n};\n\n/**\n * Create a link between two ports.  Links are created in both directions,\n * and a message with those capabilities is sent to the source port.\n * @method createLink\n * @param {Port} port The source port.\n * @param {String} name The flow for messages from destination to port.\n * @param {Port} destination The destination port.\n * @param {String} [destName] The flow name for messages to the destination.\n * @param {Boolean} [toDest] Tell the destination about the link.\n */\nManager.prototype.createLink = function (port, name, destination, destName,\n                                         toDest) {\n  if (!this.config.global) {\n    this.once('config',\n      this.createLink.bind(this, port, name, destination, destName));\n    return;\n  }\n\n  if (!this.controlFlows[port.id]) {\n    this.debug.warn('Unwilling to link from non-registered source.');\n    return;\n  }\n\n  if (!this.controlFlows[destination.id]) {\n    if (this.setup(destination) === false) {\n      this.debug.warn('Could not find or setup destination.');\n      return;\n    }\n  }\n  var quiet = destination.quiet || false,\n    outgoingName = destName || 'default',\n    outgoing = this.hub.install(port, destination.id, outgoingName, quiet),\n    reverse;\n\n  // Recover the port so that listeners are installed.\n  destination = this.hub.getDestination(outgoing);\n  reverse = this.hub.install(destination, port.id, name, quiet);\n\n  this.reverseFlowMap[outgoing] = reverse;\n  this.dataFlows[port.id].push(outgoing);\n  this.reverseFlowMap[reverse] = outgoing;\n  this.dataFlows[destination.id].push(reverse);\n\n  if (toDest) {\n    this.hub.onMessage(this.controlFlows[destination.id], {\n      type: 'createLink',\n      name: outgoingName,\n      channel: reverse,\n      reverse: outgoing\n    });\n  } else {\n    this.hub.onMessage(this.controlFlows[port.id], {\n      name: name,\n      type: 'createLink',\n      channel: outgoing,\n      reverse: reverse\n    });\n  }\n};\n\n/**\n * Remove a link between to ports. The reverse link will also be removed.\n * @method removeLink\n * @param {Port} port The source port.\n * @param {String} name The flow to be removed.\n */\nManager.prototype.removeLink = function (port, name) {\n  var reverse = this.hub.getDestination(name),\n    rflow = this.reverseFlowMap[name],\n    i;\n\n  if (!reverse || !rflow) {\n    this.debug.warn(\"Could not find metadata to remove flow: \" + name);\n    return;\n  }\n\n  if (this.hub.getDestination(rflow).id !== port.id) {\n    this.debug.warn(\"Source port does not own flow \" + name);\n    return;\n  }\n\n  // Notify ports that a channel is closing.\n  i = this.controlFlows[port.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: name\n    });\n  }\n  i = this.controlFlows[reverse.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: rflow\n    });\n  }\n\n  // Uninstall the channel.\n  this.hub.uninstall(port, name);\n  this.hub.uninstall(reverse, rflow);\n\n  delete this.reverseFlowMap[name];\n  delete this.reverseFlowMap[rflow];\n  this.forgetFlow(reverse.id, rflow);\n  this.forgetFlow(port.id, name);\n};\n\n/**\n * Forget the flow from id with a given name.\n * @method forgetFlow\n * @private\n * @param {String} id The port ID of the source.\n * @param {String} name The flow name.\n */\nManager.prototype.forgetFlow = function (id, name) {\n  var i;\n  if (this.dataFlows[id]) {\n    for (i = 0; i < this.dataFlows[id].length; i += 1) {\n      if (this.dataFlows[id][i] === name) {\n        this.dataFlows[id].splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Get the core freedom.js API active on the current hub.\n * @method getCore\n * @private\n * @param {Function} cb Callback to fire with the core object.\n */\nManager.prototype.getCore = function (cb) {\n  if (this.core) {\n    cb(this.core);\n  } else {\n    this.api.getCore('core', this).then(function (core) {\n      this.core = core.inst;\n      cb(this.core);\n    }.bind(this), function () {\n      cb(undefined);\n    });\n  }\n};\n\nmodule.exports = Manager;\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar Provider = require('./provider');\n\n/**\n * The external Port face of a module on a hub.\n * @class Module\n * @extends Port\n * @param {String} manifestURL The manifest this module loads.\n * @param {String[]} creator The lineage of creation for this module.\n * @param {Policy} Policy The policy loader for dependencies.\n * @constructor\n */\nvar Module = function (manifestURL, manifest, creator, policy) {\n  this.api = policy.api;\n  this.policy = policy;\n  this.resource = policy.resource;\n  this.debug = policy.debug;\n\n  this.config = {};\n\n  this.id = manifestURL + Math.random();\n  this.manifestId = manifestURL;\n  this.manifest = manifest;\n  this.lineage = [this.manifestId].concat(creator);\n\n  this.quiet = this.manifest.quiet || false;\n\n  this.externalPortMap = {};\n  this.internalPortMap = {};\n  this.dependantChannels = [];\n  this.started = false;\n\n  util.handleEvents(this);\n};\n\n/**\n * Receive a message for the Module.\n * @method onMessage\n * @param {String} flow The origin of the message.\n * @param {Object} message The message received.\n */\nModule.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (message.type === 'setup') {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.emit(this.controlChannel, {\n        type: 'Core Provider',\n        request: 'core'\n      });\n      this.start();\n      return;\n    } else if (message.type === 'createLink' && message.channel) {\n      this.debug.debug(this + 'got create link for ' + message.name);\n      this.externalPortMap[message.name] = message.channel;\n      if (this.internalPortMap[message.name] === undefined) {\n        this.internalPortMap[message.name] = false;\n      }\n      var msg = {\n        type: 'default channel announcement',\n        channel: message.reverse\n      };\n      if (this.manifest.dependencies &&\n          this.manifest.dependencies[message.name]) {\n        msg.api = this.manifest.dependencies[message.name].api;\n      }\n      this.emit(message.channel, msg);\n      return;\n    } else if (message.core) {\n      this.core = new message.core();\n      this.emit('core', message.core);\n      return;\n    } else if (message.type === 'close') {\n      // Closing channel.\n      if (!message.channel || message.channel === 'control') {\n        this.stop();\n      }\n      this.deregisterFlow(message.channel, false);\n    } else {\n      this.port.onMessage(flow, message);\n    }\n  } else {\n    if ((this.externalPortMap[flow] === false ||\n        !this.externalPortMap[flow]) && message.channel) {\n      this.debug.debug(this + 'handling channel announcement for ' + flow);\n      this.externalPortMap[flow] = message.channel;\n      if (this.internalPortMap[flow] === undefined) {\n        this.internalPortMap[flow] = false;\n\n        // New incoming connection attempts should get routed to modInternal.\n        if (this.manifest.provides && this.modInternal) {\n          this.port.onMessage(this.modInternal, {\n            type: 'Connection',\n            channel: flow,\n            api: message.api\n          });\n        } else if (this.manifest.provides) {\n          this.once('modInternal', function (flow, api) {\n            this.port.onMessage(this.modInternal, {\n              type: 'Connection',\n              channel: flow,\n              api: api\n            });\n          }.bind(this, flow, message.api));\n        // First connection retains legacy mapping as 'default'.\n        } else if (!this.externalPortMap['default'] && message.channel) {\n          this.externalPortMap['default'] = message.channel;\n          this.once('internalChannelReady', function (flow) {\n            this.internalPortMap[flow] = this.internalPortMap['default'];\n          }.bind(this, flow));\n        }\n      }\n      return;\n    } else if (!this.started) {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    } else {\n      if (this.internalPortMap[flow] === false) {\n        console.warn('waiting on internal channel for msg');\n        this.once('internalChannelReady', this.onMessage.bind(this, flow, message));\n      } else if (!this.internalPortMap[flow]) {\n        this.debug.error('Unexpected message from ' + flow);\n        return;\n      } else {\n        this.port.onMessage(this.internalPortMap[flow], message);\n      }\n    }\n  }\n};\n\n/**\n * Clean up after a flow which is no longer used / needed.\n * @method deregisterFLow\n * @param {String} flow The flow to remove mappings for.\n * @param {Boolean} internal If the flow name is the internal identifier.\n * @returns {Boolean} Whether the flow was successfully deregistered.\n * @private\n */\nModule.prototype.deregisterFlow = function (flow, internal) {\n  var key,\n    map = internal ? this.internalPortMap : this.externalPortMap;\n  // TODO: this is inefficient, but seems less confusing than a 3rd\n  // reverse lookup map.\n  for (key in map) {\n    if (map[key] === flow) {\n      if (internal) {\n        this.emit(this.controlChannel, {\n          type: 'Channel Teardown',\n          request: 'unlink',\n          to: this.externalPortMap[key]\n        });\n      } else if (this.port) {\n        this.port.onMessage('control', {\n          type: 'close',\n          channel: this.internalPortMap[key]\n        });\n      }\n      delete this.externalPortMap[key];\n      delete this.internalPortMap[key];\n\n      // When there are still non-dependant channels, keep running\n      for (key in this.externalPortMap) {\n        if (this.externalPortMap.hasOwnProperty(key)) {\n          if (this.dependantChannels.indexOf(key) < 0) {\n            return true;\n          }\n        }\n      }\n      // Otherwise shut down the module.\n      this.stop();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Attempt to start the module once the remote freedom context\n * exists.\n * @method start\n * @private\n */\nModule.prototype.start = function () {\n  var Port;\n  if (this.started || this.port) {\n    return false;\n  }\n  if (this.controlChannel) {\n    this.loadLinks();\n    Port = this.config.portType;\n    this.port = new Port(this.manifest.name, this.resource);\n    // Listen to all port messages.\n    this.port.on(this.emitMessage.bind(this));\n    this.port.addErrorHandler(function (err) {\n      this.debug.warn('Module Failed', err);\n      this.emit(this.controlChannel, {\n        request: 'close'\n      });\n    }.bind(this));\n    // Tell the local port to ask us for help.\n    this.port.onMessage('control', {\n      channel: 'control',\n      config: this.config\n    });\n\n    // Tell the remote location to delegate debugging.\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'debug'\n    });\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'core'\n    });\n\n    // Tell the container to instantiate the counterpart to this external view.\n    this.port.onMessage('control', {\n      type: 'Environment Configuration',\n      request: 'environment',\n      name: 'ModInternal'\n    });\n  }\n};\n\n/**\n * Stop the module when it is no longer needed, and tear-down state.\n * @method stop\n * @private\n */\nModule.prototype.stop = function () {\n  if (!this.started) {\n    return;\n  }\n  this.emit('close');\n  if (this.port) {\n    this.port.off();\n    this.port.onMessage('control', {\n      type: 'close',\n      channel: 'control'\n    });\n    this.port.stop();\n    delete this.port;\n  }\n  delete this.policy;\n  this.started = false;\n};\n\n/**\n * Textual Description of the Port\n * @method toString\n * @return {String} The description of this Port.\n */\nModule.prototype.toString = function () {\n  return \"[Module \" + this.manifest.name + \"]\";\n};\n\n/**\n * Intercept messages as they arrive from the module,\n * mapping them between internal and external flow names.\n * @method emitMessage\n * @param {String} name The destination the module wants to send to.\n * @param {Object} message The message to send.\n * @private\n */\nModule.prototype.emitMessage = function (name, message) {\n  if (this.internalPortMap[name] === false && message.channel) {\n    this.internalPortMap[name] = message.channel;\n    this.emit('internalChannelReady');\n    return;\n  }\n  // Terminate debug redirection requested in start().\n  if (name === 'control') {\n    if (message.flow === 'debug' && message.message) {\n      this.debug.format(message.message.severity,\n          message.message.source || this.toString(),\n          message.message.msg);\n    } else if (message.flow === 'core' && message.message) {\n      if (!this.core) {\n        this.once('core', this.emitMessage.bind(this, name, message));\n        return;\n      }\n      if (message.message.type === 'register' ||\n          message.message.type === 'require') {\n        message.message.reply = this.port.onMessage.bind(this.port, 'control');\n        this.externalPortMap[message.message.id] = false;\n      }\n      this.core.onMessage(this, message.message);\n    } else if (message.name === 'ModInternal' && !this.modInternal) {\n      this.modInternal = message.channel;\n      this.port.onMessage(this.modInternal, {\n        type: 'Initialization',\n        id: this.manifestId,\n        appId: this.id,\n        manifest: this.manifest,\n        lineage: this.lineage,\n        channel: message.reverse\n      });\n      this.emit('modInternal');\n    } else if (message.type === 'createLink') {\n      this.internalPortMap[message.name] = message.channel;\n      this.port.onMessage(message.channel, {\n        type: 'channel announcement',\n        channel: message.reverse\n      });\n      this.emit('internalChannelReady');\n    } else if (message.type === 'close') {\n      this.deregisterFlow(message.channel, true);\n    }\n  } else if (name === 'ModInternal' && message.type === 'ready' && !this.started) {\n    this.started = true;\n    this.emit('start');\n  } else if (name === 'ModInternal' && message.type === 'resolve') {\n    this.resource.get(this.manifestId, message.data).then(function (id, data) {\n      this.port.onMessage(this.modInternal, {\n        type: 'resolve.response',\n        id: id,\n        data: data\n      });\n    }.bind(this, message.id), function () {\n      this.debug.warn('Error Resolving URL for Module.');\n    }.bind(this));\n  } else {\n    this.emit(this.externalPortMap[name], message);\n  }\n  return false;\n};\n\n/**\n * Create a dynamic dependency on another module.\n * @method require\n * @param {String} name The name of the dependency.\n * @param {String} manifest The URL of the dependency to add.\n */\nModule.prototype.require = function (name, manifest) {\n  this.dependantChannels.push(name);\n  this.addDependency(manifest, name).catch(function (err) {\n    this.port.onMessage(this.modInternal, {\n      type: 'require.failure',\n      id: name,\n      error: err.message\n    });\n  }.bind(this));\n};\n\n/**\n * Add a dependency to the module's dependency tree\n * @method addDependency\n * @param {String} url The manifest URL of the dependency\n * @param {String} name The exposed name of the module.\n * @returns {Module} The created dependent module.\n * @private\n */\nModule.prototype.addDependency = function (url, name) {\n  return this.resource.get(this.manifestId, url)\n    .then(function (url) {\n      return this.policy.get(this.lineage, url);\n    }.bind(this))\n    .then(function (dep) {\n      this.updateEnv(name, dep.manifest);\n      this.emit(this.controlChannel, {\n        type: 'Link to ' + name,\n        request: 'link',\n        name: name,\n        overrideDest: name + '.' + this.id,\n        to: dep\n      });\n      return dep;\n    }.bind(this))\n    .catch(function (err) {\n      this.debug.warn(this.toString() + ' failed to load dep: ', name, err);\n      throw err;\n    }.bind(this));\n};\n\n/**\n * Request the external routes used by this module.\n * @method loadLinks\n * @private\n */\nModule.prototype.loadLinks = function () {\n  var i, channels = ['default'], name, dep;\n\n  if (this.manifest.permissions) {\n    for (i = 0; i < this.manifest.permissions.length; i += 1) {\n      name = this.manifest.permissions[i];\n      if (channels.indexOf(name) < 0 && name.indexOf('core.') === 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n        dep = new Provider(this.api.get(name).definition, this.debug);\n        this.api.provideCore(name, dep, this);\n\n        this.emit(this.controlChannel, {\n          type: 'Core Link to ' + name,\n          request: 'link',\n          name: name,\n          to: dep\n        });\n      }\n    }\n  }\n  if (this.manifest.dependencies) {\n    util.eachProp(this.manifest.dependencies, function (desc, name) {\n      if (channels.indexOf(name) < 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n      }\n\n      this.addDependency(desc.url, name);\n    }.bind(this));\n  }\n  // Note that messages can be synchronous, so some ports may already be bound.\n  for (i = 0; i < channels.length; i += 1) {\n    this.externalPortMap[channels[i]] = this.externalPortMap[channels[i]] || false;\n    this.internalPortMap[channels[i]] = false;\n  }\n};\n\n/**\n * Update the module environment with information about a dependent manifest.\n * @method updateEnv\n * @param {String} dep The dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModule.prototype.updateEnv = function (dep, manifest) {\n  if (!manifest) {\n    return;\n  }\n  if (!this.modInternal) {\n    this.once('modInternal', this.updateEnv.bind(this, dep, manifest));\n    return;\n  }\n\n  var metadata;\n\n  // Decide if/what other properties should be exported.\n  // Keep in sync with ModuleInternal.updateEnv\n  metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description,\n    api: manifest.api\n  };\n\n  this.port.onMessage(this.modInternal, {\n    type: 'manifest',\n    name: dep,\n    manifest: metadata\n  });\n};\n\nmodule.exports = Module;\n","/*jslint indent:2, node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar Provider = require('./provider');\nvar ProxyBinder = require('./proxybinder');\nvar util = require('./util');\n\n/**\n * The internal logic for module setup, which makes sure the public\n * facing exports have appropriate properties, and load user scripts.\n * @class ModuleInternal\n * @extends Port\n * @param {Port} manager The manager in this module to use for routing setup.\n * @constructor\n */\nvar ModuleInternal = function (manager) {\n  this.config = {};\n  this.manager = manager;\n  this.debug = manager.debug;\n  this.binder = new ProxyBinder(this.manager);\n  this.api = this.manager.api;\n  this.manifests = {};\n  this.providers = {};\n\n  this.id = 'ModuleInternal';\n  this.pendingPorts = 0;\n  this.requests = {};\n  this.unboundPorts = {};\n\n  util.handleEvents(this);\n};\n\n/**\n * Message handler for this port.\n * This port only handles two messages:\n * The first is its setup from the manager, which it uses for configuration.\n * The second is from the module controller (fdom.port.Module), which provides\n * the manifest info for the module.\n * @method onMessage\n * @param {String} flow The detination of the message.\n * @param {Object} message The message.\n */\nModuleInternal.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n    }\n  } else if (flow === 'default' && !this.appId) {\n    // Recover the ID of this module:\n    this.port = this.manager.hub.getDestination(message.channel);\n    this.externalChannel = message.channel;\n    this.appId = message.appId;\n    this.lineage = message.lineage;\n\n    var objects = this.mapProxies(message.manifest);\n\n    this.generateEnv(message.manifest, objects).then(function () {\n      return this.loadLinks(objects);\n    }.bind(this)).then(this.loadScripts.bind(this, message.id,\n        message.manifest.app.script)).then(null, function (err) {\n      this.debug.error('Could not set up module ' + this.appId + ': ', err);\n    }.bind(this));\n  } else if (flow === 'default' && message.type === 'resolve.response' &&\n             this.requests[message.id]) {\n    this.requests[message.id](message.data);\n    delete this.requests[message.id];\n  } else if (flow === 'default' && message.type === 'require.failure' &&\n             this.unboundPorts[message.id]) {\n    this.unboundPorts[message.id].callback(undefined, message.error);\n    delete this.unboundPorts[message.id];\n  } else if (flow === 'default' && message.type === 'manifest') {\n    this.emit('manifest', message);\n    this.updateManifest(message.name, message.manifest);\n  } else if (flow === 'default' && message.type === 'Connection') {\n    // Multiple connections can be made to the default provider.\n    if (message.api && this.providers[message.api]) {\n      this.manager.createLink(this.providers[message.api], message.channel,\n                             this.port, message.channel);\n    } else if (this.defaultPort &&\n               (message.api === this.defaultPort.api || !message.api)) {\n      this.manager.createLink(this.defaultPort, message.channel,\n                              this.port, message.channel);\n    } else {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\n/**\n * Get a textual description of this Port.\n * @method toString\n * @return {String} a description of this Port.\n */\nModuleInternal.prototype.toString = function () {\n  return \"[Environment Helper]\";\n};\n\n/**\n * Generate an externaly visisble namespace\n * @method generateEnv\n * @param {Object} manifest The manifest of the module.\n * @param {Object[]} items Other interfaces to load.\n * @returns {Promise} A promise when the external namespace is visible.\n * @private\n */\nModuleInternal.prototype.generateEnv = function (manifest, items) {\n  return this.binder.bindDefault(this.port, this.api, manifest, true).then(\n    function (binding) {\n      var i = 0;\n      binding.port.api = binding.external.api;\n      this.defaultPort = binding.port;\n      if (binding.external.api) {\n        for (i = 0; i < items.length; i += 1) {\n          if (items[i].name === binding.external.api && items[i].def.provides) {\n            items.splice(i, 1);\n            break;\n          }\n        }\n      }\n      this.config.global.freedom = binding.external;\n    }.bind(this)\n  );\n};\n\n/**\n * Register an unused channel ID for callback, and once information\n * about the channel is known, call the handler with that information.\n * @method registerId\n * @param {String} api The preferred API to use for the new channel.\n * @param {Function} callback Function to call once channel ready\n * @returns {String} The allocated channel name.\n */\nModuleInternal.prototype.registerId = function (api, callback) {\n  var id = util.getId();\n  this.unboundPorts[id] = {\n    name: api,\n    callback: callback\n  };\n  return id;\n};\n\n/**\n * Attach a proxy to the externally visible namespace.\n * @method attach\n * @param {String} name The name of the proxy.\n * @param {Boolean} provides If this proxy is a provider.\n * @param {ProxyInterface} proxy The proxy to attach.\n * @param {String} api The API the proxy implements.\n * @private.\n */\nModuleInternal.prototype.attach = function (name, provides, proxy) {\n  var exp = this.config.global.freedom;\n\n  if (provides) {\n    this.providers[name] = proxy.port;\n  }\n\n  if (!exp[name]) {\n    exp[name] = proxy.external;\n    if (this.manifests[name]) {\n      exp[name].manifest = this.manifests[name];\n    }\n  }\n\n  this.pendingPorts -= 1;\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return exp[name];\n};\n\n/**\n * Request a set of proxy interfaces, and bind them to the external\n * namespace.\n * @method loadLinks\n * @param {Object[]} items Descriptors of the proxy ports to load.\n * @private\n * @returns {Promise} Promise for when all links are loaded.\n */\n//TODO(willscott): promise should be chained, rather than going through events.\nModuleInternal.prototype.loadLinks = function (items) {\n  var i, proxy, provider, core,\n    manifestPredicate = function (name, flow, msg) {\n      return flow === 'manifest' && msg.name === name;\n    },\n    onManifest = function (item, msg) {\n      var definition = {\n        name: item.api\n      };\n      if (!msg.manifest.api || !msg.manifest.api[item.api]) {\n        definition.definition = null;\n      } else {\n        definition.definition = msg.manifest.api[item.api];\n      }\n      this.binder.getExternal(this.port, item.name, definition).then(\n        this.attach.bind(this, item.name, false)\n      );\n    }.bind(this),\n    promise = new PromiseCompat(function (resolve, reject) {\n      this.once('start', resolve);\n    }.bind(this));\n\n  for (i = 0; i < items.length; i += 1) {\n    if (items[i].api && !items[i].def) {\n      if (this.manifests[items[i].name]) {\n        onManifest(items[i], {\n          manifest: this.manifests[items[i].name]\n        });\n      } else {\n        this.once(manifestPredicate.bind({}, items[i].name),\n                  onManifest.bind(this, items[i]));\n      }\n    } else {\n      this.binder.getExternal(this.port, items[i].name, items[i].def).then(\n        this.attach.bind(this, items[i].name, items[i].def &&\n                         items[i].def.provides)\n      );\n    }\n    this.pendingPorts += 1;\n  }\n\n  // Allow resolution of files by parent.\n  this.manager.resource.addResolver(function (manifest, url, resolve) {\n    var id = util.getId();\n    this.requests[id] = resolve;\n    this.emit(this.externalChannel, {\n      type: 'resolve',\n      id: id,\n      data: url\n    });\n    return true;\n  }.bind(this));\n\n  // Attach Core.\n  this.pendingPorts += 1;\n\n  core = this.api.get('core').definition;\n  provider = new Provider(core, this.debug);\n  this.manager.getCore(function (CoreProv) {\n    new CoreProv(this.manager).setId(this.lineage, this);\n    provider.getInterface().provideAsynchronous(CoreProv);\n  }.bind(this));\n\n  this.emit(this.controlChannel, {\n    type: 'Link to core',\n    request: 'link',\n    name: 'core',\n    to: provider\n  });\n\n  this.binder.getExternal(provider, 'default', {\n    name: 'core',\n    definition: core\n  }).then(function (core) {\n    core.external.getLoggerSync = this.debug.getLoggingShim(\n        core.external().getLogger);\n    this.attach('core', false, core);\n  }.bind(this));\n\n\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return promise;\n};\n\n/**\n * Update the exported manifest of a dependency.\n * Sets it internally if not yet exported, or attaches the property if it\n * is loaded after the module has started (we don't delay start to retreive\n * the manifest of the dependency.)\n * @method updateManifest\n * @param {String} name The Dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModuleInternal.prototype.updateManifest = function (name, manifest) {\n  var exp = this.config.global.freedom;\n\n  if (exp && exp[name]) {\n    exp[name].manifest = manifest;\n  // Handle require() dependency resolution.\n  } else if (this.unboundPorts[name]) {\n    this.binder.getExternal(this.port, name,\n        this.binder.getAPI(manifest, this.api, this.unboundPorts[name].api))\n      .then(\n        this.attach.bind(this, name, false)\n      ).then(function(proxy) {\n        this.unboundPorts[name].callback(proxy);\n        delete this.unboundPorts[name];\n      }.bind(this));\n  } else {\n    this.manifests[name] = manifest;\n  }\n};\n\n/**\n * Determine which proxy ports should be exposed by this module.\n * @method mapProxies\n * @param {Object} manifest the module JSON manifest.\n * @return {Object[]} proxy descriptors defined in the manifest.\n */\nModuleInternal.prototype.mapProxies = function (manifest) {\n  var proxies = [], seen = ['core'], i, obj;\n\n  if (manifest.permissions) {\n    for (i = 0; i < manifest.permissions.length; i += 1) {\n      obj = {\n        name: manifest.permissions[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (seen.indexOf(obj.name) < 0 && obj.def) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  if (manifest.dependencies) {\n    util.eachProp(manifest.dependencies, function (desc, name) {\n      obj = {\n        name: name,\n        api: desc.api\n      };\n      if (seen.indexOf(name) < 0) {\n        if (desc.api) {\n          obj.def = this.api.get(desc.api);\n        }\n        proxies.push(obj);\n        seen.push(name);\n      }\n    }.bind(this));\n  }\n\n  if (manifest.provides) {\n    for (i = 0; i < manifest.provides.length; i += 1) {\n      obj = {\n        name: manifest.provides[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (obj.def) {\n        obj.def.provides = true;\n      } else if (manifest.api && manifest.api[obj.name]) {\n        obj.def = {\n          name: obj.name,\n          definition: manifest.api[obj.name],\n          provides: true\n        };\n      } else {\n        this.debug.warn('Module will not provide \"' + obj.name +\n          '\", since no declaration can be found.');\n        /*jslint continue:true*/\n        continue;\n      }\n      /*jslint continue:false*/\n      if (seen.indexOf(obj.name) < 0) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  return proxies;\n};\n\n/**\n * Load external scripts into this namespace.\n * @method loadScripts\n * @param {String} from The URL of this modules's manifest.\n * @param {String[]} scripts The URLs of the scripts to load.\n */\nModuleInternal.prototype.loadScripts = function (from, scripts) {\n  // TODO(salomegeo): add a test for failure.\n  var importer = function (script, resolve, reject) {\n    try {\n      this.config.global.importScripts(script);\n      resolve(true);\n    } catch (e) {\n      reject(e);\n    }\n  }.bind(this),\n    scripts_count,\n    load;\n  if (typeof scripts === 'string') {\n    scripts_count = 1;\n  } else {\n    scripts_count = scripts.length;\n  }\n\n  load = function (next) {\n    if (next === scripts_count) {\n      this.emit(this.externalChannel, {\n        type: \"ready\"\n      });\n      return;\n    }\n\n    var script;\n    if (typeof scripts === 'string') {\n      script = scripts;\n    } else {\n      script = scripts[next];\n    }\n\n    this.manager.resource.get(from, script).then(function (url) {\n      this.tryLoad(importer, url).then(function () {\n        load(next + 1);\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n\n\n  if (!this.config.global.importScripts) {\n    importer = function (url, resolve, reject) {\n      var script = this.config.global.document.createElement('script');\n      script.src = url;\n      script.addEventListener('load', resolve, true);\n      this.config.global.document.body.appendChild(script);\n    }.bind(this);\n  }\n\n  load(0);\n};\n\n/**\n * Attempt to load resolved scripts into the namespace.\n * @method tryLoad\n * @private\n * @param {Function} importer The actual import function\n * @param {String[]} urls The resoved URLs to load.\n * @returns {Promise} completion of load\n */\nModuleInternal.prototype.tryLoad = function (importer, url) {\n  return new PromiseCompat(importer.bind({}, url)).then(function (val) {\n    return val;\n  }, function (e) {\n    this.debug.warn(e.stack);\n    this.debug.error(\"Error loading \" + url, e);\n    this.debug.error(\"If the stack trace is not useful, see https://\" +\n        \"github.com/freedomjs/freedom/wiki/Debugging-Script-Parse-Errors\");\n  }.bind(this));\n};\n\nmodule.exports = ModuleInternal;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\nvar Module = require('./module');\nvar util = require('./util');\n\n/**\n * The Policy registry for freedom.js.  Used to look up modules and provide\n * migration and coallesing of execution.\n * @Class Policy\n * @param {Manager} manager The manager of the active runtime.\n * @param {Resource} resource The resource loader of the active runtime.\n * @param {Object} config The local config.\n * @constructor\n */\nvar Policy = function(manager, resource, config) {\n  this.api = manager.api;\n  this.debug = manager.debug;\n  this.location = config.location;\n  this.resource = resource;\n\n  this.config = config;\n  this.runtimes = [];\n  this.policies = [];\n  this.pending = {};\n  util.handleEvents(this);\n\n  this.add(manager, config.policy);\n  this.runtimes[0].local = true;\n};\n\n/**\n * The policy a runtime is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultPolicy\n */\nPolicy.prototype.defaultPolicy = {\n  background: false, // Can this runtime run 'background' modules?\n  interactive: true // Is there a view associated with this runtime?\n  // TODO: remaining runtime policy.\n};\n\n/**\n * The constraints a code modules is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultConstraints\n */\nPolicy.prototype.defaultConstraints = {\n  isolation: \"always\", // values: always, app, never\n  placement: \"local\" // values: local, stable, redundant\n  // TODO: remaining constraints, express platform-specific dependencies.\n};\n\n/**\n * Resolve a module from its canonical URL.\n * Reponds with the promise of a port representing the module, \n * @method get\n * @param {String[]} lineage The lineage of the requesting module.\n * @param {String} id The canonical ID of the module to get.\n * @returns {Promise} A promise for the local port towards the module.\n */\nPolicy.prototype.get = function(lineage, id) {\n  \n  // Make sure that a module isn't getting located twice at the same time.\n  // This is resolved by delaying if it until we see it in a 'moduleAdd' event.\n  if (this.pending[id]) {\n    return new PromiseCompat(function (resolve, reject) {\n      this.once('placed', function(l, i) {\n        this.get(l, i).then(resolve, reject);\n      }.bind(this, lineage, id));\n    }.bind(this));\n  } else {\n    this.pending[id] = true;\n  }\n\n  return this.loadManifest(id).then(function(manifest) {\n    var constraints = this.overlay(this.defaultConstraints, manifest.constraints),\n        runtime = this.findDestination(lineage, id, constraints),\n        portId;\n    if (runtime.local) {\n      portId = this.isRunning(runtime, id, lineage,\n                             constraints.isolation !== 'never');\n      if(constraints.isolation !== 'always' && portId) {\n        this.debug.info('Reused port ' + portId);\n        delete this.pending[id];\n        this.emit('placed');\n        return runtime.manager.getPort(portId);\n      } else {\n        return new Module(id, manifest, lineage, this);\n      }\n    } else {\n      // TODO: Create a port to go to the remote runtime.\n      this.debug.error('Unexpected location selected for module placement');\n      return false;\n    }\n  }.bind(this), function(err) {\n    this.debug.error('Policy Error Resolving ' + id, err);\n    throw(err);\n  }.bind(this));\n};\n\n/**\n * Find the runtime destination for a module given its constraints and the\n * module creating it.\n * @method findDestination\n * @param {String[]} lineage The identity of the module creating this module.\n * @param {String] id The canonical url of the module\n * @param {Object} constraints Constraints for the module.\n * @returns {Object} The element of this.runtimes where the module should run.\n */\nPolicy.prototype.findDestination = function(lineage, id, constraints) {\n  var i;\n\n  // Step 1: if an instance already exists, the m\n  if (constraints.isolation !== 'always') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.isRunning(this.runtimes[i], id, lineage,\n                         constraints.isolation !== 'never')) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 2: if the module wants stability, it may need to be remote.\n  if (constraints.placement === 'local') {\n    return this.runtimes[0];\n  } else if (constraints.placement === 'stable') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.policies[i].background) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 3: if the module needs longevity / interactivity, it may want to be remote.\n  return this.runtimes[0];\n};\n\n/**\n * Determine if a known runtime is running an appropriate instance of a module.\n * @method isRunning\n * @param {Object} runtime The runtime to check.\n * @param {String} id The module to look for.\n * @param {String[]} from The identifier of the requesting module.\n * @param {Boolean} fullMatch If the module needs to be in the same app.\n * @returns {String|Boolean} The Module id if it is running, or false if not.\n */\nPolicy.prototype.isRunning = function(runtime, id, from, fullMatch) {\n  var i = 0, j = 0, okay;\n  for (i = 0; i < runtime.modules.length; i += 1) {\n    if (fullMatch && runtime.modules[i].length === from.length + 1) {\n      okay = true;\n      for (j = 0; j < from.length; j += 1) {\n        if (runtime.modules[i][j + 1].indexOf(from[j]) !== 0) {\n          okay = false;\n          break;\n        }\n      }\n      if (runtime.modules[i][0].indexOf(id) !== 0) {\n        okay = false;\n      }\n\n      if (okay) {\n        return runtime.modules[i][0];\n      }\n    } else if (!fullMatch && runtime.modules[i][0].indexOf(id) === 0) {\n      return runtime.modules[i][0];\n    }\n  }\n  return false;\n};\n\n/**\n * Get a promise of the manifest for a module ID.\n * @method loadManifest\n * @param {String} manifest The canonical ID of the manifest\n * @returns {Promise} Promise for the json contents of the manifest.\n */\nPolicy.prototype.loadManifest = function(manifest) {\n  return this.resource.getContents(manifest).then(function(data) {\n    var resp = {};\n    try {\n      return JSON.parse(data);\n    } catch(err) {\n      this.debug.error(\"Failed to load \" + manifest + \": \" + err);\n      throw new Error(\"No Manifest Available\");\n    }\n  }.bind(this));\n};\n\n/**\n * Add a runtime to keep track of in this policy.\n * @method add\n * @param {fdom.port} port The port to use for module lifetime info\n * @param {Object} policy The policy of the runtime.\n */\nPolicy.prototype.add = function(port, policy) {\n  var runtime = {\n    manager: port,\n    modules: []\n  };\n  this.runtimes.push(runtime);\n  this.policies.push(this.overlay(this.defaultPolicy, policy));\n\n  port.on('moduleAdd', function(runtime, info) {\n    var lineage = [];\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    runtime.modules.push(lineage);\n    if (this.pending[info.lineage[0]]) {\n      delete this.pending[info.lineage[0]];\n      this.emit('placed');\n    }\n  }.bind(this, runtime));\n  port.on('moduleRemove', function(runtime, info) {\n    var lineage = [], i, modFingerprint;\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    modFingerprint = lineage.toString();\n\n    for (i = 0; i < runtime.modules.length; i += 1) {\n      if (runtime.modules[i].toString() === modFingerprint) {\n        runtime.modules.splice(i, 1);\n        return;\n      }\n    }\n    this.debug.warn('Unknown module to remove: ', info.id);\n  }.bind(this, runtime));\n};\n\n/**\n * Overlay a specific policy or constraint instance on default settings.\n * TODO: consider making static.\n * @method overlay\n * @private\n * @param {Object} base The default object\n * @param {Object} overlay The superceeding object\n * @returns {Object} A new object with base parameters when not set in overlay.\n */\nPolicy.prototype.overlay = function(base, overlay) {\n  var ret = {};\n\n  util.mixin(ret, base);\n  if (overlay) {\n    util.mixin(ret, overlay, true);\n  }\n  return ret;\n};\n\nmodule.exports = Policy;\n","/*jslint indent:2, node:true, sloppy:true, browser:true */\nvar Consumer = require('./consumer');\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable provider.\n * @class Provider\n * @implements Port\n * @uses handleEvents\n * @param {Object} def The interface of the provider.\n * @param {Debug} debug The debugger to use for logging.\n * @contructor\n */\nvar Provider = function (def, debug) {\n  this.id = Consumer.nextId();\n  util.handleEvents(this);\n  this.debug = debug;\n\n  this.definition = def;\n  this.mode = Provider.mode.synchronous;\n  this.channels = {};\n  this.iface = null;\n  this.closeHandlers = {};\n  this.providerCls = null;\n\n  this.ifaces = {};\n  this.emits = {};\n};\n\n/**\n * Provider modes of operation.\n * @property mode\n * @static\n * @type number\n */\nProvider.mode = {\n  synchronous: 0,\n  asynchronous: 1,\n  promises: 2\n};\n\n/**\n * Receive external messages for the provider.\n * @method onMessage\n * @param {String} source the source identifier of the message.\n * @param {Object} message The received message.\n */\nProvider.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.channels[message.name] = message.channel;\n    this.emit(message.channel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    if (message.channel === this.controlChannel) {\n      delete this.controlChannel;\n    }\n    this.close();\n  } else {\n    if (!this.channels[source] && message.channel) {\n      this.channels[source] = message.channel;\n      this.emit('start');\n      return;\n    } else if (!this.channels[source]) {\n      this.debug.warn('Message from unconfigured source: ' + source);\n      return;\n    }\n\n    if (message.type === 'close' && message.to) {\n      this.teardown(source, message.to);\n    } else if (message.to && this.emits[source] &&\n               this.emits[source][message.to]) {\n      message.message.to = message.to;\n      this.emits[source][message.to](message.message);\n    } else if (message.to && message.message &&\n        message.message.type === 'construct') {\n      var args = Consumer.portableToMessage(\n          (this.definition.constructor && this.definition.constructor.value) ?\n              this.definition.constructor.value : [],\n          message.message,\n          this.debug\n        ),\n        instance;\n      if (!this.ifaces[source]) {\n        this.ifaces[source] = {};\n        this.emits[source] = {};\n      }\n      this.ifaces[source][message.to] = true;\n      instance = this.getProvider(source, message.to, args);\n      // don't save a reference to instance if it closed itself already.\n      if (this.ifaces[source] &&\n          this.ifaces[source][message.to]) {\n        this.ifaces[source][message.to] = instance.instance;\n        this.emits[source][message.to] = instance.onmsg;\n      }\n    } else {\n      this.debug.warn(this.toString() + ' dropping message ' +\n          JSON.stringify(message));\n    }\n  }\n};\n\n/**\n * Close / teardown the flow this provider terminates.\n * @method close\n */\nProvider.prototype.close = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Provider Closing',\n      request: 'close'\n    });\n    delete this.controlChannel;\n  }\n  this.emit('close');\n\n  // Release references.\n  delete this.iface;\n  delete this.providerCls;\n  this.ifaces = {};\n  this.emits = {};\n  this.emitChannel = null;\n};\n\n/**\n * Teardown a single instance of an object fulfilling this provider.\n * @method teardown\n * @param {String} source The consumer source of the instance.\n * @param {String} id The id of the instance to tear down.\n */\nProvider.prototype.teardown = function (source, id) {\n  // Ignore teardown of non-existant ids.\n  if (!this.ifaces[source]) {\n    return;\n  }\n\n  delete this.ifaces[source][id];\n  delete this.emits[source][id];\n  if (this.closeHandlers[source] && this.closeHandlers[source][id]) {\n    util.eachProp(this.closeHandlers[source][id], function (prop) {\n      prop();\n    });\n    delete this.closeHandlers[source][id];\n  }\n};\n\n/**\n * Get an interface to expose externally representing this port.\n * Providers are registered with the port using either\n * provideSynchronous or provideAsynchronous depending on the desired\n * return interface.\n * @method getInterface\n * @return {Object} The external interface of this Provider.\n */\nProvider.prototype.getInterface = function () {\n  if (this.iface) {\n    return this.iface;\n  } else {\n    var sanityCheck = function (provider) {\n      if (typeof provider !== \"function\") {\n        throw new Error(\"Provider \" + this.toString() +\n            \" needs to be implemented by a function.\");\n      }\n    };\n    this.iface = {\n      provideSynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.synchronous;\n      }.bind(this),\n      provideAsynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.asynchronous;\n      }.bind(this),\n      providePromises: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.promises;\n      }.bind(this)\n    };\n\n    util.eachProp(this.definition, function (prop, name) {\n      switch (prop.type) {\n      case \"constant\":\n        Object.defineProperty(this.iface, name, {\n          value: Consumer.recursiveFreezeObject(prop.value),\n          writable: false\n        });\n        break;\n      }\n    }.bind(this));\n\n    return this.iface;\n  }\n};\n\n/**\n * Create a function that can be used to get interfaces from this provider from\n * a user-visible point.\n * @method getProxyInterface\n */\nProvider.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    return p.getInterface();\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (ids, source) {\n        util.eachProp(ids, function (candidate, id) {\n          if (candidate === iface) {\n            this.teardown(source, id);\n            this.emit(this.channels[source], {\n              type: 'close',\n              to: id\n            });\n            return true;\n          }\n        }.bind(this));\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.close();\n    }\n  }.bind(this);\n\n  func.onClose = function (iface, handler) {\n    // Listen to the channel directly.\n    if (typeof iface === 'function' && handler === undefined) {\n      this.once('close', iface);\n      return;\n    }\n\n    util.eachProp(this.ifaces, function (ids, source) {\n      util.eachProp(ids, function (candidate, id) {\n        if (candidate === iface) {\n          if (!this.closeHandlers[source]) {\n            this.closeHandlers[source] = {};\n          }\n          if (!this.closeHandlers[source][id]) {\n            this.closeHandlers[source][id] = [];\n          }\n          this.closeHandlers[source][id].push(handler);\n          return true;\n        }\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n  return func;\n};\n\n/**\n * Get a new instance of the registered provider.\n * @method getProvider\n * @param {String} source The port this instance is interactign with.\n * @param {String} identifier the messagable address for this provider.\n * @param {Array} args Constructor arguments for the provider.\n * @return {Function} A function to send messages to the provider.\n */\nProvider.prototype.getProvider = function (source, identifier, args) {\n  if (!this.providerCls) {\n    this.debug.error('Cannot instantiate provider, since it is not provided');\n    return {instance: undefined, onmsg: undefined};\n  }\n\n  var events = {},\n    dispatchEvent,\n    BoundClass,\n    instance;\n\n  util.eachProp(this.definition, function (prop, name) {\n    if (prop.type === 'event') {\n      events[name] = prop;\n    }\n  });\n\n  dispatchEvent = function (src, ev, id, name, value) {\n    if (ev[name]) {\n      var streams = Consumer.messageToPortable(ev[name].value, value,\n                                                   this.debug);\n      this.emit(this.channels[src], {\n        type: 'message',\n        to: id,\n        message: {\n          name: name,\n          type: 'event',\n          text: streams.text,\n          binary: streams.binary\n        }\n      });\n    }\n  }.bind(this, source, events, identifier);\n\n  // this is all to say: new providerCls(dispatchEvent, args[0], args[1],...)\n  BoundClass = this.providerCls.bind.apply(this.providerCls,\n      [this.providerCls, dispatchEvent].concat(args || []));\n  instance = new BoundClass();\n\n  return {\n    instance: instance,\n    onmsg: function (port, src, msg) {\n      var prop, debug, args, returnPromise, ret;\n      if (msg.action === 'method') {\n        if (typeof this[msg.type] !== 'function') {\n          port.debug.warn(\"Provider does not implement \" + msg.type + \"()!\");\n          port.emit(port.channels[src], {\n            type: 'method',\n            to: msg.to,\n            message: {\n              to: msg.to,\n              type: 'method',\n              reqId: msg.reqId,\n              name: msg.type,\n              error: 'Provider does not implement ' + msg.type + '()!'\n            }\n          });\n          return;\n        }\n        prop = port.definition[msg.type];\n        debug = port.debug;\n        args = Consumer.portableToMessage(prop.value, msg, debug);\n        if (msg.reqId === null) {\n          // Reckless call.  Ignore return value.\n          ret = function(resolve, reject) {\n            if (reject) {\n              debug.error(reject);\n            }\n          };\n        } else {\n          ret = function (src, msg, prop, resolve, reject) {\n            var streams = Consumer.messageToPortable(prop.ret, resolve,\n                                                         debug);\n            this.emit(this.channels[src], {\n              type: 'method',\n              to: msg.to,\n              message: {\n                to: msg.to,\n                type: 'method',\n                reqId: msg.reqId,\n                name: msg.type,\n                text: streams.text,\n                binary: streams.binary,\n                error: reject\n              }\n            });\n          }.bind(port, src, msg, prop);\n        }\n        if (!Array.isArray(args)) {\n          args = [args];\n        }\n        if (port.mode === Provider.mode.synchronous) {\n          try {\n            ret(this[msg.type].apply(this, args));\n          } catch (e1) {\n            ret(undefined, e1.message + ' ' + e1.stack);\n          }\n        } else if (port.mode === Provider.mode.asynchronous) {\n          try {\n            this[msg.type].apply(instance, args.concat(ret));\n          } catch (e2) {\n            ret(undefined, e2.message + ' ' + e2.stack);\n          }\n        } else if (port.mode === Provider.mode.promises) {\n          try {\n            returnPromise = this[msg.type].apply(this, args);\n            if (returnPromise && returnPromise.then) {\n              returnPromise.then(ret, ret.bind({}, undefined));\n            } else {\n              ret(undefined, 'No promise returned from ' +\n                  msg.type + ': ' + returnPromise);\n            }\n          } catch (e3) {\n            ret(undefined, e3.message + ' ' + e3.stack);\n          }\n        }\n      }\n    }.bind(instance, this, source)\n  };\n};\n\n/**\n * Get a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nProvider.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Provider \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Provider]\";\n  }\n};\n\nmodule.exports = Provider;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('../util');\nvar Consumer = require('../consumer');\n\nvar ApiInterface = function(def, onMsg, emit, debug) {\n  var inflight = {},\n      events = null,\n      emitter = null,\n      reqId = 0,\n      args = arguments;\n\n  util.eachProp(def, function(prop, name) {\n    switch(prop.type) {\n    case 'method':\n      this[name] = function() {\n        // Note: inflight should be registered before message is passed\n        // in order to prepare for synchronous in-window pipes.\n        var thisReq = reqId,\n            promise = new PromiseCompat(function(resolve, reject) {\n              inflight[thisReq] = {\n                resolve:resolve,\n                reject:reject,\n                template: prop.ret\n              };\n            }),\n            streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        reqId += 1;\n        emit({\n          action: 'method',\n          type: name,\n          reqId: thisReq,\n          text: streams.text,\n          binary: streams.binary\n        });\n        return promise;\n      };\n      this[name].reckless = function () {\n        var streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        emit({\n          action: 'method',\n          type: name,\n          reqId: null,  // Marks this as a reckless call.\n          text: streams.text,\n          binary: streams.binary\n        });\n        // Return type is void.\n      };\n      break;\n    case 'event':\n      if(!events) {\n        util.handleEvents(this);\n        emitter = this.emit;\n        delete this.emit;\n        events = {};\n      }\n      events[name] = prop;\n      break;\n    case 'constant':\n      Object.defineProperty(this, name, {\n        value: Consumer.recursiveFreezeObject(prop.value),\n        writable: false\n      });\n      break;\n    }\n  }.bind(this));\n\n  onMsg(this, function(type, msg) {\n    if (type === 'close') {\n      if (this.off) {\n        this.off();\n      }\n      util.eachProp(inflight, function (obj) {\n        obj.reject('closed');\n      });\n      inflight = {};\n      return;\n    }\n    if (!msg) {\n      return;\n    }\n    if (msg.type === 'method') {\n      if (inflight[msg.reqId]) {\n        var resolver = inflight[msg.reqId],\n            template = resolver.template;\n        delete inflight[msg.reqId];\n        if (msg.error) {\n          resolver.reject(msg.error);\n        } else {\n          resolver.resolve(Consumer.portableToMessage(template, msg, debug));\n        }\n      } else {\n        debug.error('Incoming message claimed to be an RPC ' +\n                         'returning for unregistered call', msg.reqId);\n      }\n    } else if (msg.type === 'event') {\n      if (events[msg.name]) {\n        emitter(msg.name, Consumer.portableToMessage(events[msg.name].value,\n                msg, debug));\n      }\n    }\n  }.bind(this));\n\n  args = Consumer.messageToPortable(\n      (def.constructor && def.constructor.value) ? def.constructor.value : [],\n      Array.prototype.slice.call(args, 4),\n      debug);\n\n  emit({\n    type: 'construct',\n    text: args.text,\n    binary: args.binary\n  });\n};\n\nmodule.exports = ApiInterface;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar util = require('../util');\n\nvar EventInterface = function(onMsg, emit, debug) {\n  util.handleEvents(this);\n  \n  onMsg(this, function(emit, type, msg) {\n    if (type === 'close') {\n      return;\n    }\n    emit(msg.type, msg.message);\n  }.bind(this, this.emit));\n\n  this.emit = function(emitter, type, msg) {\n    emitter({type: type, message: msg}, true);\n  }.bind({}, emit);\n};\n\nmodule.exports = EventInterface;\n","/*jslint indent:2, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar EventInterface = require('./proxy/eventInterface');\nvar Consumer = require('./consumer');\nvar Provider = require('./provider');\n\n/**\n * A Proxy Binder manages the external interface, and creates one of\n * the different types of objects exposed by freedom either as a global\n * within a worker / module context, or returned by an external call to\n * create a freedom runtime.\n * @Class ProxyBinder\n * @param {Manager} manager The manager for the active runtime.\n */\nvar ProxyBinder = function (manager) {\n  'use strict';\n  this.manager = manager;\n};\n\n/**\n * Create a proxy for a freedom port, and return it once loaded.\n * @method getExternal\n * @param {Port} port The port for the proxy to communicate with.\n * @param {String} name The name of the proxy.\n * @param {Object} [definition] The definition of the API to expose.\n * @param {String} definition.name The name of the API.\n * @param {Object} definition.definition The definition of the API.\n * @param {Boolean} definition.provides Whether this is a consumer or provider.\n * @returns {Promise} A promise for the active proxy interface.\n */\nProxyBinder.prototype.getExternal = function (port, name, definition) {\n  'use strict';\n  var proxy, api;\n  return new PromiseCompat(function (resolve, reject) {\n    if (definition) {\n      api = definition.name;\n      if (definition.provides) {\n        proxy = new Provider(definition.definition, this.manager.debug);\n      } else {\n        proxy = new Consumer(ApiInterface.bind({},\n            definition.definition),\n            this.manager.debug);\n      }\n    } else {\n      proxy = new Consumer(EventInterface, this.manager.debug);\n    }\n\n    proxy.once('start', function () {\n      var iface = proxy.getProxyInterface();\n      if (api) {\n        iface.api = api;\n      }\n      resolve({\n        port: proxy,\n        external: iface\n      });\n    });\n\n    this.manager.createLink(port, name, proxy);\n  }.bind(this));\n};\n\n/**\n * Bind the default proxy for a freedom port.\n * @method bindDefault\n * @param {Port} port The port for the proxy to communicate with.\n * @param {Api} api The API loader with API definitions.\n * @param {Object} manifest The manifest of the module to expose.\n * @param {Boolean} internal Whether the interface is for inside the module.\n * @returns {Promise} A promise for a proxy interface.\n * @private\n */\nProxyBinder.prototype.bindDefault = function (port, api, manifest, internal) {\n  'use strict';\n  var metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description\n  }, def;\n\n  if (manifest['default']) {\n    def = api.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      def = {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    if (internal && manifest.provides &&\n        manifest.provides.indexOf(manifest['default']) !== false) {\n      def.provides = true;\n    } else if (internal) {\n      api.debug.warn(\"default API not provided, \" +\n                     \"are you missing a provides key in your manifest?\");\n    }\n  }\n\n  return this.getExternal(port, 'default', def).then(\n    function (metadata, info) {\n      info.external.manifest = metadata;\n      return info;\n    }.bind(this, metadata)\n  );\n};\n\n/**\n * Get the definition for a proxy given a requested API and the manifest of\n * the module.\n * @method getAPI\n * @param {Object} manifest The manifest for the proxy.\n * @param {Api} apiProvider The registry of known APIs.\n * @param {String} api The Requested API.\n * @returns {Object} definition The definition to use for calls to getExternal.\n */\nProxyBinder.prototype.getAPI = function (manifest, apiProvider, api) {\n  'use strict';\n  if (manifest.api && manifest.api[api]) {\n    return {\n      name: api,\n      definition: manifest.api[api]\n    };\n  } else if (manifest['default']) {\n    var def = apiProvider.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      return {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    return def;\n  } else {\n    return false;\n  }\n};\n\n\nmodule.exports = ProxyBinder;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('./util');\n\n/**\n * The Resource registry for FreeDOM.  Used to look up requested Resources,\n * and provide lookup and migration of resources.\n * @Class Resource\n * @param {Debug} debug The logger to use for debugging.\n * @constructor\n */\nvar Resource = function (debug) {\n  this.debug = debug;\n  this.files = {};\n  this.resolvers = [this.httpResolver, this.nullResolver];\n  this.contentRetrievers = {\n    'http': this.xhrRetriever,\n    'https': this.xhrRetriever,\n    'chrome-extension': this.xhrRetriever,\n    'resource': this.xhrRetriever,\n    'chrome': this.xhrRetriever,\n    'app': this.xhrRetriever,\n    'manifest': this.manifestRetriever\n  };\n};\n\n/**\n * Resolve a resurce URL requested from a module.\n * @method get\n * @param {String} manifest The canonical address of the module requesting.\n * @param {String} url The resource to get.\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.get = function (manifest, url) {\n  var key = JSON.stringify([manifest, url]);\n  \n  return new PromiseCompat(function (resolve, reject) {\n    if (this.files[key]) {\n      resolve(this.files[key]);\n    } else {\n      this.resolve(manifest, url).then(function (key, resolve, address) {\n        this.files[key] = address;\n        //fdom.debug.log('Resolved ' + key + ' to ' + address);\n        resolve(address);\n      }.bind(this, key, resolve), reject);\n    }\n  }.bind(this));\n};\n\n/**\n * Get the contents of a resource.\n * @method getContents\n * @param {String} url The resource to read.\n * @returns {Promise} A promise for the resource contents.\n */\nResource.prototype.getContents = function (url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var prop;\n    if (!url) {\n      this.debug.warn(\"Asked to get contents of undefined URL.\");\n      return reject();\n    }\n    for (prop in this.contentRetrievers) {\n      if (this.contentRetrievers.hasOwnProperty(prop)) {\n        if (url.indexOf(prop + \"://\") === 0) {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        } else if (url.indexOf(\"://\") === -1 && prop === \"null\") {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        }\n      }\n    }\n    reject();\n  }.bind(this));\n};\n\n/**\n * Return a promise that resolves when the first of an array of promises\n * resolves, or rejects after all promises reject. Can be thought of as\n * the missing 'Promise.any' - race is no good, since early rejections\n * preempt a subsequent resolution.\n * @private\n * @static\n * @method FirstPromise\n * @param {Promise[]} Promises to select from\n * @returns {Promise} Promise resolving with a value from arguments.\n */\nvar firstPromise = function(promises) {\n  return new PromiseCompat(function(resolve, reject) {\n    var errors = [];\n    promises.forEach(function(promise) {\n      promise.then(resolve, function(err) {\n        errors.push(err);\n        if (errors.length === promises.length) {\n          reject(errors);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Resolve a resource using known resolvers. Unlike get, resolve does\n * not cache resolved resources.\n * @method resolve\n * @private\n * @param {String} manifest The module requesting the resource.\n * @param {String} url The resource to resolve;\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.resolve = function (manifest, url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var promises = [];\n    if (url === undefined) {\n      return reject();\n    }\n    util.eachReverse(this.resolvers, function (resolver) {\n      promises.push(new PromiseCompat(resolver.bind({}, manifest, url)));\n    }.bind(this));\n    firstPromise(promises).then(resolve, function() {\n      reject('No resolvers to handle url: ' + JSON.stringify([manifest, url]));\n    });\n  }.bind(this));\n};\n\n/**\n * Register resolvers: code that knows how to get resources\n * needed by the runtime. A resolver will be called with four\n * arguments: the absolute manifest of the requester, the\n * resource being requested, and a resolve / reject pair to\n * fulfill a promise.\n * @method addResolver\n * @param {Function} resolver The resolver to add.\n */\nResource.prototype.addResolver = function (resolver) {\n  this.resolvers.push(resolver);\n};\n\n/**\n * Register retrievers: code that knows how to load resources\n * needed by the runtime. A retriever will be called with a URL\n * to retrieve with a protocol that it is able to handle.\n * @method addRetriever\n * @param {String} proto The protocol to register for.\n * @param {Function} retriever The retriever to add.\n */\nResource.prototype.addRetriever = function (proto, retriever) {\n  if (this.contentRetrievers[proto]) {\n    this.debug.warn(\"Unwilling to override file retrieval for \" + proto);\n    return;\n  }\n  this.contentRetrievers[proto] = retriever;\n};\n\n/**\n * Register external resolvers and retreavers\n * @method register\n * @param {{\"proto\":String, \"resolver\":Function, \"retreaver\":Function}[]}\n *     resolvers The list of retreivers and resolvers.\n */\nResource.prototype.register = function (resolvers) {\n  if (!resolvers.length) {\n    return;\n  }\n\n  resolvers.forEach(function (item) {\n    if (item.resolver) {\n      this.addResolver(item.resolver);\n    } else if (item.proto && item.retriever) {\n      this.addRetriever(item.proto, item.retriever);\n    }\n  }.bind(this));\n};\n\n/**\n * Determine if a URL is an absolute URL of a given Scheme.\n * @method hasScheme\n * @static\n * @private\n * @param {String[]} protocols Whitelisted protocols\n * @param {String} URL the URL to match.\n * @returns {Boolean} If the URL is an absolute example of one of the schemes.\n */\nResource.hasScheme = function (protocols, url) {\n  var i;\n  for (i = 0; i < protocols.length; i += 1) {\n    if (url.indexOf(protocols[i] + \"://\") === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Remove './' and '../' from a URL\n * Required because Chrome Apps for Mobile (cca) doesn't understand\n * XHR paths with these relative components in the URL.\n * @method removeRelativePath\n * @param {String} url The URL to modify\n * @returns {String} url without './' and '../'\n **/\nResource.removeRelativePath = function (url) {\n  var idx = url.indexOf(\"://\") + 3,\n    stack,\n    toRemove,\n    result;\n  // Remove all instances of /./\n  url = url.replace(/\\/\\.\\//g, \"/\");\n  //Weird bug where in cca, manifest starts with 'chrome:////'\n  //This forces there to only be 2 slashes\n  while (url.charAt(idx) === \"/\") {\n    url = url.slice(0, idx) + url.slice(idx + 1, url.length);\n  }\n\n  // Advance to next /\n  idx = url.indexOf(\"/\", idx);\n  // Removing ../\n  stack = url.substr(idx + 1).split(\"/\");\n  while (stack.indexOf(\"..\") !== -1) {\n    toRemove = stack.indexOf(\"..\");\n    if (toRemove === 0) {\n      stack.shift();\n    } else {\n      stack.splice((toRemove - 1), 2);\n    }\n  }\n  \n  //Rebuild string\n  result = url.substr(0, idx);\n  for (idx = 0; idx < stack.length; idx += 1) {\n    result += \"/\" + stack[idx];\n  }\n  return result;\n};\n\n/**\n * Resolve URLs which can be accessed using standard HTTP requests.\n * @method httpResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.httpResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"http\", \"https\", \"chrome\", \"chrome-extension\", \"resource\",\n                   \"app\"],\n    dirname,\n    protocolIdx,\n    pathIdx,\n    path,\n    base,\n    result;\n\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(Resource.removeRelativePath(url));\n    return true;\n  }\n  \n  if (!manifest) {\n    reject();\n    return false;\n  }\n  if (Resource.hasScheme(protocols, manifest) &&\n      url.indexOf(\"://\") === -1) {\n    dirname = manifest.substr(0, manifest.lastIndexOf(\"/\"));\n    protocolIdx = dirname.indexOf(\"://\");\n    pathIdx = protocolIdx + 3 + dirname.substr(protocolIdx + 3).indexOf(\"/\");\n    path = dirname.substr(pathIdx);\n    base = dirname.substr(0, pathIdx);\n    if (url.indexOf(\"/\") === 0) {\n      resolve(Resource.removeRelativePath(base + url));\n    } else {\n      resolve(Resource.removeRelativePath(base + path + \"/\" + url));\n    }\n    return true;\n  }\n  reject();\n};\n\n/**\n * Resolve URLs which are self-describing.\n * @method nullResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.nullResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"manifest\"];\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(url);\n    return true;\n  } else if (url.indexOf('data:') === 0) {\n    resolve(url);\n    return true;\n  }\n  reject();\n};\n\n/**\n * Retrieve manifest content from a self-descriptive manifest url.\n * These urls are used to reference a manifest without requiring subsequent,\n * potentially non-CORS requests.\n * @method manifestRetriever\n * @private\n * @param {String} manifest The Manifest URL\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.manifestRetriever = function (manifest, resolve, reject) {\n  var data;\n  try {\n    data = manifest.substr(11);\n    JSON.parse(data);\n    resolve(data);\n  } catch (e) {\n    this.debug.warn(\"Invalid manifest URL referenced:\" + manifest);\n    reject();\n  }\n};\n\n/**\n * Retrieve resource contents using an XHR request.\n * @method xhrRetriever\n * @private\n * @param {String} url The resource to fetch.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.xhrRetriever = function (url, resolve, reject) {\n  var ref = new XMLHttpRequest();\n  ref.addEventListener(\"readystatechange\", function (resolve, reject) {\n    if (ref.readyState === 4 && ref.responseText) {\n      resolve(ref.responseText);\n    } else if (ref.readyState === 4) {\n      this.debug.warn(\"Failed to load file \" + url + \": \" + ref.status);\n      reject(ref.status);\n    }\n  }.bind(this, resolve, reject), false);\n  ref.overrideMimeType(\"application/json\");\n  ref.open(\"GET\", url, true);\n  ref.send();\n};\n\nmodule.exports = Resource;\n","/*globals crypto, WebKitBlobBuilder, Blob, URL */\n/*globals webkitURL, Uint8Array, Uint16Array, ArrayBuffer */\n/*jslint indent:2,white:true,browser:true,node:true,sloppy:true */\n\n/**\n * Utility method used within the freedom Library.\n * @class util\n * @static\n */\nvar util = {};\n\n\n/**\n * Helper function for iterating over an array backwards. If the func\n * returns a true value, it will break out of the loop.\n * @method eachReverse\n * @static\n */\nutil.eachReverse = function(ary, func) {\n  if (ary) {\n    var i;\n    for (i = ary.length - 1; i > -1; i -= 1) {\n      if (ary[i] && func(ary[i], i, ary)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * @method hasProp\n * @static\n */\nutil.hasProp = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n/**\n * Cycles over properties in an object and calls a function for each\n * property value. If the function returns a truthy value, then the\n * iteration is stopped.\n * @method eachProp\n * @static\n */\nutil.eachProp = function(obj, func) {\n  var prop;\n  for (prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      if (func(obj[prop], prop)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Simple function to mix in properties from source into target,\n * but only if target does not already have a property of the same name.\n * This is not robust in IE for transferring methods that match\n * Object.prototype names, but the uses of mixin here seem unlikely to\n * trigger a problem related to that.\n * @method mixin\n * @static\n */\nutil.mixin = function(target, source, force) {\n  if (source) {\n    util.eachProp(source, function (value, prop) {\n      if (force || !util.hasProp(target, prop)) {\n        target[prop] = value;\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Get a unique ID.\n * @method getId\n * @static\n */\nutil.getId = function() {\n  var guid = 'guid',\n      domain = 12,\n      buffer;\n  // Chrome / Firefox.\n  if (typeof crypto === 'object' && crypto.getRandomValues) {\n    buffer = new Uint8Array(domain);\n    crypto.getRandomValues(buffer);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  // Node\n  } else if (typeof crypto === 'object' && crypto.randomBytes) {\n    buffer = crypto.randomBytes(domain);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  } else {\n    while (domain > 0) {\n      guid += '-' + Math.ceil(255 * Math.random());\n      domain -= 1;\n    }\n  }\n\n  return guid;\n};\n\n/**\n * Encode a string into a binary array buffer, by treating each character as a\n * utf16 encoded character - the native javascript encoding.\n * @method str2ab\n * @static\n * @param {String} str The string to encode.\n * @returns {ArrayBuffer} The encoded string.\n */\nutil.str2ab = function(str) {\n  var length = str.length,\n      buffer = new ArrayBuffer(length * 2), // 2 bytes for each char\n      bufferView = new Uint16Array(buffer),\n      i;\n  for (i = 0; i < length; i += 1) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n};\n\n/**\n * Convert an array buffer containing an encoded string back into a string.\n * @method ab2str\n * @static\n * @param {ArrayBuffer} buffer The buffer to unwrap.\n * @returns {String} The decoded buffer.\n */\nutil.ab2str = function(buffer) {\n  return String.fromCharCode.apply(null, new Uint16Array(buffer));\n};\n\n/**\n * Add 'on' and 'emit' methods to an object, which act as a light weight\n * event handling structure.\n * @class handleEvents\n * @static\n */\nutil.handleEvents = function(obj) {\n  var eventState = {\n    DEBUG_BACKREF: obj,\n    multiple: {},\n    maybemultiple: [],\n    single: {},\n    maybesingle: []\n  }, filter, push;\n\n  /**\n   * Filter a list based on a predicate. The list is filtered in place, with\n   * selected items removed and returned by the function.\n   * @method\n   * @param {Array} list The list to filter\n   * @param {Function} predicate The method to run on each item.\n   * @returns {Array} Selected items\n   */\n  filter = function(list, predicate) {\n    var ret = [], i;\n\n    if (!list || !list.length) {\n      return [];\n    }\n\n    for (i = list.length - 1; i >= 0; i -= 1) {\n      if (predicate(list[i])) {\n        ret.push(list.splice(i, 1));\n      }\n    }\n    return ret;\n  };\n\n  /**\n   * Enqueue a handler for a specific type.\n   * @method\n   * @param {String} to The queue ('single' or 'multiple') to queue on.\n   * @param {String} type The type of event to wait for.\n   * @param {Function} handler The handler to enqueue.\n   */\n  push = function(to, type, handler) {\n    if (typeof type === 'function') {\n      this['maybe' + to].push([type, handler]);\n    } else if (this[to][type]) {\n      this[to][type].push(handler);\n    } else {\n      this[to][type] = [handler];\n    }\n  };\n\n  /**\n   * Register a method to be executed when an event of a specific type occurs.\n   * @method on\n   * @param {String|Function} type The type of event to register against.\n   * @param {Function} handler The handler to run when the event occurs.\n   */\n  obj.on = push.bind(eventState, 'multiple');\n\n  /**\n   * Register a method to be execute the next time an event occurs.\n   * @method once\n   * @param {String|Function} type The type of event to wait for.\n   * @param {Function} handler The handler to run the next time a matching event\n   *     is raised.\n   */\n  obj.once = push.bind(eventState, 'single');\n\n  /**\n   * Emit an event on this object.\n   * @method emit\n   * @param {String} type The type of event to raise.\n   * @param {Object} data The payload of the event.\n   */\n  obj.emit = function(type, data) {\n    var i, queue;\n    // Note that registered handlers may stop events on the object, by calling\n    // this.off(). As such, the presence of these keys must be checked on each\n    // iteration of the relevant loops.\n    for (i = 0; this.multiple[type] &&\n         i < this.multiple[type].length; i += 1) {\n      if (this.multiple[type][i](data) === false) {\n        return;\n      }\n    }\n    if (this.single[type]) {\n      queue = this.single[type];\n      this.single[type] = [];\n      for (i = 0; i < queue.length; i += 1) {\n        queue[i](data);\n      }\n    }\n    for (i = 0; i < this.maybemultiple.length; i += 1) {\n      if (this.maybemultiple[i][0](type, data)) {\n        this.maybemultiple[i][1](data);\n      }\n    }\n    for (i = this.maybesingle.length - 1; i >= 0; i -= 1) {\n      if (this.maybesingle[i][0](type, data)) {\n        queue = this.maybesingle.splice(i, 1);\n        queue[0][1](data);\n      }\n    }\n  }.bind(eventState);\n\n  /**\n   * Remove an event handler\n   * @method off\n   * @param {String} type The type of event to remove.\n   * @param {Function?} handler The handler to remove.\n   */\n  obj.off = function(type, handler) {\n    if (!type) {\n      delete this.DEBUG_BACKREF;\n      this.multiple = {};\n      this.maybemultiple = [];\n      this.single = {};\n      this.maybesingle = [];\n      return;\n    }\n\n    if (typeof type === 'function') {\n      filter(this.maybesingle, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n      filter(this.maybemultiple, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n    }\n\n    if (!handler) {\n      delete this.multiple[type];\n      delete this.single[type];\n    } else {\n      filter(this.multiple[type], function(item) {\n        return item === handler;\n      });\n      filter(this.single[type], function(item) {\n        return item === handler;\n      });\n    }\n  }.bind(eventState);\n};\n\n/**\n * When run without a window, or specifically requested.\n * Note: Declaration can be redefined in forceModuleContext below.\n * @method isModuleContext\n * @for util\n * @static\n */\n/*!@preserve StartModuleContextDeclaration*/\nutil.isModuleContext = function() {\n  return (typeof document === 'undefined');\n};\n\n/**\n * Get a Blob object of a string.\n * Polyfills implementations which don't have a current Blob constructor, like\n * phantomjs.\n * @method getBlob\n * @static\n */\nutil.getBlob = function(data, type) {\n  if (typeof Blob !== 'function' && typeof WebKitBlobBuilder !== 'undefined') {\n    var builder = new WebKitBlobBuilder();\n    builder.append(data);\n    return builder.getBlob(type);\n  } else {\n    return new Blob([data], {type: type});\n  }\n};\n\n/**\n * Find all scripts on the given page.\n * @method scripts\n * @static\n */\nutil.scripts = function(global) {\n  return global.document.getElementsByTagName('script');\n};\n\nmodule.exports = util;\n","/*jslint node:true*/\n\nvar providers = [\n  require('../../providers/core/core.unprivileged'),\n  require('../../providers/core/core.echo'),\n  require('../../providers/core/core.console'),\n  require('../../providers/core/core.crypto'),\n  require('../../providers/core/core.peerconnection'),\n  require('../../providers/core/core.rtcpeerconnection'),\n  require('../../providers/core/core.rtcdatachannel'),\n  require('../../providers/core/core.storage'),\n  require('../../providers/core/core.view'),\n  require('../../providers/core/core.oauth'),\n  require('../../providers/core/core.websocket'),\n  require('../../providers/core/core.xhr')\n];\n\nfunction getFreedomScript() {\n  'use strict';\n  var script;\n  if (window.document.currentScript) {\n    // New browser API\n    script = window.document.currentScript.src;\n  } else if (document.readyState !== \"complete\" &&\n             document.readyState !== \"loaded\") {\n    // Included in HTML or through document.write\n    script = window.document.getElementsByTagName('script');\n    script = script[script.length - 1].src;\n  } else {\n    // Loaded through dom manipulation or async.\n    script = document.querySelector(\n      \"script[src*='freedom.js'],script[src*='freedom-']\"\n    );\n    if (script.length !== 1) {\n      console.error(\"Could not determine freedom.js script tag.\");\n    }\n    script = script[0].src;\n  }\n  return script;\n}\n\nif (typeof window !== 'undefined') {\n  window.freedom = require('../entry').bind({}, {\n    location: window.location.href,\n    portType: require('../link/worker'),\n    source: getFreedomScript(),\n    providers: providers,\n    oauth: [\n      require('../../providers/oauth/oauth.localpageauth'),\n      require('../../providers/oauth/oauth.remotepageauth')\n    ]\n  });\n} else {\n  require('../entry')({\n    isModule: true,\n    portType: require('../link/worker'),\n    providers: providers,\n    global: global\n  });\n}\n"]}