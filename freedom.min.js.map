{"version":3,"sources":["../build/node_modules/browser-pack/_prelude.js","../build/dist/bundle.compiled.js","../build/node_modules/es6-promise/dist/es6-promise.js","../build/node_modules/process/browser.js","../build/node_modules/webrtc-adapter/adapter.js","../build/providers/core/core.console.js","../build/providers/core/core.crypto.js","../build/providers/core/core.echo.js","../build/providers/core/core.oauth.js","../build/providers/core/core.peerconnection.js","../build/providers/core/core.rtcdatachannel.js","../build/providers/core/core.rtcpeerconnection.js","../build/providers/core/core.storage.js","../build/providers/core/core.unprivileged.js","../build/providers/core/core.view.js","../build/providers/core/core.websocket.js","../build/providers/core/core.xhr.js","../build/providers/oauth/oauth.localpageauth.js","../build/providers/oauth/oauth.remotepageauth.js","../build/src/api.js","../build/src/bundle.js","../build/src/consumer.js","../build/src/debug.js","../build/src/entry.js","../build/src/hub.js","../build/src/link.js","../build/src/link/worker.js","../build/src/manager.js","../build/src/module.js","../build/src/moduleinternal.js","../build/src/policy.js","../build/src/provider.js","../build/src/proxy/apiInterface.js","../build/src/proxy/eventInterface.js","../build/src/proxybinder.js","../build/src/resource.js","../build/src/util.js","../build/src/util/workerEntry.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","name","api","log","type","value","debug","info","warn","error","getRandomBytes","ret","setup","send","message","createChannel","channel","identifier","bindChannel","getId","getLogger","initiateOAuth","redirect","state","err","errcode","launchAuthFlow","channelLabel","text","binary","buffer","onReceived","openDataChannel","closeDataChannel","onOpenDataChannel","channelId","onCloseDataChannel","getBufferedAmount","getInfo","createOffer","offerToReceiveVideo","offerToReceiveAudio","voiceActivityDetection","iceRestart","sdp","close","onClose","constructor","getLabel","getOrdered","getMaxPacketLifeTime","getMaxRetransmits","getProtocol","getNegotiated","getReadyState","onopen","onerror","onclose","onmessage","getBinaryType","setBinaryType","sendBuffer","iceServers","urls","username","credential","iceTransports","peerIdentity","createAnswer","setLocalDescription","getLocalDescription","setRemoteDescription","getRemoteDescription","getSignalingState","updateIce","addIceCandidate","candidate","sdpMid","sdpMLineIndex","getIceGatheringState","getIceConnectionState","getConfiguration","getLocalStreams","getRemoteStreams","getStreamById","addStream","removeStream","createDataChannel","ordered","maxPacketLifeTime","maxRetransmits","protocol","negotiated","id","ondatachannel","getStats","onnegotiationneeded","onicecandidate","onsignalingstatechange","onaddstream","stream","onremovestream","oniceconnectionstatechange","keys","get","set","remove","clear","connected","localAddress","localPort","peerAddress","peerPort","ERRCODE","SUCCESS","UNKNOWN","ALREADY_CONNECTED","INVALID_ARGUMENT","TIMED_OUT","NOT_CONNECTED","NETWORK_CHANGED","CONNECTION_CLOSED","CONNECTION_RESET","CONNECTION_REFUSED","CONNECTION_FAILED","NAME_NOT_RESOLVED","INTERNET_DISCONNECTED","ADDRESS_INVALID","ADDRESS_UNREACHABLE","HOST_UNREACHABLE","onDisconnect","connect","secure","pause","resume","prepareSecure","write","onData","data","listen","onConnection","socket","host","port","ALREADY_BOUND","ALREADY_CLOSED","SEND_FAILED","bind","sendTo","destroy","resultCode","address","show","isSecure","postMessage","onMessage","onOpen","onError","reason","wasClean","open","string","blob","abort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","getResponse","object","getResponseText","getResponseURL","getResponseType","setResponseType","getStatus","getStatusText","getTimeout","setTimeout","getWithCredentials","setWithCredentials","onloadstart","lengthComputable","loaded","total","onprogress","onabort","onload","ontimeout","onloadend","onreadystatechange","onuploadloadstart","onuploadprogress","onuploadabort","onuploaderror","onuploadload","onuploadtimeout","onuploadloadend","onuploadreadystatechange","OFFLINE","MALFORMEDPARAMETERS","LOGIN_BADCREDENTIALS","LOGIN_FAILEDCONNECTION","LOGIN_ALREADYONLINE","LOGIN_OAUTHERROR","SEND_INVALIDDESTINATION","STATUS","ONLINE","ONLINE_WITH_OTHER_APP","login","agent","version","url","interactive","rememberLogin","userId","clientId","status","lastUpdated","lastSeen","clearCachedCredentials","getClients","getUsers","sendMessage","logout","from","onUserProfile","imageData","onClientState","scope","SESSION","DEVICE_LOCAL","USER_LOCAL","SHARED","tag","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","process","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","lib$es6$promise$asap$$useMessageChannel","MessageChannel","port1","port2","lib$es6$promise$asap$$useSetTimeout","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertx","vertx","runOnLoop","runOnContext","lib$es6$promise$then$$then","onFulfillment","onRejection","parent","this","_state","lib$es6$promise$$internal$$FULFILLED","lib$es6$promise$$internal$$REJECTED","child","lib$es6$promise$$internal$$noop","result","_result","arguments","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$subscribe","lib$es6$promise$promise$resolve$$resolve","Constructor","promise","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","then","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$fulfill","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$then$$default","resolve","lib$es6$promise$promise$resolve$$default","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","subscribers","settled","detail","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$enumerator$$Enumerator","input","_instanceConstructor","Array","isArray","_input","_remaining","_enumerate","_validationError","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$reject$$default","all","race","reject","_setScheduler","_setAsap","_asap","catch","_eachEntry","entry","c","_settledAt","_willSettleAt","enumerator","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","clearTimeout","Item","fun","array","noop","args","push","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","myRTCPeerConnection","myRTCSessionDescription","myRTCIceCandidate","renameIceURLs","config","forEach","server","fixChromeStatsResponse","response","standardReport","reports","report","standardStats","timestamp","names","stat","fixFirefoxStatsResponse","sessionHasData","desc","hasData","prefix","split","line","slice","RTCPeerConnection","mozRTCPeerConnection","configuration","constraints","pc","boundGetStats","selector","successCallback","failureCallback","successCallbackWrapper","firefoxStatsResponse","dataEnabled","boundCreateDataChannel","label","dataChannelDict","dc","localDescription","remoteDescription","event","Event","webkitRTCPeerConnection","chromeStatsResponse","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","util","Logger_console","cap","level","console","handleEvents","print","severity","source","msg","arr","freedom","unshift","maxLogLevel","freedomDump","dump","toUpperCase","join","continuation","provider","flags","Core_crypto","dispatchEvent","number","Uint8Array","crypto","getRandomValues","Echo_unprivileged","mod","Core","core","controlChannel","request","proxy","chan","m","str","OAuth","handlers","ongoing","register","boundHandlers","reset","redirectURIs","authUrl","stateObj","hasOwnProperty","SimpleDataPeer","peerName","stunServers","dataChannelCallbacks","mocks","channels","onConnectedQueue","optional","DtlsSrtpKeyAgreement","sendSignalMessage","addEventListener","onIceCallback","onNegotiationNeeded","onDataChannel","signalingState","pcState","SimpleDataPeerState","CONNECTED","map","DISCONNECTED","PeerConnection","portModule","Math","random","freedomModule","signallingChannel","peer","CONNECTING","constaints","runWhenConnected","func","dataChannel","addDataChannel","negotiateConnection","closeChannel","bufferedAmount","setSendSignalMessage","sendSignalMessageFn","handleSignalMessage","messageText","ice_candidate","json","JSON","parse","onDescription","isClosed","callbacks","readyState","onOpenFn","onCloseFn","onMessageFn","onErrorFn","description","stringify","logSuccess","op","logFail","onSignalingStateChange","signallingChannelId","initiateConnection","openDataChannelContinuation","ArrayBuffer","Blob","success","sendInfo","objToSend","eventNames","unAttachedChannels","pendingEvents","allocateChannel","eventName","handler","currentHandler","RTCDataChannelAdapter","dispatchEvents","Connection","drainPendingEvents","manageEvents","attach","binaryType","Components","myData","utils","cloneInto","allocate","adapter","PromiseCompat","DataChannel","RTCPeerConnectionAdapter","connection","events","iceGatheringState","iceConnectionState","style","Storage_unprivileged","localStorage","key","val","getItem","setItem","removeItem","EventInterface","Consumer","Core_unprivileged","manager","unboundChannels","contextId","moduleInternal","getChannel","isInModule","delegate","flow","iface","getProxyInterface","doClose","remote","reply","manifest","toBind","newSource","createLink","toDelegate","p","cb","hub","getDestination","getInterface","dependencyName","registerId","setId","Core_View","listener","active","page","resources","root","frame","container","body","getElementById","createElement","width","height","display","appendChild","setAttribute","border","background","src","contentWindow","removeChild","removeEventListener","views","toResolve","main","files","fname","resource","manifestId","PageProvider","WSHandle","nodeStyle","WS","protocols","WSImplementation","isNode","WebSocket","websocket","SyntaxError","toSend","errorCode","setSocket","impl","XhrClass","XhrProvider","XMLHttpRequest","_dispatchEvent","_xhr","_events","_setupListeners","method","async","user","password","header","mime","responseType","responseText","responseURL","statusText","withCredentials","wc","upload","setImpl","oAuthRedirectId","loadedOnStartup","TIMEOUT","location","href","indexOf","Date","LocalPageAuth","listeners","here","pathname","storageListener","RemotePageAuth","hasCredentials","Api","apis","providers","waiters","definition","inst","getCore","provideCore","cleanup","prop","doReject","waiter","Bundle","interfaces","registry","bundle","interfaceCls","nextId","ifaces","closeHandlers","errorHandlers","emits","reverse","emitChannel","to","teardown","eachProp","Iface","getInterfaceConstructor","getListener","instance","obj","binder","doEmit","messageToPortable","template","externals","conform","portableToMessage","streams","separate","String","Number","Boolean","makeArrayBuffer","thing","DataView","recursiveFreezeObject","k","defineProperty","writable","enumerable","Debug","logger","LEVELS","setLogger","format","argarr","alist","quiet","splice","getLoggingShim","asyncMethod","methods","backing","item","mthd","freedomGlobal","Hub","Manager","Policy","ProxyBinder","Resource","getGlobal","context","policy","link","Port","site_cfg","moduleContext","isModule","isModuleContext","mixin","substr","resolvers","portType","fallbackLogger","getIface","canonical_manifest","bindDefault","external","apps","routes","destination","app","trace","action","getSource","force","deregister","install","route","generateRoute","uninstall","Link","deliverMessage","start","addErrorHandler","emitMessage","WorkerLink","setupListener","setupWorker","stop","onMsg","worker","Worker","terminate","ModuleInternal","controlFlows","dataFlows","reverseFlowMap","origin","reverseFlow","overrideDest","addResolver","addRetriever","service","removeLink","getPort","portId","lineage","destName","toDest","outgoingName","outgoing","rflow","forgetFlow","Provider","Module","manifestURL","creator","externalPortMap","internalPortMap","dependantChannels","started","dependencies","deregisterFlow","provides","modInternal","internal","loadLinks","appId","addDependency","dep","updateEnv","permissions","metadata","icon","manifests","pendingPorts","requests","unboundPorts","updateManifest","defaultPort","externalChannel","objects","mapProxies","generateEnv","loadScripts","script","items","def","exp","manifestPredicate","onManifest","getExternal","CoreProv","provideAsynchronous","getLoggerSync","getAPI","proxies","seen","scripts","scripts_count","load","importer","next","tryLoad","stack","runtimes","policies","pending","add","defaultPolicy","defaultConstraints","isolation","placement","loadManifest","overlay","runtime","findDestination","isRunning","fullMatch","okay","j","modules","getContents","modFingerprint","base","mode","synchronous","providerCls","asynchronous","promises","getProvider","onmsg","sanityCheck","provideSynchronous","prov","providePromises","ids","BoundClass","ev","returnPromise","reqId","e1","e2","e3","ApiInterface","inflight","emitter","thisReq","reckless","apiProvider","httpResolver","nullResolver","contentRetrievers","http","xhrRetriever","https","chrome-extension","chrome","gopher","manifestRetriever","firstPromise","errors","eachReverse","proto","retriever","hasScheme","removeRelativePath","toRemove","idx","replace","charAt","shift","dirname","protocolIdx","pathIdx","path","lastIndexOf","ref","ary","hasProp","target","guid","domain","randomBytes","ceil","str2ab","bufferView","Uint16Array","charCodeAt","ab2str","fromCharCode","filter","eventState","DEBUG_BACKREF","multiple","maybemultiple","single","maybesingle","list","predicate","getBlob","WebKitBlobBuilder","builder","append","getElementsByTagName","getFreedomScript","currentScript","querySelector","oauth"],"mappings":"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","file":"freedom.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = [{\"name\":\"console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.console\",\"api\":{\"log\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"debug\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"info\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"warn\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"error\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]}}},{\"name\":\"core.crypto\",\"api\":{\"getRandomBytes\":{\"type\":\"method\",\"value\":[\"number\"],\"ret\":\"buffer\"}}},{\"name\":\"core.echo\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"message\":{\"type\":\"event\",\"value\":\"string\"}}},{\"name\":\"core\",\"api\":{\"createChannel\":{\"type\":\"method\",\"value\":[],\"ret\":{\"channel\":\"proxy\",\"identifier\":\"string\"}},\"bindChannel\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getLogger\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"proxy\"},\"require\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"proxy\"}}},{\"name\":\"core.oauth\",\"api\":{\"initiateOAuth\":{\"type\":\"method\",\"value\":[[\"array\",\"string\"]],\"ret\":{\"redirect\":\"string\",\"state\":\"string\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"launchAuthFlow\":{\"type\":\"method\",\"value\":[\"string\",{\"redirect\":\"string\",\"state\":\"string\"},\"boolean\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"core.peerconnection\",\"api\":{\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"string\",[\"array\",\"string\"],\"boolean\"]},\"send\":{\"type\":\"method\",\"value\":[{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}]},\"onReceived\":{\"type\":\"event\",\"value\":{\"channelLabel\":\"string\",\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"openDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"closeDataChannel\":{\"type\":\"method\",\"value\":[\"string\"]},\"onOpenDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"onCloseDataChannel\":{\"type\":\"event\",\"value\":{\"channelId\":\"string\"}},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveVideo\":\"number\",\"offerToReceiveAudio\":\"number\",\"voiceActivityDetection\":\"boolean\",\"iceRestart\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[]},\"onClose\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"core.rtcdatachannel\",\"api\":{\"constructor\":{\"value\":[\"string\"]},\"getLabel\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getOrdered\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getMaxPacketLifeTime\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getMaxRetransmits\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getProtocol\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getNegotiated\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"getId\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"onopen\":{\"type\":\"event\",\"value\":[]},\"onerror\":{\"type\":\"event\",\"value\":[]},\"onclose\":{\"type\":\"event\",\"value\":[]},\"close\":{\"type\":\"method\",\"value\":[]},\"onmessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"buffer\":\"buffer\"}},\"getBinaryType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setBinaryType\":{\"type\":\"method\",\"value\":[\"string\"]},\"send\":{\"type\":\"method\",\"value\":[\"string\"]},\"sendBuffer\":{\"type\":\"method\",\"value\":[\"buffer\"]}}},{\"name\":\"core.rtcpeerconnection\",\"api\":{\"constructor\":{\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}]},\"createOffer\":{\"type\":\"method\",\"value\":[{\"offerToReceiveAudio\":\"number\",\"offerToReceiveVideo\":\"number\",\"iceRestart\":\"boolean\",\"voiceActivityDetection\":\"boolean\"}],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"createAnswer\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setLocalDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}]},\"getLocalDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"setRemoteDescription\":{\"type\":\"method\",\"value\":[{\"type\":\"string\",\"sdp\":\"string\"}],\"ret\":{}},\"getRemoteDescription\":{\"type\":\"method\",\"value\":[],\"ret\":{\"type\":\"string\",\"sdp\":\"string\"}},\"getSignalingState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"updateIce\":{\"type\":\"method\",\"value\":[{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}],\"ret\":{}},\"addIceCandidate\":{\"type\":\"method\",\"value\":[{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}],\"ret\":{}},\"getIceGatheringState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getIceConnectionState\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getConfiguration\":{\"type\":\"method\",\"value\":[],\"ret\":{\"iceServers\":[\"array\",{\"urls\":[\"array\",\"string\"],\"username\":\"string\",\"credential\":\"string\"}],\"iceTransports\":\"string\",\"peerIdentity\":\"string\"}},\"getLocalStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getRemoteStreams\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"getStreamById\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"addStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"removeStream\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":{}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":{}},\"createDataChannel\":{\"type\":\"method\",\"value\":[\"string\",{\"ordered\":\"boolean\",\"maxPacketLifeTime\":\"number\",\"maxRetransmits\":\"number\",\"protocol\":\"string\",\"negotiated\":\"boolean\",\"id\":\"number\"}],\"ret\":\"string\"},\"ondatachannel\":{\"type\":\"event\",\"value\":{\"channel\":\"string\"}},\"getStats\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"object\"},\"onnegotiationneeded\":{\"type\":\"event\",\"value\":[]},\"onicecandidate\":{\"type\":\"event\",\"value\":{\"candidate\":{\"candidate\":\"string\",\"sdpMid\":\"string\",\"sdpMLineIndex\":\"number\"}}},\"onsignalingstatechange\":{\"type\":\"event\",\"value\":[]},\"onaddstream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"onremovestream\":{\"type\":\"event\",\"value\":{\"stream\":\"number\"}},\"oniceconnectionstatechange\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.storage\",\"api\":{\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"]},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\"},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"clear\":{\"type\":\"method\",\"value\":[]}}},{\"name\":\"core.tcpsocket\",\"api\":{\"constructor\":{\"value\":[\"number\"]},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"connected\":\"boolean\",\"localAddress\":\"string\",\"localPort\":\"number\",\"peerAddress\":\"string\",\"peerPort\":\"number\"}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_CONNECTED\":\"Socket already connected\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"TIMED_OUT\":\"Timed out\",\"NOT_CONNECTED\":\"Socket not connected\",\"NETWORK_CHANGED\":\"Network changed\",\"CONNECTION_CLOSED\":\"Connection closed gracefully\",\"CONNECTION_RESET\":\"Connection reset\",\"CONNECTION_REFUSED\":\"Connection refused\",\"CONNECTION_FAILED\":\"Connection failed\",\"NAME_NOT_RESOLVED\":\"DNS lookup failed\",\"INTERNET_DISCONNECTED\":\"Cannot reach any network\",\"ADDRESS_INVALID\":\"Invalid address\",\"ADDRESS_UNREACHABLE\":\"No route to host\",\"HOST_UNREACHABLE\":\"SOCKS proxy server could not reach host\"}},\"close\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onDisconnect\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"connect\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"secure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"pause\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"resume\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"prepareSecure\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"write\":{\"type\":\"method\",\"value\":[\"buffer\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"data\":\"buffer\"}},\"listen\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onConnection\":{\"type\":\"event\",\"value\":{\"socket\":\"number\",\"host\":\"string\",\"port\":\"number\"}}}},{\"name\":\"core.udpsocket\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"ALREADY_BOUND\":\"Socket already bound\",\"ALREADY_CLOSED\":\"Socket already closed\",\"INVALID_ARGUMENT\":\"Invalid argument\",\"NETWORK_CHANGED\":\"Network changed\",\"SEND_FAILED\":\"Send failed\"}},\"bind\":{\"type\":\"method\",\"value\":[\"string\",\"number\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getInfo\":{\"type\":\"method\",\"value\":[],\"ret\":{\"localAddress\":\"string\",\"localPort\":\"number\"}},\"sendTo\":{\"type\":\"method\",\"value\":[\"buffer\",\"string\",\"number\"],\"ret\":\"number\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"destroy\":{\"type\":\"method\",\"value\":[]},\"onData\":{\"type\":\"event\",\"value\":{\"resultCode\":\"number\",\"address\":\"string\",\"port\":\"number\",\"data\":\"buffer\"}}}},{\"name\":\"core.view\",\"api\":{\"show\":{\"type\":\"method\",\"value\":[\"string\"]},\"isSecure\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"close\":{\"type\":\"method\",\"value\":[]},\"postMessage\":{\"type\":\"method\",\"value\":[\"object\"]},\"message\":{\"type\":\"event\",\"value\":\"object\"},\"onClose\":{\"type\":\"event\",\"value\":[]}}},{\"name\":\"core.websocket\",\"api\":{\"constructor\":{\"value\":[\"string\",[\"array\",\"string\"]]},\"send\":{\"type\":\"method\",\"value\":[{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getBufferedAmount\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"number\"},\"close\":{\"type\":\"method\",\"value\":[\"number\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"text\":\"string\",\"binary\":\"blob\",\"buffer\":\"buffer\"}},\"onOpen\":{\"type\":\"event\",\"value\":[]},\"onError\":{\"type\":\"event\",\"value\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onClose\":{\"type\":\"event\",\"value\":{\"code\":\"number\",\"reason\":\"string\",\"wasClean\":\"boolean\"}}}},{\"name\":\"core.xhr\",\"api\":{\"open\":{\"type\":\"method\",\"value\":[\"string\",\"string\",\"boolean\",\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[{\"string\":\"string\",\"buffer\":\"buffer\",\"blob\":\"blob\"}]},\"abort\":{\"type\":\"method\",\"value\":[]},\"getResponseHeader\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\"},\"getAllResponseHeaders\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setRequestHeader\":{\"type\":\"method\",\"value\":[\"string\",\"string\"]},\"overrideMimeType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getReadyState\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getResponse\":{\"type\":\"method\",\"value\":[],\"ret\":{\"string\":\"string\",\"buffer\":\"buffer\",\"object\":\"object\"}},\"getResponseText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseURL\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getResponseType\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"setResponseType\":{\"type\":\"method\",\"value\":[\"string\"]},\"getStatus\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"getStatusText\":{\"type\":\"method\",\"value\":[],\"ret\":\"string\"},\"getTimeout\":{\"type\":\"method\",\"value\":[],\"ret\":\"number\"},\"setTimeout\":{\"type\":\"method\",\"value\":[\"number\"]},\"getWithCredentials\":{\"type\":\"method\",\"value\":[],\"ret\":\"boolean\"},\"setWithCredentials\":{\"type\":\"method\",\"value\":[\"boolean\"]},\"onloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onerror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"ontimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onreadystatechange\":{\"type\":\"event\",\"value\":{}},\"onuploadloadstart\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadprogress\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadabort\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploaderror\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadload\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadtimeout\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadloadend\":{\"type\":\"event\",\"value\":{\"lengthComputable\":\"boolean\",\"loaded\":\"number\",\"total\":\"number\"}},\"onuploadreadystatechange\":{\"type\":\"event\",\"value\":{}}}},{\"name\":\"social\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"User is currently offline\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\",\"LOGIN_BADCREDENTIALS\":\"Error authenticating with server\",\"LOGIN_FAILEDCONNECTION\":\"Error connecting to server\",\"LOGIN_ALREADYONLINE\":\"User is already logged in\",\"LOGIN_OAUTHERROR\":\"OAuth Error\",\"SEND_INVALIDDESTINATION\":\"Message sent to an invalid destination\"}},\"STATUS\":{\"type\":\"constant\",\"value\":{\"OFFLINE\":\"OFFLINE\",\"ONLINE\":\"ONLINE\",\"ONLINE_WITH_OTHER_APP\":\"ONLINE_WITH_OTHER_APP\"}},\"login\":{\"type\":\"method\",\"value\":[{\"agent\":\"string\",\"version\":\"string\",\"url\":\"string\",\"interactive\":\"boolean\",\"rememberLogin\":\"boolean\"}],\"ret\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clearCachedCredentials\":{\"type\":\"method\",\"value\":[]},\"getClients\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"getUsers\":{\"type\":\"method\",\"value\":[],\"ret\":\"object\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"sendMessage\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"logout\":{\"type\":\"method\",\"value\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onMessage\":{\"type\":\"event\",\"value\":{\"from\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"},\"message\":\"string\"}},\"onUserProfile\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"lastUpdated\":\"number\",\"name\":\"string\",\"url\":\"string\",\"imageData\":\"string\"}},\"onClientState\":{\"type\":\"event\",\"value\":{\"userId\":\"string\",\"clientId\":\"string\",\"status\":\"string\",\"lastUpdated\":\"number\",\"lastSeen\":\"number\"}}}},{\"name\":\"storage\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"string\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"storebuffer\",\"api\":{\"scope\":{\"type\":\"constant\",\"value\":{\"SESSION\":0,\"DEVICE_LOCAL\":1,\"USER_LOCAL\":2,\"SHARED\":3}},\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Database not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"constructor\":{\"value\":[{\"scope\":\"number\"}]},\"keys\":{\"type\":\"method\",\"value\":[],\"ret\":[\"array\",\"string\"],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"get\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"set\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"remove\":{\"type\":\"method\",\"value\":[\"string\"],\"ret\":\"buffer\",\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"clear\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}}}},{\"name\":\"transport\",\"api\":{\"ERRCODE\":{\"type\":\"constant\",\"value\":{\"SUCCESS\":\"Success!\",\"UNKNOWN\":\"Unknown error\",\"OFFLINE\":\"Not reachable\",\"MALFORMEDPARAMETERS\":\"Parameters are malformed\"}},\"setup\":{\"type\":\"method\",\"value\":[\"string\",\"proxy\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"send\":{\"type\":\"method\",\"value\":[\"string\",\"buffer\"],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"close\":{\"type\":\"method\",\"value\":[],\"ret\":[],\"err\":{\"errcode\":\"string\",\"message\":\"string\"}},\"onData\":{\"type\":\"event\",\"value\":{\"tag\":\"string\",\"data\":\"buffer\"}},\"onClose\":{\"type\":\"event\",\"value\":[]}}}];\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.1.2\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n    function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n      var parent = this;\n      var state = parent._state;\n\n      if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n        return this;\n      }\n\n      var child = new this.constructor(lib$es6$promise$$internal$$noop);\n      var result = parent._result;\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$es6$promise$asap$$asap(function(){\n          lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n        });\n      } else {\n        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$es6$promise$then$$default &&\n          constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$es6$promise$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (Array.isArray(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._result = new Array(this.length);\n\n        if (this.length === 0) {\n          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var input   = this._input;\n\n      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$es6$promise$promise$resolve$$default) {\n        var then = lib$es6$promise$$internal$$getThen(entry);\n\n        if (then === lib$es6$promise$then$$default &&\n            entry._state !== lib$es6$promise$$internal$$PENDING) {\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = entry;\n        } else if (c === lib$es6$promise$promise$$default) {\n          var promise = new c(lib$es6$promise$$internal$$noop);\n          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        this._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = value;\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*jslint node:true*/\n/*globals RTCPeerConnection, mozRTCPeerConnection, webkitRTCPeerConnection */\n/*globals RTCSessionDescription, mozRTCSessionDescription */\n/*globals RTCIceCandidate, mozRTCIceCandidate */\n'use strict';\n\nvar myRTCPeerConnection = null;\nvar myRTCSessionDescription = null;\nvar myRTCIceCandidate = null;\n\nvar renameIceURLs = function (config) {\n  if (!config) {\n    return;\n  }\n  if (!config.iceServers) {\n    return config;\n  }\n  config.iceServers.forEach(function (server) {\n    server.url = server.urls;\n    delete server.urls;\n  });\n  return config;\n};\n\nvar fixChromeStatsResponse = function(response) {\n  var standardReport = {};\n  var reports = response.result();\n  reports.forEach(function(report) {\n    var standardStats = {\n      id: report.id,\n      timestamp: report.timestamp,\n      type: report.type\n    };\n    report.names().forEach(function(name) {\n      standardStats[name] = report.stat(name);\n    });\n    standardReport[standardStats.id] = standardStats;\n  });\n\n  return standardReport;\n};\n\nvar fixFirefoxStatsResponse = function(response) {\n  // Giving the response directly to the callback gives an object w/o interface\n  // https://developer.mozilla.org/en-US/docs/Mozilla/WebIDL_bindings#ChromeOnly\n  var standardReport = {};\n  response.forEach(function (report) {\n    standardReport[report.id] = report;\n  });\n  return standardReport;\n};\n\nvar sessionHasData = function(desc) {\n  if (!desc) {\n    return false;\n  }\n  var hasData = false;\n  var prefix = 'm=application';\n  desc.sdp.split('\\n').forEach(function(line) {\n    if (line.slice(0, prefix.length) === prefix) {\n      hasData = true;\n    }\n  });\n  return hasData;\n};\n\n// Unify PeerConnection Object.\nif (typeof RTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = RTCPeerConnection;\n} else if (typeof mozRTCPeerConnection !== 'undefined') {\n  myRTCPeerConnection = function (configuration, constraints) {\n    // Firefox uses 'url' rather than 'urls' for RTCIceServer.urls\n    var pc = new mozRTCPeerConnection(renameIceURLs(configuration), constraints);\n\n    // Firefox stats response is only visible 'ChromeOnly' so process it here\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(firefoxStatsResponse) {\n        successCallback(fixFirefoxStatsResponse(firefoxStatsResponse));\n      };\n      boundGetStats(selector, successCallbackWrapper, failureCallback);\n    };\n\n    // Firefox doesn't fire 'onnegotiationneeded' when a data channel is created\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n    var dataEnabled = false;\n    var boundCreateDataChannel = pc.createDataChannel.bind(pc);\n    pc.createDataChannel = function(label, dataChannelDict) {\n      var dc = boundCreateDataChannel(label, dataChannelDict);\n      if (!dataEnabled) {\n        dataEnabled = true;\n        if (pc.onnegotiationneeded &&\n            !sessionHasData(pc.localDescription) &&\n            !sessionHasData(pc.remoteDescription)) {\n          var event = new Event('negotiationneeded');\n          pc.onnegotiationneeded(event);\n        }\n      }\n      return dc;\n    };\n\n    return pc;\n  };\n} else if (typeof webkitRTCPeerConnection !== 'undefined') {\n  // Chrome returns a nonstandard, non-JSON-ifiable response from getStats.\n  myRTCPeerConnection = function(configuration, constraints) {\n    var pc = new webkitRTCPeerConnection(configuration, constraints);\n    var boundGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, failureCallback) {\n      var successCallbackWrapper = function(chromeStatsResponse) {\n        successCallback(fixChromeStatsResponse(chromeStatsResponse));\n      };\n      // Chrome also takes its arguments in the wrong order.\n      boundGetStats(successCallbackWrapper, failureCallback, selector);\n    };\n    return pc;\n  };\n}\n\n// Unify SessionDescrption Object.\nif (typeof RTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = RTCSessionDescription;\n} else if (typeof mozRTCSessionDescription !== 'undefined') {\n  myRTCSessionDescription = mozRTCSessionDescription;\n}\n\n// Unify IceCandidate Object.\nif (typeof RTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = RTCIceCandidate;\n} else if (typeof mozRTCIceCandidate !== 'undefined') {\n  myRTCIceCandidate = mozRTCIceCandidate;\n}\n\nexports.RTCPeerConnection = myRTCPeerConnection;\nexports.RTCSessionDescription = myRTCSessionDescription;\nexports.RTCIceCandidate = myRTCIceCandidate;\n","/*globals process, console */\n/*jslint indent:2,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A freedom.js logging provider that logs to chrome, firefox, and node consoles.\n * @Class Logger_console\n * @constructor\n * @private\n * @param {config: Object} cap Capabilities - console requires global config.\n */\nvar Logger_console = function (cap) {\n  this.level = (cap.config && cap.config.debug) || 'log';\n  this.console = (cap.config && cap.config.global.console);\n  util.handleEvents(this);\n};\n\n\n/**\n * Logging levels, for filtering output.\n * @private\n * @static\n */\nLogger_console.level = {\n  \"debug\": 0,\n  \"info\": 1,\n  \"log\": 2,\n  \"warn\": 3,\n  \"error\": 4\n};\n\n/**\n * Print a message with appropriate formatting.\n * @method print\n */\nLogger_console.prototype.print = function (severity, source, msg) {\n  var arr = msg;\n  if (typeof this.console === 'undefined' ||\n      this.console.freedom === true) {\n    return;\n  }\n  if (typeof arr === 'string') {\n    arr = [arr];\n  }\n  \n  if (Logger_console.level[this.level] !== undefined &&\n      Logger_console.level[severity] < Logger_console.level[this.level]) {\n    return;\n  }\n  \n  if (source) {\n    if (typeof process !== 'undefined' &&\n        {}.toString.call(process) === '[object process]') {\n      // Node.\n      arr.unshift('\\x1B[39m');\n      arr.unshift('\\x1B[31m' + source);\n    } else if (this.console.maxLogLevel) {\n      // Firefox in JSM context:\n      //   http://mxr.mozilla.org/mozilla-release/source/toolkit/devtools/Console.jsm\n      if (!this.console.freedomDump) {\n        this.console.freedomDump = this.console.dump;\n        this.console.dump = function() {};\n      }\n      this.console.freedomDump(source + ' ' + severity[0].toUpperCase() + ' ' +\n          arr.join(' ') + '\\n');\n    } else {\n      arr.unshift('color: none');\n      arr.unshift('color: red');\n      arr.unshift('%c' + source + '%c');\n    }\n  }\n\n  if (!this.console[severity] && this.console.log) {\n    severity = 'log';\n  }\n  this.console[severity].apply(this.console, arr);\n};\n\n/**\n * Log a message to the console.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.log = function (source, msg, continuation) {\n  this.print('log', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with debug priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.debug = function (source, msg, continuation) {\n  this.print('debug', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with info priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.info = function (source, msg, continuation) {\n  this.print('info', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with warn priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.warn = function (source, msg, continuation) {\n  this.print('warn', source, msg);\n  continuation();\n};\n\n/**\n * Log a message to the console with error priority.\n * @param {String} source The source of the message.\n * @param {String} msg The message to log.\n * @method log\n */\nLogger_console.prototype.error = function (source, msg, continuation) {\n  this.print('error', source, msg);\n  continuation();\n};\n\n/** REGISTER PROVIDER **/\nexports.provider = Logger_console;\nexports.name = 'core.console';\nexports.flags = {config: true};\n","/*globals console, crypto */\n/*jslint indent:2, node:true */\nvar util = require('../../src/util');\n\n/**\n * A Core provider for getting cryptographically random buffers. This\n * functionality may not exist in all unpriviledged contexts - namely at this\n * point, firefox addon workers.\n * @Class Core_crypto\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Core_crypto = function(cap, dispatchEvent) {\n  'use strict';\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n};\n\n/**\n * Get a random buffer of some number of bytes.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\n Core_crypto.prototype.getRandomBytes = function(number, continuation) {\n   'use strict';\n   var buffer = new Uint8Array(number);\n   crypto.getRandomValues(buffer);\n   continuation(buffer.buffer);\n};\n\nexports.provider = Core_crypto;\nexports.name = \"core.crypto\";\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true, node:true */\nvar util = require('../../src/util');\n\n/**\n * A minimal provider implementing the core.echo interface for interaction with\n * custom channels.  Primarily used for testing the robustness of the custom\n * channel implementation.\n * @Class Echo_unprivileged\n * @constructor\n * @param {module:Module} cap The module creating this provider.\n */\nvar Echo_unprivileged = function(cap, dispatchEvent) {\n  this.mod = cap.module;\n  this.dispatchEvent = dispatchEvent;\n  util.handleEvents(this);\n\n  // The Core object for managing channels.\n  this.mod.once('core', function(Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.mod.emit(this.mod.controlChannel, {\n    type: 'core request delegated to echo',\n    request: 'core'\n  });\n};\n\n/**\n * Setup the provider to echo on a specific proxy. Subsequent messages\n * From the custom channel bound here will be re-emitted as a message\n * from the provider.  Subsequent messages to the provider will be\n * emitted on the bound channel.\n * @param {Object} proxy The identifier for the custom channel to bind.\n * @param {Function} continuation Function to call when setup is complete.\n * @method setup\n */\nEcho_unprivileged.prototype.setup = function(proxy, continuation) {\n  continuation();\n  if (!this.core) {\n    this.dispatchEvent('message', 'no core available to setup proxy with at echo');\n    return;\n  }\n\n  this.core.bindChannel(proxy, function(chan) {\n    if (this.chan) {\n      this.chan.close();\n    }\n    this.chan = chan;\n    this.chan.onClose(function() {\n      delete this.chan;\n    }.bind(this));\n    this.dispatchEvent('message', 'channel bound to echo');\n    this.chan.on('message', function(m) {\n      this.dispatchEvent('message', 'from custom channel: ' + m);\n    }.bind(this));\n  }.bind(this));\n};\n\n/**\n * Send a message to the bound custom channel.\n * @param {String} str The string to send.\n * @param {Function} continuation Function to call when sending is complete.\n * @method send\n */\nEcho_unprivileged.prototype.send = function(str, continuation) {\n  continuation();\n  if (this.chan) {\n    this.chan.emit('message', str);\n  } else {\n    this.dispatchEvent('message', 'no channel available');\n  }\n};\n\nexports.provider = Echo_unprivileged;\nexports.name = \"core.echo\";\nexports.flags = {module: true};\n","/*globals console */\n/*jslint indent:2,white:true,sloppy:true,node:true */\n\n/**\n * An oAuth meta-provider allowing multiple platform-dependant\n * oAuth implementations to serve as the redirectURL for an oAuth flow.\n * The core implementations are provided in providers/oauth, and are\n * supplemented in platform-dependent repositories.\n *\n */\nvar OAuth = function (handlers, cap, dispatchEvent) {\n  this.handlers = handlers;\n  this.dispatchEvent = dispatchEvent;\n  this.ongoing = {};\n};\n\n/**\n * Register oAuth handlers.\n * This method should be called before provider is used, and binds the current\n * oAuth provider to be associated with registered handlers. This is used so\n * that handlers which are registered by the user apply only the the freedom()\n * setup call they are associated with, while still being registered across\n * multiple instances of OAuth providers.\n *\n * @method register\n * @param {[constructor]} handlers\n * @private\n */\nOAuth.register = function (handlers) {\n  var i,\n      boundHandlers = [];\n  if (!handlers || !handlers.length) {\n    return OAuth.reset();\n  }\n\n  for (i = 0; i < handlers.length; i += 1) {\n    boundHandlers.push(new handlers[i]());\n  }\n  exports.provider = OAuth.bind(this, boundHandlers);\n};\n\n/**\n * Reset the oAuth provider registrations.\n * @method reset\n * @private\n */\nOAuth.reset = function () {\n  exports.provider = OAuth.bind(this, []);\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n */\nOAuth.prototype.initiateOAuth = function (redirectURIs, continuation) {\n  var promise, i, successCallback;\n  successCallback = function(result) {\n    this.ongoing[result.state] = this.handlers[i];\n    continuation(result);\n  }.bind(this);\n\n  for (i = 0; i < this.handlers.length; i += 1) {\n    if (this.handlers[i].initiateOAuth(redirectURIs, successCallback)) {\n      return;\n    }\n  }\n  //If here, we have no compatible providers\n  continuation(null, {\n    'errcode': 'UNKNOWN',\n    'message': 'No requested redirects can be handled.'\n  });\n  return;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive OAuth flow.\n *    Defaults to true.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nOAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive,\n                                          continuation) {\n  if (!this.ongoing.hasOwnProperty(stateObj.state)) {\n    continuation(undefined, {\n      'errcode': 'UNKNOWN',\n      'message': 'You must begin the oAuth flow with initiateOAuth first'\n    });\n    return;\n  }\n  if (interactive === undefined) {\n    interactive = true;\n  }\n  this.ongoing[stateObj.state].launchAuthFlow(\n      authUrl, stateObj, interactive, continuation);\n  delete this.ongoing[stateObj.state];\n};\n\nexports.register = OAuth.register;\nexports.reset = OAuth.reset;\nexports.provider = OAuth.bind(this, []);\nexports.name = 'core.oauth';\n","/*globals console, RTCPeerConnection, webkitRTCPeerConnection */\n/*globals mozRTCPeerConnection, RTCSessionDescription, RTCIceCandidate */\n/*globals mozRTCSessionDescription, mozRTCIceCandidate */\n/*globals ArrayBuffer, Blob */\n/*jslint indent:2,sloppy:true,node:true */\n/**\n * DataPeer - a class that wraps peer connections and data channels.\n */\n// TODO: check that Handling of pranswer is treated appropriately.\nvar SimpleDataPeerState = {\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED'\n};\n\nfunction SimpleDataPeer(peerName, stunServers, dataChannelCallbacks, mocks) {\n  var constraints,\n    config,\n    i;\n  this.peerName = peerName;\n  this.channels = {};\n  this.dataChannelCallbacks = dataChannelCallbacks;\n  this.onConnectedQueue = [];\n\n  if (typeof mocks.RTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mocks.RTCPeerConnection;\n  } else if (typeof webkitRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = webkitRTCPeerConnection;\n  } else if (typeof mozRTCPeerConnection !== \"undefined\") {\n    this.RTCPeerConnection = mozRTCPeerConnection;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCPeerConnection\");\n  }\n\n  if (typeof mocks.RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mocks.RTCSessionDescription;\n  } else if (typeof RTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = RTCSessionDescription;\n  } else if (typeof mozRTCSessionDescription !== \"undefined\") {\n    this.RTCSessionDescription = mozRTCSessionDescription;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCSessionDescription\");\n  }\n\n  if (typeof mocks.RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mocks.RTCIceCandidate;\n  } else if (typeof RTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = RTCIceCandidate;\n  } else if (typeof mozRTCIceCandidate !== \"undefined\") {\n    this.RTCIceCandidate = mozRTCIceCandidate;\n  } else {\n    throw new Error(\"This environment does not appear to support RTCIceCandidate\");\n  }\n\n\n  constraints = {\n    optional: [{DtlsSrtpKeyAgreement: true}]\n  };\n  // A way to speak to the peer to send SDP headers etc.\n  this.sendSignalMessage = null;\n\n  this.pc = null;  // The peer connection.\n  // Get TURN servers for the peer connection.\n  config = {iceServers: []};\n  for (i = 0; i < stunServers.length; i += 1) {\n    config.iceServers.push({\n      'url' : stunServers[i]\n    });\n  }\n  this.pc = new this.RTCPeerConnection(config, constraints);\n  // Add basic event handlers.\n  this.pc.addEventListener(\"icecandidate\",\n                            this.onIceCallback.bind(this));\n  this.pc.addEventListener(\"negotiationneeded\",\n                            this.onNegotiationNeeded.bind(this));\n  this.pc.addEventListener(\"datachannel\",\n                            this.onDataChannel.bind(this));\n  this.pc.addEventListener(\"signalingstatechange\", function () {\n    // TODO: come up with a better way to detect connection.  We start out\n    // as \"stable\" even before we are connected.\n    // TODO: this is not fired for connections closed by the other side.\n    // This will be fixed in m37, at that point we should dispatch an onClose\n    // event here for freedom.transport to pick up.\n    if (this.pc.signalingState === \"stable\") {\n      this.pcState = SimpleDataPeerState.CONNECTED;\n      this.onConnectedQueue.map(function (callback) { callback(); });\n    }\n  }.bind(this));\n  // This state variable is used to fake offer/answer when they are wrongly\n  // requested and we really just need to reuse what we already have.\n  this.pcState = SimpleDataPeerState.DISCONNECTED;\n\n  // Note: to actually do something with data channels opened by a peer, we\n  // need someone to manage \"datachannel\" event.\n}\n\nSimpleDataPeer.prototype.createOffer = function (constaints, continuation) {\n  this.pc.createOffer(continuation, function () {\n    console.error('core.peerconnection createOffer failed.');\n  }, constaints);\n};\n\nSimpleDataPeer.prototype.runWhenConnected = function (func) {\n  if (this.pcState === SimpleDataPeerState.CONNECTED) {\n    func();\n  } else {\n    this.onConnectedQueue.push(func);\n  }\n};\n\nSimpleDataPeer.prototype.send = function (channelId, message, continuation) {\n  this.channels[channelId].send(message);\n  continuation();\n};\n\nSimpleDataPeer.prototype.openDataChannel = function (channelId, continuation) {\n  var dataChannel = this.pc.createDataChannel(channelId, {});\n  dataChannel.onopen = function () {\n    this.addDataChannel(channelId, dataChannel);\n    continuation();\n  }.bind(this);\n  dataChannel.onerror = function (err) {\n    //@(ryscheng) todo - replace with errors that work across the interface\n    console.error(err);\n    continuation(undefined, err);\n  };\n  // Firefox does not fire \"negotiationneeded\", so we need to\n  // negotate here if we are not connected.\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=840728\n  if (typeof mozRTCPeerConnection !== \"undefined\" &&\n      this.pcState === SimpleDataPeerState.DISCONNECTED) {\n    this.negotiateConnection();\n  }\n};\n\nSimpleDataPeer.prototype.closeChannel = function (channelId) {\n  if (this.channels[channelId] !== undefined) {\n    this.channels[channelId].close();\n    delete this.channels[channelId];\n  }\n};\n\nSimpleDataPeer.prototype.getBufferedAmount = function (channelId,\n                                                       continuation) {\n  if (this.channels[channelId] !== undefined) {\n    var dataChannel = this.channels[channelId];\n    return dataChannel.bufferedAmount;\n  }\n  throw new Error(\"No channel with id: \" + channelId);\n};\n\nSimpleDataPeer.prototype.setSendSignalMessage = function (sendSignalMessageFn) {\n  this.sendSignalMessage = sendSignalMessageFn;\n};\n\n// Handle a message send on the signalling channel to this peer.\nSimpleDataPeer.prototype.handleSignalMessage = function (messageText) {\n  //console.log(this.peerName + \": \" + \"handleSignalMessage: \\n\" + messageText);\n  var json = JSON.parse(messageText),\n    ice_candidate;\n\n  // TODO: If we are offering and they are also offerring at the same time,\n  // pick the one who has the lower randomId?\n  // (this.pc.signalingState == \"have-local-offer\" && json.sdp &&\n  //    json.sdp.type == \"offer\" && json.sdp.randomId < this.localRandomId)\n  if (json.sdp) {\n    // Set the remote description.\n    this.pc.setRemoteDescription(\n      new this.RTCSessionDescription(json.sdp),\n      // Success\n      function () {\n        //console.log(this.peerName + \": setRemoteDescription succeeded\");\n        if (this.pc.remoteDescription.type === \"offer\") {\n          this.pc.createAnswer(this.onDescription.bind(this),\n                               console.error);\n        }\n      }.bind(this),\n      // Failure\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setRemoteDescription failed:\", e);\n      }.bind(this)\n    );\n  } else if (json.candidate) {\n    // Add remote ice candidate.\n    //console.log(this.peerName + \": Adding ice candidate: \" + JSON.stringify(json.candidate));\n    ice_candidate = new this.RTCIceCandidate(json.candidate);\n    this.pc.addIceCandidate(ice_candidate);\n  } else {\n    console.warn(this.peerName + \": \" +\n        \"handleSignalMessage got unexpected message: \", messageText);\n  }\n};\n\n// Connect to the peer by the signalling channel.\nSimpleDataPeer.prototype.negotiateConnection = function () {\n  this.pcState = SimpleDataPeerState.CONNECTING;\n  this.pc.createOffer(\n    this.onDescription.bind(this),\n    function (e) {\n      console.error(this.peerName + \": \" +\n          \"createOffer failed: \", e.toString());\n      this.pcState = SimpleDataPeerState.DISCONNECTED;\n    }.bind(this)\n  );\n};\n\nSimpleDataPeer.prototype.isClosed = function () {\n  return !this.pc || this.pc.signalingState === \"closed\";\n};\n\nSimpleDataPeer.prototype.close = function () {\n  if (!this.isClosed()) {\n    this.pc.close();\n  }\n  //console.log(this.peerName + \": \" + \"Closed peer connection.\");\n};\n\nSimpleDataPeer.prototype.addDataChannel = function (channelId, channel) {\n  var callbacks = this.dataChannelCallbacks;\n  this.channels[channelId] = channel;\n\n  if (channel.readyState === \"connecting\") {\n    channel.onopen = callbacks.onOpenFn.bind(this, channel, {label: channelId});\n  }\n\n  channel.onclose = callbacks.onCloseFn.bind(this, channel, {label: channelId});\n\n  channel.onmessage = callbacks.onMessageFn.bind(this, channel,\n                                                 {label: channelId});\n\n  channel.onerror = callbacks.onErrorFn.bind(this, channel, {label: channel});\n};\n\n// When we get our description, we set it to be our local description and\n// send it to the peer.\nSimpleDataPeer.prototype.onDescription = function (description) {\n  if (this.sendSignalMessage) {\n    this.pc.setLocalDescription(\n      description,\n      function () {\n        //console.log(this.peerName + \": setLocalDescription succeeded\");\n        this.sendSignalMessage(JSON.stringify({'sdp': description}));\n      }.bind(this),\n      function (e) {\n        console.error(this.peerName + \": \" +\n            \"setLocalDescription failed:\", e);\n      }.bind(this)\n    );\n  } else {\n    console.error(this.peerName + \": \" +\n        \"_onDescription: _sendSignalMessage is not set, so we did not \" +\n            \"set the local description. \");\n  }\n};\n\nSimpleDataPeer.prototype.onNegotiationNeeded = function (e) {\n  //console.log(this.peerName + \": \" + \"onNegotiationNeeded\",\n  //            JSON.stringify(this._pc), e);\n  if (this.pcState !== SimpleDataPeerState.DISCONNECTED) {\n    // Negotiation messages are falsely requested for new data channels.\n    //   https://code.google.com/p/webrtc/issues/detail?id=2431\n    // This code is a hack to simply reset the same local and remote\n    // description which will trigger the appropriate data channel open event.\n    // TODO: fix/remove this when Chrome issue is fixed.\n    var logSuccess = function (op) {\n      return function () {\n        //console.log(this.peerName + \": \" + op + \" succeeded \");\n      }.bind(this);\n    }.bind(this),\n      logFail = function (op) {\n        return function (e) {\n          //console.log(this.peerName + \": \" + op + \" failed: \" + e);\n        }.bind(this);\n      }.bind(this);\n    if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"offer\") {\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n    } else if (this.pc.localDescription && this.pc.remoteDescription &&\n        this.pc.localDescription.type === \"answer\") {\n      this.pc.setRemoteDescription(this.pc.remoteDescription,\n                                    logSuccess(\"setRemoteDescription\"),\n                                    logFail(\"setRemoteDescription\"));\n      this.pc.setLocalDescription(this.pc.localDescription,\n                                   logSuccess(\"setLocalDescription\"),\n                                   logFail(\"setLocalDescription\"));\n    } else {\n      console.error(this.peerName + ', onNegotiationNeeded failed');\n    }\n    return;\n  }\n  this.negotiateConnection();\n};\n\nSimpleDataPeer.prototype.onIceCallback = function (event) {\n  if (event.candidate) {\n    // Send IceCandidate to peer.\n    //console.log(this.peerName + \": \" + \"ice callback with candidate\", event);\n    if (this.sendSignalMessage) {\n      this.sendSignalMessage(JSON.stringify({'candidate': event.candidate}));\n    } else {\n      console.warn(this.peerName + \": \" + \"_onDescription: _sendSignalMessage is not set.\");\n    }\n  }\n};\n\nSimpleDataPeer.prototype.onSignalingStateChange = function () {\n  //console.log(this.peerName + \": \" + \"onSignalingStateChange: \", this._pc.signalingState);\n  if (this.pc.signalingState === \"stable\") {\n    this.pcState = SimpleDataPeerState.CONNECTED;\n    this.onConnectedQueue.map(function (callback) { callback(); });\n  }\n};\n\nSimpleDataPeer.prototype.onDataChannel = function (event) {\n  this.addDataChannel(event.channel.label, event.channel);\n  // RTCDataChannels created by a RTCDataChannelEvent have an initial\n  // state of open, so the onopen event for the channel will not\n  // fire. We need to fire the onOpenDataChannel event here\n  // http://www.w3.org/TR/webrtc/#idl-def-RTCDataChannelState\n\n  // Firefox channels do not have an initial state of \"open\"\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=1000478\n  if (event.channel.readyState === \"open\") {\n    this.dataChannelCallbacks.onOpenFn(event.channel,\n                                       {label: event.channel.label});\n  }\n};\n\n// _signallingChannel is a channel for emitting events back to the freedom Hub.\nfunction PeerConnection(portModule, dispatchEvent,\n                        RTCPeerConnection, RTCSessionDescription,\n                        RTCIceCandidate) {\n  // Channel for emitting events to consumer.\n  this.dispatchEvent = dispatchEvent;\n\n  // a (hopefully unique) ID for debugging.\n  this.peerName = \"p\" + Math.random();\n\n  // This is the portApp (defined in freedom/src/port-app.js). A way to speak\n  // to freedom.\n  this.freedomModule = portModule.module;\n\n  // For tests we may mock out the PeerConnection and\n  // SessionDescription implementations\n  this.RTCPeerConnection = RTCPeerConnection;\n  this.RTCSessionDescription = RTCSessionDescription;\n  this.RTCIceCandidate = RTCIceCandidate;\n\n  // This is the a channel to send signalling messages.\n  this.signallingChannel = null;\n\n  // The DataPeer object for talking to the peer.\n  this.peer = null;\n\n  // The Core object for managing channels.\n  this.freedomModule.once('core', function (Core) {\n    this.core = new Core();\n  }.bind(this));\n  this.freedomModule.emit(this.freedomModule.controlChannel, {\n    type: 'core request delegated to peerconnection',\n    request: 'core'\n  });\n}\n\n// Start a peer connection using the given freedomChannelId as the way to\n// communicate with the peer. The argument |freedomChannelId| is a way to speak\n// to an identity provide to send them SDP headers negotiate the address/port to\n// setup the peer to peerConnection.\n//\n// options: {\n//   peerName: string,   // For pretty printing messages about this peer.\n//   debug: boolean           // should we add extra\n// }\nPeerConnection.prototype.setup = function (signallingChannelId, peerName,\n                                           stunServers, initiateConnection,\n                                           continuation) {\n  this.peerName = peerName;\n  var mocks = {RTCPeerConnection: this.RTCPeerConnection,\n               RTCSessionDescription: this.RTCSessionDescription,\n               RTCIceCandidate: this.RTCIceCandidate},\n    self = this,\n    dataChannelCallbacks = {\n      // onOpenFn is called at the point messages will actually get through.\n      onOpenFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onOpenDataChannel\",\n                         { channelId: info.label});\n      },\n      onCloseFn: function (dataChannel, info) {\n        self.dispatchEvent(\"onCloseDataChannel\",\n                         { channelId: info.label});\n      },\n      // Default on real message prints it to console.\n      onMessageFn: function (dataChannel, info, event) {\n        if (event.data instanceof ArrayBuffer) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'buffer': event.data\n          });\n        } else if (event.data instanceof Blob) {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'binary': event.data\n          });\n        } else if (typeof (event.data) === 'string') {\n          self.dispatchEvent('onReceived', {\n            'channelLabel': info.label,\n            'text': event.data\n          });\n        }\n      },\n      // Default on error, prints it.\n      onErrorFn: function (dataChannel, info, err) {\n        console.error(dataChannel.peerName + \": dataChannel(\" +\n                      dataChannel.dataChannel.label + \"): error: \", err);\n      }\n    },\n    channelId,\n    openDataChannelContinuation;\n\n  this.peer = new SimpleDataPeer(this.peerName, stunServers,\n                                 dataChannelCallbacks, mocks);\n\n  // Setup link between Freedom messaging and _peer's signalling.\n  // Note: the signalling channel should only be sending receiveing strings.\n  this.core.bindChannel(signallingChannelId, function (channel) {\n    this.signallingChannel = channel;\n    this.peer.setSendSignalMessage(function (msg) {\n      this.signallingChannel.emit('message', msg);\n    }.bind(this));\n    this.signallingChannel.on('message',\n        this.peer.handleSignalMessage.bind(this.peer));\n    this.signallingChannel.emit('ready');\n    if (!initiateConnection) {\n      this.peer.runWhenConnected(continuation);\n    }\n  }.bind(this));\n\n  if (initiateConnection) {\n    // Setup a connection right away, then invoke continuation.\n    console.log(this.peerName + ' initiating connection');\n    channelId = 'hello' + Math.random().toString();\n    openDataChannelContinuation = function (success, error) {\n      if (error) {\n        continuation(undefined, error);\n      } else {\n        this.closeDataChannel(channelId, continuation);\n      }\n    }.bind(this);\n    this.openDataChannel(channelId, openDataChannelContinuation);\n  }\n};\n\nPeerConnection.prototype.createOffer = function (constraints, continuation) {\n  this.peer.createOffer(constraints, continuation);\n};\n\n// TODO: delay continuation until the open callback from _peer is called.\nPeerConnection.prototype.openDataChannel = function (channelId, continuation) {\n  this.peer.openDataChannel(channelId, continuation);\n};\n\nPeerConnection.prototype.closeDataChannel = function (channelId, continuation) {\n  this.peer.closeChannel(channelId);\n  continuation();\n};\n\n// Called to send a message over the given datachannel to a peer. If the data\n// channel doesn't already exist, the DataPeer creates it.\nPeerConnection.prototype.send = function (sendInfo, continuation) {\n  var objToSend = sendInfo.text || sendInfo.buffer || sendInfo.binary;\n  if (typeof objToSend === 'undefined') {\n    console.error(\"No valid data to send has been provided.\", sendInfo);\n    return;\n  }\n  //DEBUG\n  // objToSend = new ArrayBuffer(4);\n  //DEBUG\n  this.peer.send(sendInfo.channelLabel, objToSend, continuation);\n};\n\nPeerConnection.prototype.getBufferedAmount = function (channelId, continuation) {\n  continuation(this.peer.getBufferedAmount(channelId));\n};\n\nPeerConnection.prototype.close = function (continuation) {\n  if (this.peer.isClosed()) {\n    // Peer already closed, run continuation without dispatching event.\n    continuation();\n    return;\n  }\n  this.peer.close();\n  this.dispatchEvent(\"onClose\");\n  continuation();\n};\n\nexports.provider = PeerConnection;\nexports.name = 'core.peerconnection';\nexports.flags = {module: true};\n","/*jslint sloppy:true, node:true */\n/*globals Components, ArrayBuffer */\n\nvar util = require('../../src/util');\n\nvar eventNames = [\n  'onopen',\n  'onerror',\n  'onclose',\n  'onmessage'\n];\n\nvar unAttachedChannels = {};\nvar pendingEvents = {};\nvar allocateChannel = function (dataChannel) {\n  var id = util.getId();\n  unAttachedChannels[id] = dataChannel;\n  pendingEvents[id] = [];\n  eventNames.forEach(function(eventName) {\n    // This listener will be overridden (re-set) after the constructor runs.\n    var handler = function(event) {\n      var currentHandler = dataChannel[eventName];\n      if (currentHandler === handler) {\n        pendingEvents[id].push(event);\n      } else if (typeof currentHandler === 'function') {\n        // If an event somehow runs on this event handler after it has been\n        // replaced, forward that event to the new event handler.\n        currentHandler(event);\n      } else {\n        throw new Error('No handler for ' + event.type + ' event');\n      }\n    };\n    dataChannel[eventName] = handler;\n  });\n  return id;\n};\n\nvar RTCDataChannelAdapter = function (cap, dispatchEvents, id) {\n  this.dispatchEvent = dispatchEvents;\n  if (!unAttachedChannels[id]) {\n    console.warn('Invalid ID, creating acting on unattached DataChannel');\n    var Connection = require('./core.rtcpeerconnection').provider,\n      provider = new Connection();\n    id = provider.createDataChannel();\n    provider.close();\n  }\n\n  this.channel = unAttachedChannels[id];\n  delete unAttachedChannels[id];\n\n  // After the constructor returns, and the caller has a chance to register\n  // event listeners, fire all pending events, and then ensure that all\n  // subsequent events are handled immediately.\n  setTimeout(function() {\n    this.drainPendingEvents(id);\n\n    // This function must not be called until after the pending events are\n    // drained, to ensure that messages are delivered in order.\n    this.manageEvents(true);\n  }.bind(this), 0);\n};\n\nRTCDataChannelAdapter.prototype.drainPendingEvents = function(id) {\n  pendingEvents[id].forEach(function(event) {\n    this['on' + event.type](event);\n  }.bind(this));\n  delete pendingEvents[id];\n};\n\n// Attach or detach listeners for events against the connection.\nRTCDataChannelAdapter.prototype.manageEvents = function (attach) {\n  eventNames.forEach(function (eventName) {\n    if (attach) {\n      this[eventName] = this[eventName].bind(this);\n      this.channel[eventName] = this[eventName];\n    } else {\n      delete this.channel[eventName];\n    }\n  }.bind(this));\n};\n\nRTCDataChannelAdapter.prototype.getLabel = function (callback) {\n  callback(this.channel.label);\n};\n\nRTCDataChannelAdapter.prototype.getOrdered = function (callback) {\n  callback(this.channel.ordered);\n};\n\nRTCDataChannelAdapter.prototype.getMaxPacketLifeTime = function (callback) {\n  callback(this.channel.maxPacketLifeTime);\n};\n\nRTCDataChannelAdapter.prototype.getMaxRetransmits = function (callback) {\n  callback(this.channel.maxRetransmits);\n};\n\nRTCDataChannelAdapter.prototype.getProtocol = function (callback) {\n  callback(this.channel.protocol);\n};\n\nRTCDataChannelAdapter.prototype.getNegotiated = function (callback) {\n  callback(this.channel.negotiated);\n};\n\nRTCDataChannelAdapter.prototype.getId = function (callback) {\n  callback(this.channel.id);\n};\n\nRTCDataChannelAdapter.prototype.getReadyState = function (callback) {\n  callback(this.channel.readyState);\n};\n\nRTCDataChannelAdapter.prototype.getBufferedAmount = function (callback) {\n  callback(this.channel.bufferedAmount);\n};\n\nRTCDataChannelAdapter.prototype.getBinaryType = function (callback) {\n  callback(this.channel.binaryType);\n};\nRTCDataChannelAdapter.prototype.setBinaryType = function (binaryType, callback) {\n  this.channel.binaryType = binaryType;\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.send = function (text, callback) {\n  this.channel.send(text);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.sendBuffer = function (buffer, callback) {\n  this.channel.send(buffer);\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.close = function (callback) {\n  if (!this.channel) {\n    return callback();\n  }\n  this.manageEvents(false);\n  this.channel.close();\n  callback();\n};\n\nRTCDataChannelAdapter.prototype.onopen = function (event) {\n  this.dispatchEvent('onopen', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onerror = function (event) {\n  this.dispatchEvent('onerror', {\n    errcode: event.type,\n    message: event.message\n  });\n};\n\nRTCDataChannelAdapter.prototype.onclose = function (event) {\n  this.dispatchEvent('onclose', event.message);\n};\n\nRTCDataChannelAdapter.prototype.onmessage = function (event) {\n  if (typeof event.data === 'string') {\n    this.dispatchEvent('onmessage', {text: event.data});\n  } else if (this.channel.binaryType === 'arraybuffer' &&\n      typeof Components !== 'undefined' &&\n      !(event.data instanceof ArrayBuffer)) {\n    // In Firefox Addons, incoming array buffers are not always owned by the\n    // Addon context. The following line clones the object to take ownership.\n    // See: https://developer.mozilla.org/en-US/docs/Components.utils.cloneInto\n    var myData = Components.utils.cloneInto(event.data, {});\n    this.dispatchEvent('onmessage', {buffer: myData});\n  } else {\n    this.dispatchEvent('onmessage', {buffer: event.data});\n  }\n};\n\nexports.name = \"core.rtcdatachannel\";\nexports.provider = RTCDataChannelAdapter;\nexports.allocate = allocateChannel;\n","/*jslint indent:2,sloppy:true, node:true */\n\nvar adapter = require('webrtc-adapter');\nvar PromiseCompat = require('es6-promise').Promise;\nvar RTCPeerConnection = adapter.RTCPeerConnection;\nvar RTCSessionDescription = adapter.RTCSessionDescription;\nvar RTCIceCandidate = adapter.RTCIceCandidate;\n\nvar DataChannel = require('./core.rtcdatachannel');\n\nvar RTCPeerConnectionAdapter = function (cap, dispatchEvent, configuration) {\n  this.dispatchEvent = dispatchEvent;\n  try {\n    this.connection = new RTCPeerConnection(configuration);\n  } catch (e) {\n    // Note: You can't ask the provider to close you synchronously, since\n    // the constructor has not yet returned, so there's no 'this' that\n    // the provider can know about yet.\n    setTimeout(cap.provider.close.bind(cap.provider, this), 0);\n    return;\n  }\n\n  this.events = [\n    'ondatachannel',\n    'onnegotiationneeded',\n    'onicecandidate',\n    'onsignalingstatechange',\n    'onaddstream',\n    'onremovestream',\n    'oniceconnectionstatechange'\n  ];\n  this.manageEvents(true);\n};\n\n// Attach or detach listeners for events against the connection.\nRTCPeerConnectionAdapter.prototype.manageEvents = function (attach) {\n  this.events.forEach(function (event) {\n    if (attach) {\n      this[event] = this[event].bind(this);\n      this.connection[event] = this[event];\n    } else if (this.connection) {\n      delete this.connection[event];\n    }\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createOffer = function (constraints) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createOffer(resolve, reject, constraints);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.createAnswer = function () {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.createAnswer(resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.setLocalDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setLocalDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalDescription = function () {\n  return PromiseCompat.resolve(this.connection.localDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.setRemoteDescription = function (description) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.setRemoteDescription(new RTCSessionDescription(description),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteDescription = function () {\n  return PromiseCompat.resolve(this.connection.remoteDescription);\n};\n\nRTCPeerConnectionAdapter.prototype.getSignalingState = function () {\n  return PromiseCompat.resolve(this.connection.signalingState);\n};\n\nRTCPeerConnectionAdapter.prototype.updateIce = function (configuration) {\n  this.connection.updateIce(configuration);\n  return PromiseCompat.resolve();\n};\n\nRTCPeerConnectionAdapter.prototype.addIceCandidate = function (candidate) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.addIceCandidate(new RTCIceCandidate(candidate),\n      resolve,\n      reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.getIceGatheringState = function () {\n  return PromiseCompat.resolve(this.connection.iceGatheringState);\n};\n\nRTCPeerConnectionAdapter.prototype.getIceConnectionState = function () {\n  return PromiseCompat.resolve(this.connection.iceConnectionState);\n};\n\nRTCPeerConnectionAdapter.prototype.getConfiguration = function () {\n  var configuration = this.connection.getConfiguration();\n  return PromiseCompat.resolve(configuration);\n};\n\nRTCPeerConnectionAdapter.prototype.getLocalStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getRemoteStreams = function () {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.getStreamById = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.addStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.removeStream = function (id) {\n  return PromiseCompat.reject({\n    errcode: -1,\n    message: \"Not Implemented\"\n  });\n};\n\nRTCPeerConnectionAdapter.prototype.close = function () {\n  if (!this.connection) {\n    return PromiseCompat.resolve();\n  }\n  this.manageEvents(false);\n  try {\n    this.connection.close();\n    return PromiseCompat.resolve();\n  } catch (e) {\n    return PromiseCompat.reject({\n      errcode: e.name,\n      message: e.message\n    });\n  }\n};\n\nRTCPeerConnectionAdapter.prototype.createDataChannel = function (label, dataChannelDict) {\n  var id = DataChannel.allocate(this.connection.createDataChannel(label, dataChannelDict));\n  return PromiseCompat.resolve(id);\n};\n\nRTCPeerConnectionAdapter.prototype.getStats = function (selector) {\n  return new PromiseCompat(function (resolve, reject) {\n    this.connection.getStats(selector, resolve, reject);\n  }.bind(this));\n};\n\nRTCPeerConnectionAdapter.prototype.ondatachannel = function (event) {\n  var id = DataChannel.allocate(event.channel);\n  this.dispatchEvent('ondatachannel', {channel: id});\n};\n\nRTCPeerConnectionAdapter.prototype.onnegotiationneeded = function (event) {\n  this.dispatchEvent('onnegotiationneeded', event.message);\n};\n\nRTCPeerConnectionAdapter.prototype.onicecandidate = function (event) {\n  var msg;\n  if (event.candidate && event.candidate.candidate) {\n    msg = {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex\n      }\n    };\n  } else {\n    msg = {\n      candidate: null\n    };\n  }\n  this.dispatchEvent('onicecandidate', msg);\n};\n  \nRTCPeerConnectionAdapter.prototype.onsignalingstatechange = function (event) {\n  this.dispatchEvent('onsignalingstatechange', event.message);\n};\n  \nRTCPeerConnectionAdapter.prototype.onaddstream = function (event) {\n  //TODO: provide ID of allocated stream.\n  this.dispatchEvent('onaddstream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.onremovestream = function (event) {\n  //TODO: provide ID of deallocated stream.\n  this.dispatchEvent('onremovestream', event.stream);\n};\n  \nRTCPeerConnectionAdapter.prototype.oniceconnectionstatechange = function (event) {\n  this.dispatchEvent('oniceconnectionstatechange', event.message);\n};\n\n\nexports.name = \"core.rtcpeerconnection\";\nexports.provider = RTCPeerConnectionAdapter;\nexports.style = \"providePromises\";\nexports.flags = {provider: true};\n","/*globals localStorage */\n/*jslint indent:2,sloppy:true,node:true */\nvar util = require('../../src/util');\n\n/**\n * A FreeDOM core.storage provider that depends on localStorage\n * Thus, this only works in the context of a webpage and has\n * some size limitations.\n * Note that this can conflict with other scripts using localStorage\n * as keys are raw\n * @Class Storage_unprivileged\n * @constructor\n * @private\n * @param {Object} cap Capabilities for the provider\n */\nvar Storage_unprivileged = function (cap, dispatchEvent) {\n  util.handleEvents(this);\n};\n\n/**\n * Lists keys in the storage repository\n * @method keys\n */\nStorage_unprivileged.prototype.keys = function (continuation) {\n  var result = [],\n    i;\n  for (i = 0; i < localStorage.length; i += 1) {\n    result.push(localStorage.key(i));\n  }\n  continuation(result);\n};\n\n/**\n * Get a key from the storage repository.\n * @param {String} key The item to get from storage.\n * @method get\n */\nStorage_unprivileged.prototype.get = function (key, continuation) {\n  try {\n    var val = localStorage.getItem(key);\n    continuation(val);\n  } catch (e) {\n    continuation(null);\n  }\n};\n\n/**\n * Set a key in the storage repository.\n * @param {String} key The item to save in storage.\n * @param {String} value The value to save in storage.\n * @method set\n */\nStorage_unprivileged.prototype.set = function (key, value, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.setItem(key, value);\n  continuation(ret);\n};\n\n/**\n * Remove a key from the storage repository.\n * @param {String} key The item to remove from storage;\n * @method remove\n */\nStorage_unprivileged.prototype.remove = function (key, continuation) {\n  var ret = localStorage.getItem(key);\n  localStorage.removeItem(key);\n  continuation(ret);\n};\n\n/**\n * Reset the contents of the storage repository.\n * @method clear\n */\nStorage_unprivileged.prototype.clear = function (continuation) {\n  localStorage.clear();\n  continuation();\n};\n\nexports.provider = Storage_unprivileged;\nexports.name = 'core.storage';\n","/*jslint indent:2,white:true,sloppy:true,node:true */\nvar EventInterface = require('../../src/proxy/eventInterface');\nvar Consumer = require('../../src/consumer');\nvar util = require('../../src/util');\n\n/**\n * Core freedom services available to all modules.\n * Created by the environment helper in response to a 'core' request.\n * @Class Core_unprivileged\n * @constructor\n * @param {Manager} manager The manager this core is connected with.\n * @private\n */\nvar Core_unprivileged = function(manager, postMessage) {\n  this.manager = manager.module;\n  this.debug = this.manager.debug;\n};\n\nCore_unprivileged.unboundChannels = {};\n\nCore_unprivileged.contextId = undefined;\nCore_unprivileged.moduleInternal = undefined;\n\n/**\n * Create a custom channel.\n * Returns the structure {channel: Proxy, identifier: Object},\n * where the identifier can be 'redeemed' by another module or provider using\n * bind channel, at which point the deferred object will resolve with a channel\n * between the two endpoints.\n * @method createChannel\n * @params {Function} continuation Method to call with the cosntructed structure.\n */\nCore_unprivileged.prototype.createChannel = function(continuation) {\n  var proxy = new Consumer(EventInterface, this.manager.debug),\n      id = util.getId(),\n      chan = this.getChannel(proxy);\n  this.manager.setup(proxy);\n\n  if (this.isInModule()) {\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'register',\n        id: id\n      }\n    });\n  }\n  Core_unprivileged.unboundChannels[id] = {\n    local: true,\n    proxy: proxy\n  };\n\n  proxy.once('start', this.getChannel.bind(this, proxy));\n\n  continuation({\n    channel: chan,\n    identifier: id\n  });\n};\n\nCore_unprivileged.prototype.getChannel = function(proxy) {\n  var iface = proxy.getProxyInterface(),\n      chan = iface();\n  chan.close = iface.close;\n  chan.onClose = iface.onClose;\n  iface.onClose(chan, function() {\n    proxy.doClose();\n  });\n  return chan;\n};\n\n/**\n * Receive a message from another core instance.\n * Note: Core_unprivileged is not registered on the hub. it is a provider,\n *     as it's location and name would indicate. This function is called by\n *     port-app to relay messages up to higher levels.  More generally, the\n *     messages emitted by the core to 'this.manager.emit(this.mananage.delegate'\n *     Should be onMessaged to the controlling core.\n * @param {String} source The source of the message.\n * @param {Object} msg The messsage from an isolated core provider.\n */\nCore_unprivileged.prototype.onMessage = function(source, msg) {\n  if (msg.type === 'register') {\n    Core_unprivileged.unboundChannels[msg.id] = {\n      remote: true,\n      resolve: msg.reply,\n      source: source\n    };\n  } else if (msg.type === 'clear') {\n    delete Core_unprivileged.unboundChannels[msg.id];\n  } else if (msg.type === 'bind') {\n    if (Core_unprivileged.unboundChannels[msg.id]) {\n      this.bindChannel(msg.id, function() {}, source);\n    }\n  } else if (msg.type === 'require') {\n    source.require(msg.id, msg.manifest);\n  }\n};\n\n/**\n * Bind a custom channel.\n * Creates a proxy interface to the custom channel, which will be bound to\n * the proxy obtained through an earlier createChannel call.\n * channel to a proxy.\n * @method bindChannel\n * @param {Object} identifier An identifier obtained through createChannel.\n * @param {Function} continuation A function to be called with the proxy.\n */\nCore_unprivileged.prototype.bindChannel = function(identifier, continuation, source) {\n  var toBind = Core_unprivileged.unboundChannels[identifier],\n      newSource = !source;\n\n  // when bindChannel is called directly, source will be undefined.\n  // When it is propogated by onMessage, a source for binding will already exist.\n  if (newSource) {\n    this.debug.debug('making local proxy for core binding');\n    source = new Consumer(EventInterface, this.debug);\n    this.manager.setup(source);\n  }\n\n  // If this is a known identifier and is in the same context, binding is easy.\n  if (toBind && toBind.local) {\n    this.debug.debug('Binding a channel to port on this hub:' + source);\n    this.manager.createLink(source, identifier, toBind.proxy, 'default');\n    delete Core_unprivileged.unboundChannels[identifier];\n    if (this.manager.delegate && this.manager.toDelegate.core) {\n      this.manager.emit(this.manager.delegate, {\n        type: 'Delegation',\n        request: 'handle',\n        flow: 'core',\n        message: {\n          type: 'clear',\n          id: identifier\n        }\n      });\n    }\n  } else if (toBind && toBind.remote) {\n    this.debug.debug('Binding a channel into a module.');\n    this.manager.createLink(\n        source,\n        newSource ? 'default' : identifier,\n        toBind.source,\n        identifier);\n    toBind.resolve({\n      type: 'Bind Channel',\n      request:'core',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    delete Core_unprivileged.unboundChannels[identifier];\n  } else if (this.isInModule()) {\n    this.debug.info('delegating channel bind for an unknown ID:' + identifier);\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'bind',\n        id: identifier\n      }\n    });\n    source.once('start', function(p, cb) {\n      cb(this.getChannel(p));\n    }.bind(this, source, continuation));\n    this.manager.createLink(source,\n        'default',\n        this.manager.hub.getDestination(this.manager.delegate),\n        identifier);\n    delete Core_unprivileged.unboundChannels[identifier];\n    return;\n  } else {\n    this.debug.warn('Asked to bind unknown channel: ' + identifier);\n    this.debug.log(Core_unprivileged.unboundChannels);\n    continuation();\n    return;\n  }\n\n  if (source.getInterface) {\n    continuation(this.getChannel(source));\n  } else {\n    continuation();\n  }\n};\n\n/**\n * @method isInModule\n * @private\n * @returns {Boolean} Whether this class is running in a module.\n */\nCore_unprivileged.prototype.isInModule = function () {\n  return (this.manager.delegate && this.manager.toDelegate.core);\n};\n\n/**\n * Require a dynamic dependency for your freedom module.\n * If new permissions are needed beyond what are already available to the\n * freedom context, the user will need to approve of the requested permissions.\n * @method require\n * @param {String} manifest The URL of the manifest to require.\n * @param {String} api The API of the dependency to expose if not default.\n * @param {Function} callback The function to call with the dependency.\n */\nCore_unprivileged.prototype.require = function (manifest, api, callback) {\n  if (this.isInModule() && Core_unprivileged.moduleInternal) {\n    // Register a callback with moduleInternal.\n    // DependencyName is the name of the channel moduelInternal will allocate\n    // callback will be called once a link to that channel is seen.\n    var dependencyName =\n        Core_unprivileged.moduleInternal.registerId(api, callback);\n\n    // Request the dependency be added.\n    this.manager.emit(this.manager.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      flow: 'core',\n      message: {\n        type: 'require',\n        manifest: manifest,\n        id: dependencyName\n      }\n    });\n  } else {\n    this.debug.error('The require function in external context makes no sense' +\n        ' Instead create a new freedom() context.');\n    callback(undefined, {\n      errcode: 'InvalidContext',\n      message: 'Cannot call require() from this context.'\n    });\n  }\n};\n\n/**\n * Get the ID of the current freedom.js context.  Provides an\n * array of module URLs, the lineage of the current context.\n * When not in an application context, the ID is the lineage\n * of the current View.\n * @method getId\n * @param {Function} callback The function called with ID information.\n */\nCore_unprivileged.prototype.getId = function(callback) {\n  // TODO: make sure contextID is properly frozen.\n  callback(Core_unprivileged.contextId);\n};\n\n/**\n * Get a logger for logging to the freedom.js logger. Provides a\n * log object with an interface similar to the standard javascript console,\n * which logs via debug.\n * @method getLogger\n * @param {String} name The name of the logger, used as its 'source'\n * @param {Function} callback The function to call with the logger.\n */\nCore_unprivileged.prototype.getLogger = function(name, callback) {\n  callback(this.manager.debug.getLogger(name));\n};\n\n/**\n * Set the ID of the current freedom.js context.\n * @method setId\n * @private\n * @param {String[]} id The lineage of the current context.\n * @param {ModuleInternal} moduleInternal The Module environment if one exists.\n */\nCore_unprivileged.prototype.setId = function(id, moduleInternal) {\n  Core_unprivileged.contextId = id;\n  Core_unprivileged.moduleInternal = moduleInternal;\n};\n\nexports.provider = Core_unprivileged;\nexports.name = \"core\";\nexports.flags = {module: true};\n","/*globals document */\r\n/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('../../src/util');\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\n/**\r\n * A freedom.js view is the interface for user interaction.\r\n * A view exists as an iFrame, which is shown to the user in some way.\r\n * communication between the view and the freedom.js module is performed\r\n * through the HTML5 postMessage mechanism, which this provider translates\r\n * to freedom.js message events.\r\n * @Class View_unprivileged\r\n * @constructor\r\n * @private\r\n * @param {View Provider} provider\r\n * @param {provider:Provider,module:Module} cap The instantiator of the view.\r\n * @param {Function} dispatchEvent Function to call to emit events.\r\n */\r\nvar Core_View = function (provider, cap, dispatchEvent) {\r\n  this.provider = provider;\r\n  this.dispatchEvent = dispatchEvent;\r\n  setTimeout(cap.provider.onClose.bind(\r\n    cap.provider,\r\n    this,\r\n    this.close.bind(this, function () {})\r\n  ), 0);\r\n  this.module = cap.module;\r\n  util.handleEvents(this);\r\n};\r\n\r\n/**\r\n * The is the default provider for core.view, unless overridden by context or\r\n * a user supplied provider. The interface is documented at:\r\n * https://github.com/freedomjs/freedom/wiki/freedom.js-Views\r\n *\r\n * Generally, a view provider consists of 3 methods:\r\n * onOpen is called when a view should be shown.\r\n *     id - is a unique identifier for this view, used on subsequent calls\r\n *          for communication and to eventually close the view.\r\n *     name - is the name of the view (as defined in the manifest),\r\n *            in order to place it appropriately.\r\n *     page - is the resolved URL to open.\r\n *     resources - is an array of resolved URLs which are referenced.\r\n *     postMessage - is a function to call when messages are emitted\r\n *                   by the window in which the view is opened.\r\n * onOpen returns a promise that completes when the view is loaded.\r\n * onMessage is called to send a message to an open view.\r\n *     id - is the unique identifier for the open view.\r\n *     message - is the message to postMessage to the view's window.\r\n * onClose is called to close a view.\r\n *     id - is the unique identifier for the view.\r\n */\r\nCore_View.provider = {\r\n  listener: undefined,\r\n  active: {},\r\n  onOpen: function (id, name, page, resources, postMessage) {\r\n    var container = document.body,\r\n      root,\r\n      frame;\r\n    \r\n    if (!this.listener) {\r\n      this.listener = function (msg) {\r\n        var i;\r\n        for (i in this.active) {\r\n          if (this.active.hasOwnProperty(i) &&\r\n              this.active[i].source === msg.source) {\r\n            this.active[i].postMessage(msg.data);\r\n          }\r\n        }\r\n      }.bind(this);\r\n      window.addEventListener('message', this.listener, true);\r\n    }\r\n\r\n    // Views open by default in an element with their ID, or fill the page\r\n    // otherwise.\r\n    if (document.getElementById(name)) {\r\n      container = document.getElementById(name);\r\n    }\r\n\r\n    root = document.createElement(\"div\");\r\n    root.style.width = \"100%\";\r\n    root.style.height = \"100%\";\r\n    root.style.display = \"relative\";\r\n\r\n    container.appendChild(root);\r\n    \r\n    return new PromiseCompat(function (resolve, reject) {\r\n      frame = document.createElement(\"iframe\");\r\n      frame.setAttribute(\"sandbox\", \"allow-scripts allow-forms\");\r\n      frame.style.width = \"100%\";\r\n      frame.style.height = \"100%\";\r\n      frame.style.border = \"0\";\r\n      frame.style.background = \"transparent\";\r\n      frame.src = page;\r\n      frame.addEventListener('load', resolve, true);\r\n      frame.addEventListener('error', reject, true);\r\n\r\n      root.appendChild(frame);\r\n\r\n      this.active[id] = {\r\n        postMessage: postMessage,\r\n        container: container,\r\n        root: root,\r\n        source: frame.contentWindow\r\n      };\r\n    }.bind(this));\r\n  },\r\n  onMessage: function (id, message) {\r\n    this.active[id].source.postMessage(message, '*');\r\n  },\r\n  onClose: function (id) {\r\n    this.active[id].container.removeChild(this.active[id].root);\r\n    delete this.active[id];\r\n    \r\n    if (Object.keys(this.active).length === 0) {\r\n      window.removeEventListener('message', this.listener, true);\r\n      this.listener = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Ask for this view to open a specific location, either a File relative to\r\n * the loader, or an explicit code location.\r\n * @method show\r\n * @param {String} name The identifier of the view.\r\n * @param {Function} continuation Function to call when view is loaded.\r\n */\r\nCore_View.prototype.show = function (name, continuation) {\r\n  if (this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'ALREADY_OPEN',\r\n      message: 'Cannot show multiple views through one instance.'\r\n    });\r\n  }\r\n  this.id = util.getId();\r\n\r\n  var config = this.module.manifest.views,\r\n    toResolve = [];\r\n  if (!config || !config[name]) {\r\n    return continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n\r\n  if (config[name].main && config[name].files) {\r\n    toResolve = config[name].files.concat(config[name].main);\r\n    PromiseCompat.all(toResolve.map(function (fname) {\r\n      return this.module.resource.get(this.module.manifestId, fname);\r\n    }.bind(this))).then(function (files) {\r\n      this.provider.onOpen(this.id,\r\n          name,\r\n          files[files.length - 1],\r\n          files,\r\n          this.dispatchEvent.bind(this, 'message')).then(\r\n        function (c) {\r\n          // Make sure continuation is called without an argument.\r\n          c();\r\n        }.bind({}, continuation),\r\n        continuation.bind({}, undefined)\r\n      );\r\n    }.bind(this), function (err) {\r\n      this.module.debug.error('Unable to open view ' + name + ': ', err);\r\n      continuation(undefined, {\r\n        errcode: 'VIEW_MALFORMED',\r\n        message: 'Malformed View Declaration: ' + err\r\n      });\r\n    });\r\n  } else {\r\n    continuation(undefined, {\r\n      errcode: 'NON_EXISTANT',\r\n      message: 'View not found: ' + name\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * isSecure determines whether the module can have confidence that its\r\n * communication with its view cannot be intercepted by an untrusted 3rd party.\r\n * In practice, this means that its okay for the runtime to have access to the\r\n * messages, and if the context is a web server or a browser extension then\r\n * that context is trusted. However, if a provider wants to allow their e.g.\r\n * social provider to be used on arbitrary websites, this mechanism means that\r\n * if the website uses a trusted version of the freedom.js library, then the\r\n * module can be used.\r\n * @method isSecure\r\n * @returns {Boolean} if the channel to the view is secure.\r\n */\r\nCore_View.prototype.isSecure = function (continuation) {\r\n  continuation(false);\r\n};\r\n\r\n/**\r\n * Send a message to an open view.\r\n * @method postMessage\r\n */\r\nCore_View.prototype.postMessage = function (msg, continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot post message to uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onMessage(this.id, msg);\r\n  continuation();\r\n};\r\n\r\n/**\r\n * Close an active view.\r\n * @method close\r\n */\r\nCore_View.prototype.close = function (continuation) {\r\n  if (!this.id) {\r\n    return continuation(undefined, {\r\n      errcode: 'NOT_OPEN',\r\n      message: 'Cannot close uninitialized view.'\r\n    });\r\n  }\r\n  this.provider.onClose(this.id);\r\n  delete this.id;\r\n\r\n  continuation();\r\n};\r\n\r\n\r\n/**\r\n * Allow a web page to redefine behavior for how views are shown.\r\n * @method register\r\n * @static\r\n * @param {Function} PageProvider The custom view behavior.\r\n */\r\nCore_View.register = function (PageProvider) {\r\n  var provider = PageProvider ? new PageProvider() : Core_View.provider;\r\n  exports.provider = Core_View.bind(this, provider);\r\n};\r\n\r\nexports.provider = Core_View.bind(this, Core_View.provider);\r\nexports.name = 'core.view';\r\nexports.register = Core_View.register;\r\nexports.flags = {provider: true, module: true};\r\n","/*globals WebSocket, ArrayBuffer, Blob, Uint8Array, console */\n/*jslint sloppy:true, node:true */\n\nvar WSHandle = null;\nvar nodeStyle = false;\n\n/**\n * A WebSocket core provider\n *\n * @param {Object} cap Capabilities for the provider\n * @param {Function} dispatchEvent Function to dispatch events.\n * @param {String} url The Remote URL to connect with.\n * @param {String[]} protocols SubProtocols to open.\n * @param {WebSocket?} socket An alternative socket class to use.\n */\nvar WS = function (cap, dispatchEvent, url, protocols, socket) {\n  var WSImplementation = null,\n    error;\n  this.isNode = nodeStyle;\n  if (typeof socket !== 'undefined') {\n    WSImplementation = socket;\n  } else if (WSHandle !== null) {\n    WSImplementation = WSHandle;\n  } else if (typeof WebSocket !== 'undefined') {\n    WSImplementation = WebSocket;\n  } else {\n    console.error('Platform does not support WebSocket');\n  }\n\n  this.dispatchEvent = dispatchEvent;\n  try {\n    if (protocols) {\n      this.websocket = new WSImplementation(url, protocols);\n    } else {\n      this.websocket = new WSImplementation(url);\n    }\n    this.websocket.binaryType = 'arraybuffer';\n  } catch (e) {\n    error = {};\n    if (e instanceof SyntaxError) {\n      error.errcode = 'SYNTAX';\n    } else {\n      error.errcode = e.name;\n    }\n    error.message = e.message;\n    dispatchEvent('onError', error);\n    return;\n  }\n\n  if (this.isNode) {\n    this.websocket.on('message', this.onMessage.bind(this));\n    this.websocket.on('open', this.onOpen.bind(this));\n    // node.js websocket implementation not compliant\n    this.websocket.on('close', this.onClose.bind(this, {\n      code: 0,\n      reason: 'UNKNOWN',\n      wasClean: true\n    }));\n    this.websocket.on('error', this.onError.bind(this));\n  } else {\n    this.websocket.onopen = this.onOpen.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n};\n\nWS.prototype.send = function (data, continuation) {\n  var toSend = data.text || data.binary || data.buffer,\n    errcode,\n    message;\n\n  if (toSend) {\n    try {\n      // For node.js, we have to do weird buffer stuff\n      if (this.isNode && toSend instanceof ArrayBuffer) {\n        this.websocket.send(\n          new Uint8Array(toSend),\n          { binary: true },\n          this.onError.bind(this)\n        );\n      } else {\n        this.websocket.send(toSend);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        errcode = \"SYNTAX\";\n      } else {\n        errcode = \"INVALID_STATE\";\n      }\n      message = e.message;\n    }\n  } else {\n    errcode = \"BAD_SEND\";\n    message = \"No text, binary, or buffer data found.\";\n  }\n\n  if (errcode) {\n    continuation(undefined, {\n      errcode: errcode,\n      message: message\n    });\n  } else {\n    continuation();\n  }\n};\n\nWS.prototype.getReadyState = function (continuation) {\n  continuation(this.websocket.readyState);\n};\n\nWS.prototype.getBufferedAmount = function (continuation) {\n  continuation(this.websocket.bufferedAmount);\n};\n\nWS.prototype.close = function (code, reason, continuation) {\n  try {\n    if (code && reason) {\n      this.websocket.close(code, reason);\n    } else {\n      this.websocket.close();\n    }\n    continuation();\n  } catch (e) {\n    var errorCode;\n    if (e instanceof SyntaxError) {\n      errorCode = \"SYNTAX\";\n    } else {\n      errorCode = \"INVALID_ACCESS\";\n    }\n    continuation(undefined, {\n      errcode: errorCode,\n      message: e.message\n    });\n  }\n};\n\nWS.prototype.onOpen = function (event) {\n  this.dispatchEvent('onOpen');\n};\n\nWS.prototype.onMessage = function (event, flags) {\n  var data = {};\n  if (this.isNode && flags && flags.binary) {\n    data.buffer = new Uint8Array(event).buffer;\n  } else if (this.isNode) {\n    data.text = event;\n  } else if (typeof ArrayBuffer !== 'undefined' && event.data instanceof ArrayBuffer) {\n    data.buffer = event.data;\n  } else if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n    data.binary = event.data;\n  } else if (typeof event.data === 'string') {\n    data.text = event.data;\n  }\n  this.dispatchEvent('onMessage', data);\n};\n\nWS.prototype.onError = function (event) {\n  // Nothing to pass on\n  // See: http://stackoverflow.com/a/18804298/300539\n  this.dispatchEvent('onError');\n};\n\nWS.prototype.onClose = function (event) {\n  this.dispatchEvent('onClose',\n                     {code: event.code,\n                      reason: event.reason,\n                      wasClean: event.wasClean});\n};\n\nexports.provider = WS;\nexports.name = 'core.websocket';\nexports.setSocket = function (impl, isNode) {\n  WSHandle = impl;\n  nodeStyle = isNode;\n};\n","/*jshint node:true*/\nvar PromiseCompat = require('es6-promise').Promise;\nvar XhrClass = null;\n\nvar XhrProvider = function(cap, dispatchEvent) {\n  \"use strict\";\n  if (typeof window !== \"undefined\" &&\n      typeof window.XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom\n    XhrClass = window.XMLHttpRequest;\n  } else if (typeof XMLHttpRequest !== \"undefined\" &&\n      XhrClass === null) { // freedom-for-firefox\n    XhrClass = XMLHttpRequest;\n  } else if (XhrClass === null) {\n    console.error(\"Platform does not support XMLHttpRequest\");\n  }\n\n  this._dispatchEvent = dispatchEvent;\n  this._xhr = new XhrClass();\n\n  setTimeout(cap.provider.onClose.bind(\n    cap.provider,\n    this,\n    this.abort.bind(this)\n  ), 0);\n\n  this._events = [\n    \"loadstart\",\n    \"progress\",\n    \"abort\",\n    \"error\",\n    \"load\",\n    \"timeout\",\n    \"loadend\",\n    \"readystatechange\"\n  ];\n  this._setupListeners();\n\n};\n\nXhrProvider.prototype.open = function(method, url, async, user, password) {\n  \"use strict\";\n  if (typeof async !== \"undefined\" && async !== true) {\n    return PromiseCompat.reject({\n      errcode: \"InvalidAccessError\",\n      message: \"async should always be set to true\"\n    });\n  }\n\n  // Force async to be true. undefined can lead to async=false in Chrome packaged apps\n  this._xhr.open(method, url, true, user, password);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.send = function(data) {\n  \"use strict\";\n  if (!(data instanceof Object)) {\n    this._xhr.send();\n  } else if (data.hasOwnProperty(\"string\")) {\n    this._xhr.send(data.string);\n  } else if (data.hasOwnProperty(\"buffer\")) {\n    this._xhr.send(data.buffer);\n  } else if (data.hasOwnProperty(\"blob\")) {\n    this._xhr.send(data.blob);\n  } else {\n    this._xhr.send();\n  }\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.abort = function() {\n  \"use strict\";\n  this._xhr.abort();\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getResponseHeader = function(header) {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getResponseHeader(header));\n};\n\nXhrProvider.prototype.getAllResponseHeaders = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.getAllResponseHeaders());\n};\n\nXhrProvider.prototype.setRequestHeader = function(header, value) {\n  \"use strict\";\n  this._xhr.setRequestHeader(header, value);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.overrideMimeType = function(mime) {\n  \"use strict\";\n  this._xhr.overrideMimeType(mime);\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getReadyState = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.readyState);\n};\n\nXhrProvider.prototype.getResponse = function() {\n  \"use strict\";\n  if (this._xhr.response === null) {\n    return PromiseCompat.resolve(null);\n  } else if (this._xhr.responseType === \"text\" || this._xhr.responseType === \"\") {\n    return PromiseCompat.resolve({ string: this._xhr.response });\n  } else if (this._xhr.responseType === \"arraybuffer\") {\n    return PromiseCompat.resolve({ buffer: this._xhr.response });\n  } else if (this._xhr.responseType === \"json\") {\n    return PromiseCompat.resolve({ object: this._xhr.response });\n  }\n\n  return PromiseCompat.reject(\"core.xhr cannot determine type of response\");\n};\n\nXhrProvider.prototype.getResponseText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseText);\n};\n\nXhrProvider.prototype.getResponseURL = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseURL);\n};\n\nXhrProvider.prototype.getResponseType = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.responseType);\n};\n\nXhrProvider.prototype.setResponseType = function(type) {\n  \"use strict\";\n  this._xhr.responseType = type;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getStatus = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.status);\n};\n\nXhrProvider.prototype.getStatusText = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.statusText);\n};\n\nXhrProvider.prototype.getTimeout = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.timeout);\n};\n\nXhrProvider.prototype.setTimeout = function(timeout) {\n  \"use strict\";\n  this._xhr.timeout = timeout;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype.getWithCredentials = function() {\n  \"use strict\";\n  return PromiseCompat.resolve(this._xhr.withCredentials);\n};\n\nXhrProvider.prototype.setWithCredentials = function(wc) {\n  \"use strict\";\n  this._xhr.withCredentials = wc;\n  return PromiseCompat.resolve();\n};\n\nXhrProvider.prototype._setupListeners = function() {\n  \"use strict\";\n  // Download events\n  this._events.forEach(function (eventName) {\n    this._xhr.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"on\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n\n  // Upload events\n  this._events.forEach(function (eventName) {\n    this._xhr.upload.addEventListener(eventName, function(eventName, event) {\n      this._dispatchEvent(\"onupload\" + eventName, event);\n    }.bind(this, eventName), false);\n  }.bind(this));\n};\n\nexports.name = \"core.xhr\";\nexports.provider = XhrProvider;\nexports.style = \"providePromises\";\nexports.flags = { provider: true };\nexports.setImpl = function(impl) {\n  \"use strict\";\n  XhrClass = impl;\n};\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar loadedOnStartup = false;\n\nvar TIMEOUT = 5000;\n\n/**\n * If there is redirection back to the page, and oAuthRedirectID is set,\n * then report the auth and close the window.\n */\nif (typeof window !== 'undefined' && window && window.location &&\n    window.addEventListener) {\n  window.addEventListener('load', function () {\n    \"use strict\";\n    loadedOnStartup = true;\n  }, true);\n\n  if (window.localStorage &&\n      window.location.href.indexOf(oAuthRedirectId) > 0) {\n    // This will trigger a 'storage' event on the window. See storageListener\n    window.localStorage.setItem(oAuthRedirectId, new Date());\n    window.close();\n  }\n}\n\nvar LocalPageAuth = function() {\n  \"use strict\";\n  this.listeners = {};\n};\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nLocalPageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof window !== 'undefined' && window && loadedOnStartup) {\n    var here = window.location.protocol + \"//\" + window.location.host +\n        window.location.pathname;\n    if (redirectURIs.indexOf(here) > -1) {\n      continuation({\n        redirect: here,\n        state: oAuthRedirectId + Math.random()\n      });\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nLocalPageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var listener = this.storageListener.bind(this, continuation, stateObj);\n  this.listeners[stateObj.state] = listener;\n  window.addEventListener(\"storage\", listener, false);\n  // Start 'er up\n  window.open(authUrl);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (this.listeners[stateObj.state]) {\n        // Listener has not been deleted, indicating oauth has completed.\n        window.removeEventListener(\n            \"storage\", this.listeners[stateObj.state], false);\n        delete this.listeners[stateObj.state];\n        continuation(undefined, 'Error launching auth flow');\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * Handler for storage events, which relays them to waiting clients.\n * For the schema of the storage msg, see:\n * http://tutorials.jenkov.com/html5/local-storage.html#storage-events\n * @param {Function} continuation function to call with result\n * @param {Object.<string, string>} stateObj the return value from initiateOAuth\n\n * @param {Object} msg storage event\n */\nLocalPageAuth.prototype.storageListener = function(continuation, stateObj, msg) {\n  'use strict';\n  if (msg.url.indexOf(stateObj.state) > -1) {\n    window.removeEventListener(\"storage\", this.listeners[stateObj.state], false);\n    delete this.listeners[stateObj.state];\n    continuation(msg.url);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = LocalPageAuth;\n","/*jslint indent:2,browser:true, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar oAuthRedirectId = 'freedom.oauth.redirect.handler';\n\nvar TIMEOUT = 5000;\n\nfunction RemotePageAuth() {\n  \"use strict\";\n  this.listeners = {};\n}\n\n/**\n * Indicate the intention to initiate an oAuth flow, allowing an appropriate\n * oAuth provider to begin monitoring for redirection.\n *\n * @method initiateOAuth\n * @param {string[]} redirectURIs - oAuth redirection URIs registered with the\n *     provider.\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a value of schema: {{redirect:String, state:String}}\n *    where 'redirect' is the chosen redirect URI\n *    and 'state' is the state to pass to the URI on completion of oAuth\n * @return {Boolean} true if can handle, false otherwise\n */\nRemotePageAuth.prototype.initiateOAuth = function(redirectURIs, continuation) {\n  \"use strict\";\n  if (typeof global !== 'undefined' && global && global.document) {\n    for (var i=0; i<redirectURIs.length; i++) {\n      // TODO: remove restriction on URL pattern match.\n      if ((redirectURIs[i].indexOf('http://') === 0 ||\n          redirectURIs[i].indexOf('https://') === 0) &&\n          redirectURIs[i].indexOf('oauth-relay.html') > 0) {\n        continuation({\n          redirect: redirectURIs[i],\n          state: oAuthRedirectId + Math.random()\n        });\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * oAuth client-side flow - launch the provided URL\n * This must be called after initiateOAuth with the returned state object\n *\n * @method launchAuthFlow\n * @param {String} authUrl - The URL that initiates the auth flow.\n * @param {Object.<string, string>} stateObj - The return value from initiateOAuth\n * @param {Boolean} interactive - Whether to launch an interactive flow\n * @param {Function} continuation - Function to call when complete\n *    Expected to see a String value that is the response Url containing the access token\n */\nRemotePageAuth.prototype.launchAuthFlow = function(authUrl, stateObj, interactive, continuation) {\n  \"use strict\";\n  var frame = global.document.createElement('iframe');\n  frame.src = stateObj.redirect;\n  frame.style.display = 'none';\n\n  global.document.body.appendChild(frame);\n  frame.addEventListener('load', function () {\n    this.listeners[stateObj.state] = continuation;\n    window.open(authUrl);\n\n    frame.contentWindow.postMessage(stateObj.state, '*');\n  }.bind(this));\n\n  var hasCredentials = false;\n  window.addEventListener('message', function (frame, msg) {\n    if (msg.data && msg.data.key && msg.data.url && this.listeners[msg.data.key]) {\n      hasCredentials = true;\n      this.listeners[msg.data.key](msg.data.url);\n      delete this.listeners[msg.data.key];\n      try {\n        document.body.removeChild(frame);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }.bind(this, frame), false);\n\n  if (interactive === false) {\n    setTimeout(function() {\n      if (hasCredentials === false) {\n        continuation(undefined, 'Error launching auth flow');\n        delete this.listeners[stateObj.state];\n        try {\n          document.body.removeChild(frame);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    }.bind(this), TIMEOUT);\n  }\n};\n\n/**\n * If we have a local domain, and freedom.js is loaded at startup, we can use\n * the local page as a redirect URI.\n */\nmodule.exports = RemotePageAuth;\n","/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\n/**\n * The API registry for freedom.js.  Used to look up requested APIs,\n * and provides a bridge for core APIs to act like normal APIs.\n * @Class API\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Api = function(debug) {\n  this.debug = debug;\n  this.apis = {};\n  this.providers = {};\n  this.waiters = {};\n};\n\n/**\n * Get an API.\n * @method get\n * @param {String} api The API name to get.\n * @returns {{name:String, definition:API}} The API if registered.\n */\nApi.prototype.get = function(api) {\n  if (!this.apis[api]) {\n    return false;\n  }\n  return {\n    name: api,\n    definition: this.apis[api]\n  };\n};\n\n/**\n * Set an API to a definition.\n * @method set\n * @param {String} name The API name.\n * @param {API} definition The JSON object defining the API.\n */\nApi.prototype.set = function(name, definition) {\n  this.apis[name] = definition;\n};\n\n/**\n * Register a core API provider.\n * @method register\n * @param {String} name the API name.\n * @param {Function} constructor the function to create a provider for the API.\n * @param {String?} style The style the provider is written in. Valid styles\n *   are documented in fdom.port.Provider.prototype.getInterface. Defaults to\n *   provideAsynchronous\n * @param {Object?} flags Prefixed arguments needed by the core provider.\n *   valid keys are 'module', 'provider', and 'config'.\n */\nApi.prototype.register = function(name, constructor, style, flags) {\n  var i,\n    args;\n\n  this.providers[name] = {\n    constructor: constructor,\n    style: style || 'provideAsynchronous',\n    flags: flags || {}\n  };\n\n  if (this.waiters[name]) {\n    for (i = 0; i < this.waiters[name].length; i += 1) {\n      args = {};\n      if (flags.module) {\n        args.module = this.waiters[name][i].from;\n      }\n      if (flags.config) {\n        args.config = this.waiters[name][i].from.config;\n      }\n      this.waiters[name][i].resolve({\n        args: args,\n        inst: constructor.bind({}, args)\n      });\n    }\n    delete this.waiters[name];\n  }\n};\n\n/**\n * Get a core API connected to a given FreeDOM module.\n * @method getCore\n * @param {String} name the API to retrieve.\n * @param {Module} from The instantiating App.\n * @returns {Promise} A promise of a fdom.App look-alike (and argument object),\n * matching a local API definition.\n */\nApi.prototype.getCore = function(name, from) {\n  return new PromiseCompat(function(resolve, reject) {\n    if (this.apis[name]) {\n      if (this.providers[name]) {\n        var args = {};\n        if (this.providers[name].flags.module) {\n          args.module = from;\n        }\n        if (this.providers[name].flags.config) {\n          args.config = from.config;\n        }\n        resolve({\n          args: args,\n          inst: this.providers[name].constructor.bind({}, args)\n        });\n      } else {\n        if (!this.waiters[name]) {\n          this.waiters[name] = [];\n        }\n        this.waiters[name].push({\n          resolve: resolve,\n          reject: reject,\n          from: from\n        });\n      }\n    } else {\n      this.debug.warn('Api.getCore asked for unknown core: ' + name);\n      reject(null);\n    }\n  }.bind(this));\n};\n\n/**\n * Configure a {Provider} to provide a named core api on behalf of a\n * given port.\n * @param {String} name The name of the provider\n * @param {Provider} provider The provider that will provide the named api\n * @param {Module} from The module requesting the core provider.\n */\nApi.prototype.provideCore = function (name, provider, from) {\n  return this.getCore(name, from).then(function (core) {\n    var flags = this.providers[name].flags,\n      iface = provider.getProxyInterface();\n    if (flags.provider) {\n      core.args.provider = iface;\n    }\n    iface()[this.providers[name].style](core.inst);\n  }.bind(this), function (err) {\n    this.debug.error('Could not provide core: ', err);\n  }.bind(this));\n};\n\n/**\n * Shutdown the API registry, and reject any pending waiters.\n */\nApi.prototype.cleanup = function () {\n  var prop,\n    doReject = function (waiter) {\n      waiter.reject();\n    };\n  for (prop in this.waiters) {\n    if (this.waiters.hasOwnProperty(prop)) {\n      this.waiters[prop].forEach(doReject);\n    }\n  }\n  delete this.waiters;\n};\n\n/**\n * Defines the apis module and provider registry.\n */\nmodule.exports = Api;\n","/*jslint indent:2,node:true */\n\nvar Bundle = function () {\n  'use strict';\n  this.interfaces = require('../dist/bundle.compiled');\n};\n\n/**\n * Populate an API registry with provided providers, and with known API\n * definitions.\n * @static\n * @method register\n * @param {{name: string, provider: Function, style?: string}[]} providers\n *   The core providers made available to this freedom.js instance.\n * @param {Api} registry The API registry to populate.\n */\nexports.register = function (providers, registry) {\n  'use strict';\n  var bundle = new Bundle();\n  bundle.interfaces.forEach(function (api) {\n    if (api && api.name && api.api) {\n      registry.set(api.name, api.api);\n    }\n  });\n\n  providers.forEach(function (provider) {\n    if (provider.name) {\n      registry.register(provider.name,\n                        provider.provider,\n                        provider.style,\n                        provider.flags);\n    }\n  });\n};\n","/*globals Blob, ArrayBuffer, DataView */\n/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable api.\n * @class Consumer\n * @implements Port\n * @uses handleEvents\n * @param {Object} interfaceCls The api interface exposed by this consumer.\n * @param {Debug} debug The debugger to use for logging.\n * @constructor\n */\nvar Consumer = function (interfaceCls, debug) {\n  this.id = Consumer.nextId();\n  this.interfaceCls = interfaceCls;\n  this.debug = debug;\n  util.handleEvents(this);\n\n  this.ifaces = {};\n  this.closeHandlers = {};\n  this.errorHandlers = {};\n  this.emits = {};\n};\n\n/**\n * Receive incoming messages for this consumer.\n * @method onMessage\n * @param {String} source The source of the message.\n * @param {Object} message The received message.\n */\nConsumer.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.emitChannel = message.channel;\n    this.emit(this.emitChannel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    delete this.controlChannel;\n    this.doClose();\n  } else {\n    if (!this.emitChannel && message.channel) {\n      this.emitChannel = message.channel;\n      this.emit('start');\n      return;\n    }\n    if (message.type === 'close' && message.to) {\n      this.teardown(message.to);\n      return;\n    }\n    if (message.type === 'error') {\n      this.error(message.to, message.message);\n      return;\n    }\n    if (message.to) {\n      if (this.emits[message.to]) {\n        this.emits[message.to]('message', message.message);\n      } else {\n        this.debug.warn('Could not deliver message, no such interface: ' + message.to);\n      }\n    } else {\n      var msg = message.message;\n      util.eachProp(this.emits, function (iface) {\n        iface('message', message.message);\n      });\n    }\n  }\n};\n\n/**\n * Create a consumer.Interface associated with this consumer.\n * An interface is returned, which is supplied with important control of the\n * api via constructor arguments: (bound below in getInterfaceConstructor)\n *\n * onMsg: function(binder) sets the function to call when messages for this\n *    interface arrive on the channel,\n * emit: function(msg) allows this interface to emit messages,\n * id: string is the Identifier for this interface.\n * @method getInterface\n */\nConsumer.prototype.getInterface = function () {\n  var Iface = this.getInterfaceConstructor(),\n    args = Array.prototype.slice.call(arguments, 0);\n  if (args.length) {\n    Iface = Iface.bind.apply(Iface, [Iface].concat(args));\n  }\n  return new Iface();\n};\n\n/**\n * Attach an 'onEvent' listener to an interface, allowing external consumers\n * to either listen to channel state, or register callbacks on lifetime events\n * of individual instances of the interface.\n * @method getListener\n * @parma {String} name The event to listen to.\n * @private\n */\nConsumer.prototype.getListener = function (name) {\n  return function (instance, handler) {\n    // Listen to the channel directly.\n    if (typeof instance === 'function' && handler === undefined) {\n      this.once(name, instance);\n      return;\n    }\n\n    // Listen to a specific instance.\n    var handlers = name + 'Handlers';\n    util.eachProp(this.ifaces, function (candidate, id) {\n      if (candidate === instance) {\n        if (this[handlers][id]) {\n          this[handlers][id].push(handler);\n        } else {\n          this[handlers][id] = [handler];\n        }\n        return true;\n      }\n    }.bind(this));\n  }.bind(this);\n};\n\n/**\n * Create a function that can be used to get interfaces from this api consumer\n * from a user-visible point.\n * @method getProxyInterface\n */\nConsumer.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    if (args.length > 0) {\n      return p.getInterface.apply(p, args);\n    } else {\n      return p.getInterface();\n    }\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (candidate, id) {\n        if (candidate === iface) {\n          this.teardown(id);\n          this.emit(this.emitChannel, {\n            type: 'close',\n            to: id\n          });\n          return true;\n        }\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.doClose();\n    }\n  }.bind(this);\n\n  func.onClose = this.getListener('close');\n  func.onError = this.getListener('error');\n\n  return func;\n};\n\n/**\n * Provides a bound class for creating a consumer.Interface associated\n * with this api. This partial level of construction can be used\n * to allow the consumer to be used as a provider for another API.\n * @method getInterfaceConstructor\n * @private\n */\nConsumer.prototype.getInterfaceConstructor = function () {\n  var id = Consumer.nextId();\n  return this.interfaceCls.bind(\n    {},\n    function (id, obj, binder) {\n      this.ifaces[id] = obj;\n      this.emits[id] = binder;\n    }.bind(this, id),\n    this.doEmit.bind(this, id),\n    this.debug\n  );\n};\n\n/**\n * Emit a message on the channel once setup is complete.\n * @method doEmit\n * @private\n * @param {String} to The ID of the flow sending the message.\n * @param {Object} msg The message to emit\n * @param {Boolean} all Send message to all recipients.\n */\nConsumer.prototype.doEmit = function (to, msg, all) {\n  if (all) {\n    to = false;\n  }\n  if (this.emitChannel) {\n    this.emit(this.emitChannel, {to: to, type: 'message', message: msg});\n  } else {\n    this.once('start', this.doEmit.bind(this, to, msg));\n  }\n};\n\n/**\n * Teardown a single interface of this api.\n * @method teardown\n * @param {String} id The id of the interface to tear down.\n */\nConsumer.prototype.teardown = function (id) {\n  if (this.emits[id]) {\n    this.emits[id]('close');\n  }\n  delete this.emits[id];\n  if (this.closeHandlers[id]) {\n    util.eachProp(this.closeHandlers[id], function (prop) {\n      prop();\n    });\n  }\n  delete this.ifaces[id];\n  delete this.closeHandlers[id];\n  delete this.errorHandlers[id];\n};\n\n/**\n * Handle a message error reported to this api.\n * @method error\n * @param {String?} id The id of the interface where the error occured.\n * @param {Object} message The message which failed, if relevant.\n */\nConsumer.prototype.error = function (id, message) {\n  if (id && this.errorHandlers[id]) {\n    util.eachProp(this.errorHandlers[id], function (prop) {\n      prop(message);\n    });\n  } else if (!id) {\n    this.emit('error', message);\n  }\n};\n\n\n/**\n * Close / teardown the flow this api terminates.\n * @method doClose\n */\nConsumer.prototype.doClose = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Channel Closing',\n      request: 'close'\n    });\n  }\n\n  util.eachProp(this.emits, function (emit, id) {\n    this.teardown(id);\n  }.bind(this));\n\n  this.emit('close');\n  this.off();\n\n  this.emitChannel = null;\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return The description of this port.\n */\nConsumer.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Consumer \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Consumer]\";\n  }\n};\n\n/**\n * Get the next ID for an api channel.\n * @method nextId\n * @static\n * @private\n */\nConsumer.nextId = function () {\n  if (!Consumer.id) {\n    Consumer.id = 1;\n  }\n  return (Consumer.id += 1);\n};\n\n/**\n * Convert a structured data structure into a message stream conforming to\n * a template and an array of binary data elements.\n * @static\n * @method messageToPortable\n * @param {Object} template The template to conform to\n * @param {Object} value The instance of the data structure to confrom\n * @param {Debug} debug A debugger for errors.\n * @return {{text: Object, binary: Array}} Separated data streams.\n */\nConsumer.messageToPortable = function (template, value, debug) {\n  var externals = [],\n    message = Consumer.conform(template, value, externals, true, debug);\n  return {\n    text: message,\n    binary: externals\n  };\n};\n\n/**\n * Convert Structured Data streams into a data structure conforming to a\n * template.\n * @static\n * @method portableToMessage\n * @param {Object} template The template to conform to\n * @param {{text: Object, binary: Array}} streams The streams to conform\n * @param {Debug} debug A debugger for errors.\n * @return {Object} The data structure matching the template.\n */\nConsumer.portableToMessage = function (template, streams, debug) {\n  return Consumer.conform(template, streams.text, streams.binary, false, debug);\n};\n\n/**\n * Force a collection of values to look like the types and length of an API\n * template.\n * @static\n * @method conform\n * @param {Object} template The template to conform to\n * @param {Object} from The value to conform\n * @param {Array} externals Listing of binary elements in the template\n * @param {Boolean} Whether to to separate or combine streams.\n * @aparam {Debug} debug A debugger for errors.\n */\nConsumer.conform = function (template, from, externals, separate, debug) {\n  /* jshint -W086 */\n  if (typeof (from) === 'function' && template !== 'proxy') {\n    //from = undefined;\n    //throw \"Trying to conform a function\";\n    debug.error(\"Message discarded as functions can't cross modules!\");\n    return undefined;\n  } else if (typeof (from) === 'undefined') {\n    return undefined;\n  } else if (from === null) {\n    return null;\n  } else if (template === undefined) {\n    debug.error(\"Message discarded for not matching declared type!\", from);\n    return undefined;\n  }\n\n  switch (template) {\n  case 'string':\n    return String('') + from;\n  case 'number':\n    return Number(1) * from;\n  case 'boolean':\n    return Boolean(from === true);\n  case 'object':\n    // TODO(willscott): Allow removal if sandboxing enforces this.\n    if (typeof from === 'undefined') {\n      return undefined;\n    } else {\n      return JSON.parse(JSON.stringify(from));\n    }\n  case 'blob':\n    if (separate) {\n      if (from instanceof Blob) {\n        externals.push(from);\n        return externals.length - 1;\n      } else {\n        debug.error('conform expecting Blob, but saw ' + (typeof from));\n        externals.push(new Blob([]));\n        return externals.length - 1;\n      }\n    } else {\n      return externals[from];\n    }\n  case 'buffer':\n    if (separate) {\n      externals.push(Consumer.makeArrayBuffer(from, debug));\n      return externals.length - 1;\n    } else {\n      return Consumer.makeArrayBuffer(externals[from], debug);\n    }\n  case 'proxy':\n    return from;\n  }\n  var val, i;\n  if (Array.isArray(template) && from !== undefined) {\n    val = [];\n    i = 0;\n    if (template.length === 2 && template[0] === 'array') {\n      //console.log(\"template is array, value is \" + JSON.stringify(value));\n      for (i = 0; i < from.length; i += 1) {\n        val.push(Consumer.conform(template[1], from[i], externals,\n                                  separate, debug));\n      }\n    } else {\n      for (i = 0; i < template.length; i += 1) {\n        if (from[i] !== undefined) {\n          val.push(Consumer.conform(template[i], from[i], externals,\n                                    separate, debug));\n        } else {\n          val.push(undefined);\n        }\n      }\n    }\n    return val;\n  } else if (typeof template === 'object' && from !== undefined) {\n    val = {};\n    util.eachProp(template, function (prop, name) {\n      if (from[name] !== undefined) {\n        val[name] = Consumer.conform(prop, from[name], externals, separate,\n                                     debug);\n      }\n    });\n    return val;\n  }\n  debug.error('Unknown template provided: ' + template);\n};\n\n/**\n * Make a thing into an Array Buffer\n * @static\n * @method makeArrayBuffer\n * @param {Object} thing\n * @param {Debug} debug A debugger in case of errors.\n * @return {ArrayBuffer} An Array Buffer\n */\nConsumer.makeArrayBuffer = function (thing, debug) {\n  if (!thing) {\n    return new ArrayBuffer(0);\n  }\n\n  if (thing instanceof ArrayBuffer) {\n    return thing;\n  } else if (thing.constructor.name === \"ArrayBuffer\" &&\n      typeof thing.prototype === \"undefined\") {\n    // Workaround for webkit origin ownership issue.\n    // https://github.com/UWNetworksLab/freedom/issues/28\n    return new DataView(thing).buffer;\n  } else {\n    debug.error('expecting ArrayBuffer, but saw ' +\n        (typeof thing) + ': ' + JSON.stringify(thing));\n    return new ArrayBuffer(0);\n  }\n};\n\n/**\n * Recursively traverse a [nested] object and freeze its keys from being\n * writable. Note, the result can have new keys added to it, but existing ones\n * cannot be  overwritten. Doesn't do anything for arrays or other collections.\n *\n * @method recursiveFreezeObject\n * @static\n * @param {Object} obj - object to be frozen\n * @return {Object} obj\n **/\nConsumer.recursiveFreezeObject = function (obj) {\n  var k, ret = {};\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      Object.defineProperty(ret, k, {\n        value: Consumer.recursiveFreezeObject(obj[k]),\n        writable: false,\n        enumerable: true\n      });\n    }\n  }\n  return ret;\n};\n\nmodule.exports = Consumer;\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A freedom entry point for debugging.\n * @uses handleEvents\n * @implements Port\n * @constructor\n */\nvar Debug = function (logger) {\n  this.id = 'debug';\n  this.emitChannel = false;\n  this.config = false;\n  util.handleEvents(this);\n};\n\n/**\n * The supported log levels for debugging.\n * @static\n */\nDebug.LEVELS = ['debug', 'info', 'log', 'warn', 'error'];\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the textual description.\n */\nDebug.prototype.toString = function () {\n  return '[Console]';\n};\n\n/**\n * Register a logger for outputting debugging messages.\n * @method setLogger\n * @param {Console} logger The logger to register\n */\nDebug.prototype.setLogger = function (logger) {\n  if (this.logger) {\n    this.info('Replacing Logger.');\n  }\n  this.logger = logger;\n  this.emit('logger');\n};\n\n/**\n * Handler for receiving messages sent to the debug port.\n * These messages are used to retreive config for exposing console.\n * @method onMessage\n * @param {String} source the source identifier for the message.\n * @param {Object} message the received message.\n */\nDebug.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.channel && !this.emitChannel) {\n    this.emitChannel = message.channel;\n    this.config = message.config;\n    if (!this.config.global.console) {\n      if (typeof console !== 'undefined') {\n        this.config.global.console = console;\n      } else {\n        this.config.global.console = this.getLogger('Console');\n      }\n    }\n    this.emit('ready');\n  }\n};\n\n/**\n * Dispatch a debug message with arbitrary severity.\n * All debug messages are routed through the manager, to allow for delegation.\n * @method format\n * @param {String} severity the severity of the message.\n * @param {String} source The location of message.\n * @param {String[]} args The contents of the message.\n * @private\n */\nDebug.prototype.format = function (severity, source, args) {\n  var i, alist = [], argarr;\n  if (typeof args === \"string\" && source) {\n    try {\n      argarr = JSON.parse(args);\n      if (argarr instanceof Array) {\n        args = argarr;\n      }\n    } catch (e) {\n      // pass.\n    }\n  }\n\n  if (typeof args === \"string\") {\n    alist.push(args);\n  } else {\n    for (i = 0; i < args.length; i += 1) {\n      alist.push(args[i]);\n    }\n  }\n  if (!this.emitChannel) {\n    this.on('ready', this.format.bind(this, severity, source, alist));\n    return;\n  }\n  this.emit(this.emitChannel, {\n    severity: severity,\n    source: source,\n    quiet: true,\n    request: 'debug',\n    msg: JSON.stringify(alist)\n  });\n};\n\n/**\n * Print received messages on the console.\n * This is called by the manager in response to an emission from format.\n * @method print\n * @param {Object} message The message emitted by {@see format} to print.\n */\nDebug.prototype.print = function (message) {\n  if (!this.logger) {\n    this.once('logger', this.print.bind(this, message));\n    return;\n  }\n\n  var args, arr = [], i = 0;\n  args = JSON.parse(message.msg);\n  if (typeof args === \"string\") {\n    arr.push(args);\n  } else {\n    while (args[i] !== undefined) {\n      arr.push(args[i]);\n      i += 1;\n    }\n  }\n  this.logger[message.severity].call(this.logger, message.source, arr, function () {});\n};\n\n/**\n * Print a log message to the console.\n * @method log\n */\nDebug.prototype.log = function () {\n  this.format('log', undefined, arguments);\n};\n\n/**\n * Print an info message to the console.\n * @method log\n */\nDebug.prototype.info = function () {\n  this.format('info', undefined, arguments);\n};\n\n/**\n * Print a debug message to the console.\n * @method log\n */\nDebug.prototype.debug = function () {\n  this.format('debug', undefined, arguments);\n};\n\n/**\n * Print a warning message to the console.\n * @method warn\n */\nDebug.prototype.warn = function () {\n  this.format('warn', undefined, arguments);\n};\n\n/**\n * Print an error message to the console.\n * @method error\n */\nDebug.prototype.error = function () {\n  this.format('error', undefined, arguments);\n};\n\n/**\n * Get a logger that logs messages prefixed by a given name.\n * @method getLogger\n * @param {String} name The prefix for logged messages.\n * @returns {Console} A console-like object.\n */\nDebug.prototype.getLogger = function (name) {\n  var log = function (severity, source) {\n    var args = Array.prototype.splice.call(arguments, 2);\n    this.format(severity, source, args);\n  },\n    logger = {\n      freedom: true\n    };\n  Debug.LEVELS.forEach(function (level) {\n    logger[level] = log.bind(this, level, name);\n  }.bind(this));\n  return logger;\n};\n\n/**\n * Create a synchronous 'getLogger' method that binds around an asynchronous\n * logger by creating a buffer until the asynchronous logger is resolved.\n * @see {ModuleInternal.loadLinks} for where this method is bound to the created\n *     external interface.\n * @method getLoggingShim\n * @param {Function} asyncMethod The wrapper to 'getLogger'\n */\nDebug.prototype.getLoggingShim = function (asyncMethod) {\n  return function getLogggerSync(name) {\n    var toResolve = asyncMethod(name),\n      buffer = [],\n      methods = Debug.LEVELS,\n      backing = null,\n      ret = {};\n    toResolve.then(function (logger) {\n      backing = logger;\n      buffer.forEach(function (item) {\n        backing[item[0]].apply(backing, item[1]);\n      });\n    });\n    methods.forEach(function (mthd) {\n      ret[mthd] = function() {\n        var args = Array.prototype.splice.call(arguments, 0);\n        if (backing) {\n          backing[this].apply(backing, args);\n        } else {\n          buffer.push([this, args]);\n        }\n      }.bind(mthd);\n    });\n    return ret;\n  };\n};\n\nmodule.exports = Debug;\n","/*jslint indent:2,node:true */\r\nvar PromiseCompat = require('es6-promise').Promise;\r\n\r\nvar Api = require('./api');\r\nvar Debug = require('./debug');\r\nvar Hub = require('./hub');\r\nvar Manager = require('./manager');\r\nvar Policy = require('./policy');\r\nvar ProxyBinder = require('./proxybinder');\r\nvar Resource = require('./resource');\r\nvar util = require('./util');\r\nvar Bundle = require('./bundle');\r\n\r\nvar freedomGlobal;\r\nvar getGlobal = function () {\r\n  'use strict';\r\n  \r\n  // Node.js\r\n  if (typeof global !== 'undefined' && global.prototype === undefined) {\r\n    freedomGlobal = global;\r\n  // Browsers\r\n  } else {\r\n    setTimeout(function () {\r\n      freedomGlobal = this;\r\n    }, 0);\r\n  }\r\n};\r\ngetGlobal();\r\n\r\n/**\r\n * Create a new freedom context.\r\n * @param {Object} context Information about the local context.\r\n * @see {util/workerEntry.js}\r\n * @param {String} manifest The manifest to load.\r\n * @param {Object} config Configuration keys set by the user.\r\n * @returns {Promise} A promise for the module defined in the manifest.\r\n */\r\nvar setup = function (context, manifest, config) {\r\n  'use strict';\r\n  var debug = new Debug(),\r\n    hub = new Hub(debug),\r\n    resource = new Resource(debug),\r\n    api = new Api(debug),\r\n    manager = new Manager(hub, resource, api),\r\n    binder = new ProxyBinder(manager),\r\n    policy,\r\n    site_cfg = {\r\n      'debug': 'log',\r\n      'manifest': manifest,\r\n      'moduleContext': (!context || typeof (context.isModule) === \"undefined\") ?\r\n          util.isModuleContext() :\r\n          context.isModule\r\n    },\r\n    link,\r\n    Port,\r\n    cleanup = function () {\r\n      api.cleanup();\r\n      manager.destroy();\r\n    };\r\n\r\n  if (config) {\r\n    util.mixin(site_cfg, config, true);\r\n  }\r\n  site_cfg.global = freedomGlobal;\r\n  if (context) {\r\n    util.mixin(site_cfg, context, true);\r\n  }\r\n\r\n  // Register user-supplied extensions.\r\n  // For example the 'core.oauth' provider defines a register function,\r\n  // which enables site_cfg.oauth to be registered with it.\r\n  context.providers.forEach(function (provider) {\r\n    var name;\r\n    if (provider.name.indexOf('core.') === 0 &&\r\n        typeof provider.register === 'function') {\r\n      name = provider.name.substr(5);\r\n      // Invert priority and prefer user config over local context for these.\r\n      if (config && config[name]) {\r\n        provider.register(config[name]);\r\n      } else if (site_cfg[name]) {\r\n        provider.register(site_cfg[name]);\r\n      } else {\r\n        provider.register(undefined);\r\n      }\r\n    }\r\n  });\r\n  \r\n  Bundle.register(context.providers, api);\r\n  resource.register(context.resolvers || []);\r\n\r\n  return new PromiseCompat(function (resolve, reject) {\r\n    if (site_cfg.moduleContext) {\r\n      Port = site_cfg.portType;\r\n      link = new Port('Outbound', resource);\r\n      manager.setup(link);\r\n\r\n      // Delay debug messages until delegation to the parent context is setup.\r\n      manager.once('delegate', manager.setup.bind(manager, debug));\r\n    } else {\r\n      manager.setup(debug);\r\n      policy = new Policy(manager, resource, site_cfg);\r\n\r\n      // Define how to load a root module.\r\n      var fallbackLogger, getIface;\r\n      fallbackLogger = function (message) {\r\n        api.getCore('core.console', {\r\n          config: site_cfg\r\n        }).then(function (provider) {\r\n          var logger = new provider.inst();\r\n          debug.setLogger(logger);\r\n          if (message) {\r\n            debug.error(message);\r\n          }\r\n        });\r\n      };\r\n      getIface = function (manifest) {\r\n        return resource.get(site_cfg.location, manifest).then(\r\n          function (canonical_manifest) {\r\n            return policy.get([], canonical_manifest);\r\n          }\r\n        ).then(function (instance) {\r\n          manager.setup(instance);\r\n          return binder.bindDefault(instance, api, instance.manifest);\r\n        });\r\n      };\r\n\r\n      // Load appropriate Logger.\r\n      if (site_cfg.logger) {\r\n        getIface(site_cfg.logger).then(function (iface) {\r\n          if (iface.external.api !== 'console') {\r\n            fallbackLogger(\"Unwilling to use logger with unknown API:\",\r\n              iface.external.api);\r\n          } else {\r\n            debug.setLogger(iface.external());\r\n          }\r\n        }, fallbackLogger);\r\n      } else {\r\n        fallbackLogger();\r\n      }\r\n\r\n      // Load root module.\r\n      getIface(site_cfg.manifest).then(function (iface) {\r\n        iface.port.once('close', cleanup);\r\n        return iface.external;\r\n      }, function (err) {\r\n        debug.error('Failed to retrieve manifest: ' + err);\r\n        throw err;\r\n      }).then(resolve, reject);\r\n    }\r\n\r\n    hub.emit('config', site_cfg);\r\n  });\r\n};\r\n\r\nmodule.exports = setup;\r\n","/*jslint indent:2,sloppy:true,node:true */\r\nvar util = require('./util');\r\n\r\n/**\r\n * Defines fdom.Hub, the core message hub between freedom modules.\r\n * Incomming messages from apps are sent to hub.onMessage()\r\n * @class Hub\r\n * @param {Debug} debug Logger for debugging.\r\n * @constructor\r\n */\r\nvar Hub = function (debug) {\r\n  this.debug = debug;\r\n  this.config = {};\r\n  this.apps = {};\r\n  this.routes = {};\r\n\r\n  util.handleEvents(this);\r\n  this.on('config', function (config) {\r\n    util.mixin(this.config, config);\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * Handle an incoming message from a freedom app.\r\n * @method onMessage\r\n * @param {String} source The identifiying source of the message.\r\n * @param {Object} message The sent message.\r\n */\r\nHub.prototype.onMessage = function (source, message) {\r\n  var destination = this.routes[source], type;\r\n  if (!destination || !destination.app) {\r\n    this.debug.warn(\"Message dropped from unregistered source \" + source);\r\n    return;\r\n  }\r\n\r\n  if (!this.apps[destination.app]) {\r\n    this.debug.warn(\"Message dropped to destination \" + destination.app);\r\n    return;\r\n  }\r\n\r\n  // The firehose tracing all internal freedom.js messages.\r\n  if (!message.quiet && !destination.quiet && this.config && this.config.trace) {\r\n    type = message.type;\r\n    if (message.type === 'message' && message.message &&\r\n        message.message.action === 'method') {\r\n      type = 'method.' + message.message.type;\r\n    } else if (message.type === 'method' && message.message &&\r\n        message.message.type === 'method') {\r\n      type = 'return.' + message.message.name;\r\n    } else if (message.type === 'message' && message.message &&\r\n        message.message.type === 'event') {\r\n      type = 'event.' + message.message.name;\r\n    }\r\n    this.debug.debug(this.apps[destination.source].toString() +\r\n        \" -\" + type + \"-> \" +\r\n        this.apps[destination.app].toString() + \".\" + destination.flow);\r\n  }\r\n\r\n  this.apps[destination.app].onMessage(destination.flow, message);\r\n};\r\n\r\n/**\r\n * Get the local destination port of a flow.\r\n * @method getDestination\r\n * @param {String} source The flow to retrieve.\r\n * @return {Port} The destination port.\r\n */\r\nHub.prototype.getDestination = function (source) {\r\n  var destination = this.routes[source];\r\n  if (!destination) {\r\n    return null;\r\n  }\r\n  return this.apps[destination.app];\r\n};\r\n\r\n/**\r\n * Get the local source port of a flow.\r\n * @method getSource\r\n * @param {Port} source The flow identifier to retrieve.\r\n * @return {Port} The source port.\r\n */\r\nHub.prototype.getSource = function (source) {\r\n  if (!source) {\r\n    return false;\r\n  }\r\n  if (!this.apps[source.id]) {\r\n    this.debug.warn(\"No registered source '\" + source.id + \"'\");\r\n    return false;\r\n  }\r\n  return this.apps[source.id];\r\n};\r\n\r\n/**\r\n * Register a destination for messages with this hub.\r\n * @method register\r\n * @param {Port} app The Port to register.\r\n * @param {Boolean} [force] Whether to override an existing port.\r\n * @return {Boolean} Whether the app was registered.\r\n */\r\nHub.prototype.register = function (app, force) {\r\n  if (!this.apps[app.id] || force) {\r\n    this.apps[app.id] = app;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Deregister a destination for messages with the hub.\r\n * Note: does not remove associated routes. As such, deregistering will\r\n * prevent the installation of new routes, but will not distrupt existing\r\n * hub routes.\r\n * @method deregister\r\n * @param {Port} app The Port to deregister\r\n * @return {Boolean} Whether the app was deregistered.\r\n */\r\nHub.prototype.deregister = function (app) {\r\n  if (!this.apps[app.id]) {\r\n    return false;\r\n  }\r\n  delete this.apps[app.id];\r\n  return true;\r\n};\r\n\r\n/**\r\n * Install a new route in the hub.\r\n * @method install\r\n * @param {Port} source The source of the route.\r\n * @param {Port} destination The destination of the route.\r\n * @param {String} flow The flow where the destination will receive messages.\r\n * @param {Boolean} quiet Whether messages on this route should be suppressed.\r\n * @return {String} A routing source identifier for sending messages.\r\n */\r\nHub.prototype.install = function (source, destination, flow, quiet) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n  if (!destination) {\r\n    this.debug.warn(\"Unwilling to generate blackhole flow from \" + source.id);\r\n    return;\r\n  }\r\n\r\n  var route = this.generateRoute();\r\n  this.routes[route] = {\r\n    app: destination,\r\n    flow: flow,\r\n    source: source.id,\r\n    quiet: quiet\r\n  };\r\n  if (typeof source.on === 'function') {\r\n    source.on(route, this.onMessage.bind(this, route));\r\n  }\r\n\r\n  return route;\r\n};\r\n\r\n/**\r\n * Uninstall a hub route.\r\n * @method uninstall\r\n * @param {Port} source The source of the route.\r\n * @param {String} flow The route to uninstall.\r\n * @return {Boolean} Whether the route was able to be uninstalled.\r\n */\r\nHub.prototype.uninstall = function (source, flow) {\r\n  source = this.getSource(source);\r\n  if (!source) {\r\n    return;\r\n  }\r\n\r\n  var route = this.routes[flow];\r\n  if (!route) {\r\n    return false;\r\n  } else if (route.source !== source.id) {\r\n    this.debug.warn(\"Flow \" + flow + \" does not belong to port \" + source.id);\r\n    return false;\r\n  }\r\n\r\n  delete this.routes[flow];\r\n  if (typeof source.off === 'function') {\r\n    source.off(route);\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Remove all listeners and notify all connected destinations of their removal.\r\n * @method teardown\r\n */\r\nHub.prototype.teardown = function () {\r\n  util.eachProp(this.apps, function (source) {\r\n    if (typeof source.off === 'function') {\r\n      source.off();\r\n    }\r\n  });\r\n  this.apps = {};\r\n  this.routes = {};\r\n};\r\n\r\n/**\r\n * Generate a unique routing identifier.\r\n * @method generateRoute\r\n * @return {String} a routing source identifier.\r\n * @private\r\n */\r\nHub.prototype.generateRoute = function () {\r\n  return util.getId();\r\n};\r\n\r\nmodule.exports = Hub;\r\n","/*jslint indent:2, node:true, sloppy:true */\nvar util = require('./util');\n\n/**\n * A link connects two freedom hubs. This is an abstract class\n * providing common functionality of translating control channels,\n * and integrating config information.\n * @class Link\n * @implements Port\n * @constructor\n */\nvar Link = function (name, resource) {\n  this.id = 'Link' + Math.random();\n  this.name = name;\n  this.resource = resource;\n  this.config = {};\n  this.src = null;\n\n  util.handleEvents(this);\n  util.mixin(this, Link.prototype);\n};\n\n/**\n * Receive messages from the hub to this port.\n * Manages startup, and passes others to 'deliverMessage' implemented\n * in derived classes.\n * @method onMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nLink.prototype.onMessage = function (flow, message) {\n  if (flow === 'control' && !this.controlChannel) {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.start();\n    }\n  } else {\n    this.deliverMessage(flow, message);\n  }\n};\n\n/**\n * Register a handler to alert of errors on this port.\n * @method addErrorHandler\n * @param {Function} handler Method to call with errors.\n */\nLink.prototype.addErrorHandler = function (handler) {\n  this.onError = handler;\n};\n\n/**\n * Report an error on this link.\n * @method onerror\n * @param {Error} err The error that occurred.\n */\nLink.prototype.onError = function (err) {\n  //Filled in by addErrorHandler\n};\n\n/**\n * Emit messages to the the hub, mapping control channels.\n * @method emitMessage\n * @param {String} flow the flow to emit the message on.\n * @param {Object} messgae The message to emit.\n */\nLink.prototype.emitMessage = function (flow, message) {\n  if (flow === 'control' && this.controlChannel) {\n    flow = this.controlChannel;\n  }\n  this.emit(flow, message);\n};\n\nmodule.exports = Link;\n","/*globals Worker */\n/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar Link = require('../link');\n\n/**\n * A port providing message transport between two freedom contexts via Worker.\n * @class Worker\n * @extends Link\n * @uses handleEvents\n * @constructor\n */\nvar WorkerLink = function(id, resource) {\n  Link.call(this, id, resource);\n  if (id) {\n    this.id = id;\n  }\n};\n\n/**\n * Start this port by listening or creating a worker.\n * @method start\n * @private\n */\nWorkerLink.prototype.start = function() {\n  if (this.config.moduleContext) {\n    this.setupListener();\n  } else {\n    this.setupWorker();\n  }\n};\n\n/**\n * Stop this port by destroying the worker.\n * @method stop\n * @private\n */\nWorkerLink.prototype.stop = function() {\n  // Function is determined by setupListener or setupFrame as appropriate.\n};\n\n/**\n * Get the textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nWorkerLink.prototype.toString = function() {\n  return \"[Worker \" + this.id + \"]\";\n};\n\n/**\n * Set up a global listener to handle incoming messages to this\n * freedom.js context.\n * @method setupListener\n */\nWorkerLink.prototype.setupListener = function() {\n  var onMsg = function(msg) {\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this);\n  this.obj = this.config.global;\n  this.obj.addEventListener('message', onMsg, true);\n  this.stop = function() {\n    this.obj.removeEventListener('message', onMsg, true);\n    delete this.obj;\n  };\n  this.emit('started');\n  this.obj.postMessage(\"Ready For Messages\");\n};\n\n/**\n * Set up a worker with an isolated freedom.js context inside.\n * @method setupWorker\n */\nWorkerLink.prototype.setupWorker = function() {\n  var worker,\n    blob,\n    self = this;\n  worker = new Worker(this.config.source + '#' + this.id);\n\n  worker.addEventListener('error', function(err) {\n    this.onError(err);\n  }.bind(this), true);\n  worker.addEventListener('message', function(worker, msg) {\n    if (!this.obj) {\n      this.obj = worker;\n      this.emit('started');\n      return;\n    }\n    this.emitMessage(msg.data.flow, msg.data.message);\n  }.bind(this, worker), true);\n  this.stop = function() {\n    worker.terminate();\n    if (this.obj) {\n      delete this.obj;\n    }\n  };\n};\n\n/**\n * Receive messages from the hub to this port.\n * Received messages will be emitted from the other side of the port.\n * @method deliverMessage\n * @param {String} flow the channel/flow of the message.\n * @param {Object} message The Message.\n */\nWorkerLink.prototype.deliverMessage = function(flow, message) {\n  if (flow === 'control' && message.type === 'close' &&\n      message.channel === 'control') {\n    this.stop();\n  } else {\n    if (this.obj) {\n      this.obj.postMessage({\n        flow: flow,\n        message: message\n      });\n    } else {\n      this.once('started', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\nmodule.exports = WorkerLink;\n\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar ModuleInternal = require('./moduleinternal');\n\n/**\n * A freedom port which manages the control plane of of changing hub routes.\n * @class Manager\n * @implements Port\n * @param {Hub} hub The routing hub to control.\n * @param {Resource} resource The resource manager for the runtime.\n * @param {Api} api The API manager for the runtime.\n * @constructor\n */\nvar Manager = function (hub, resource, api) {\n  this.id = 'control';\n  this.config = {};\n  this.controlFlows = {};\n  this.dataFlows = {};\n  this.dataFlows[this.id] = [];\n  this.reverseFlowMap = {};\n\n  this.debug = hub.debug;\n  this.hub = hub;\n  this.resource = resource;\n  this.api = api;\n\n  this.delegate = null;\n  this.toDelegate = {};\n\n  this.hub.on('config', function (config) {\n    util.mixin(this.config, config);\n    this.emit('config');\n  }.bind(this));\n\n  util.handleEvents(this);\n  this.hub.register(this);\n};\n\n/**\n * Provide a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nManager.prototype.toString = function () {\n  return \"[Local Controller]\";\n};\n\n/**\n * Process messages sent to this port.\n * The manager, or 'control' destination handles several types of messages,\n * identified by the request property.  The actions are:\n * 1. debug. Prints the message to the console.\n * 2. link. Creates a link between the source and a provided destination port.\n * 3. environment. Instantiate a module environment defined in ModuleInternal.\n * 4. delegate. Routes a defined set of control messages to another location.\n * 5. resource. Registers the source as a resource resolver.\n * 6. core. Generates a core provider for the requester.\n * 7. close. Tears down routes involing the requesting port.\n * 8. unlink. Tears down a route from the requesting port.\n * @method onMessage\n * @param {String} flow The source identifier of the message.\n * @param {Object} message The received message.\n */\nManager.prototype.onMessage = function (flow, message) {\n  var reverseFlow = this.controlFlows[flow], origin;\n  if (!reverseFlow) {\n    this.debug.warn(\"Unknown message source: \" + flow);\n    return;\n  }\n  origin = this.hub.getDestination(reverseFlow);\n\n  if (this.delegate && reverseFlow !== this.delegate &&\n      this.toDelegate[flow]) {\n    // Ship off to the delegee\n    this.emit(this.delegate, {\n      type: 'Delegation',\n      request: 'handle',\n      quiet: true,\n      flow: flow,\n      message: message\n    });\n    return;\n  }\n\n  if (message.request === 'debug') {\n    this.debug.print(message);\n    return;\n  }\n\n  if (message.request === 'link') {\n    this.createLink(origin, message.name, message.to, message.overrideDest);\n  } else if (message.request === 'environment') {\n    this.createLink(origin, message.name, new ModuleInternal(this));\n  } else if (message.request === 'delegate') {\n    // Initate Delegation.\n    if (this.delegate === null) {\n      this.delegate = reverseFlow;\n    }\n    this.toDelegate[message.flow] = true;\n    this.emit('delegate');\n  } else if (message.request === 'resource') {\n    this.resource.addResolver(message.args[0]);\n    this.resource.addRetriever(message.service, message.args[1]);\n  } else if (message.request === 'core') {\n    if (this.core && reverseFlow === this.delegate) {\n      (new this.core()).onMessage(origin, message.message);\n      return;\n    }\n    this.getCore(function (to, core) {\n      this.hub.onMessage(to, {\n        type: 'core',\n        core: core\n      });\n    }.bind(this, reverseFlow));\n  } else if (message.request === 'close') {\n    this.destroy(origin);\n  } else if (message.request === 'unlink') {\n    this.removeLink(origin, message.to);\n  } else {\n    this.debug.warn(\"Unknown control request: \" + message.request);\n    this.debug.log(JSON.stringify(message));\n    return;\n  }\n};\n\n/**\n * Get the port messages will be routed to given its id.\n * @method getPort\n * @param {String} portId The ID of the port.\n * @returns {fdom.Port} The port with that ID.\n */\nManager.prototype.getPort = function (portId) {\n  return this.hub.getDestination(this.controlFlows[portId]);\n};\n\n/**\n * Set up a port with the hub.\n * @method setup\n * @param {Port} port The port to register.\n */\nManager.prototype.setup = function (port) {\n  if (!port.id) {\n    this.debug.warn(\"Refusing to setup unidentified port \");\n    return false;\n  }\n\n  if (this.controlFlows[port.id]) {\n    this.debug.warn(\"Refusing to re-initialize port \" + port.id);\n    return false;\n  }\n\n  if (!this.config.global) {\n    this.once('config', this.setup.bind(this, port));\n    return;\n  }\n\n  this.hub.register(port);\n  var flow = this.hub.install(this, port.id, \"control\"),\n    reverse = this.hub.install(port, this.id, port.id);\n  this.controlFlows[port.id] = flow;\n  this.dataFlows[port.id] = [reverse];\n  this.reverseFlowMap[flow] = reverse;\n  this.reverseFlowMap[reverse] = flow;\n\n  if (port.lineage) {\n    this.emit('moduleAdd', {id: port.id, lineage: port.lineage});\n  }\n\n  this.hub.onMessage(flow, {\n    type: 'setup',\n    channel: reverse,\n    config: this.config\n  });\n\n  return true;\n};\n\n/**\n * Tear down a port on the hub, or the full local hub.\n * @method destroy\n * @apram {Port?} port The port to unregister.\n */\nManager.prototype.destroy = function (port) {\n  if (!port) {\n    // Tear down everything!\n    util.eachProp(this.controlFlows, function (flow) {\n      this.hub.onMessage(flow, {\n        type: 'close'\n      });\n    }.bind(this));\n    this.hub.teardown();\n    return;\n  }\n\n  if (!port.id) {\n    this.debug.warn(\"Unable to tear down unidentified port\");\n    return false;\n  }\n\n  if (port.lineage) {\n    this.emit('moduleRemove', {id: port.id, lineage: port.lineage});\n  }\n\n  // Remove the port.\n  delete this.controlFlows[port.id];\n\n  // Remove associated links.\n  var i;\n  for (i = this.dataFlows[port.id].length - 1; i >= 0; i -= 1) {\n    this.removeLink(port, this.dataFlows[port.id][i]);\n  }\n\n  // Remove the port.\n  delete this.dataFlows[port.id];\n  this.hub.deregister(port);\n};\n\n/**\n * Create a link between two ports.  Links are created in both directions,\n * and a message with those capabilities is sent to the source port.\n * @method createLink\n * @param {Port} port The source port.\n * @param {String} name The flow for messages from destination to port.\n * @param {Port} destination The destination port.\n * @param {String} [destName] The flow name for messages to the destination.\n * @param {Boolean} [toDest] Tell the destination about the link.\n */\nManager.prototype.createLink = function (port, name, destination, destName,\n                                         toDest) {\n  if (!this.config.global) {\n    this.once('config',\n      this.createLink.bind(this, port, name, destination, destName));\n    return;\n  }\n\n  if (!this.controlFlows[port.id]) {\n    this.debug.warn('Unwilling to link from non-registered source.');\n    return;\n  }\n\n  if (!this.controlFlows[destination.id]) {\n    if (this.setup(destination) === false) {\n      this.debug.warn('Could not find or setup destination.');\n      return;\n    }\n  }\n  var quiet = destination.quiet || false,\n    outgoingName = destName || 'default',\n    outgoing = this.hub.install(port, destination.id, outgoingName, quiet),\n    reverse;\n\n  // Recover the port so that listeners are installed.\n  destination = this.hub.getDestination(outgoing);\n  reverse = this.hub.install(destination, port.id, name, quiet);\n\n  this.reverseFlowMap[outgoing] = reverse;\n  this.dataFlows[port.id].push(outgoing);\n  this.reverseFlowMap[reverse] = outgoing;\n  this.dataFlows[destination.id].push(reverse);\n\n  if (toDest) {\n    this.hub.onMessage(this.controlFlows[destination.id], {\n      type: 'createLink',\n      name: outgoingName,\n      channel: reverse,\n      reverse: outgoing\n    });\n  } else {\n    this.hub.onMessage(this.controlFlows[port.id], {\n      name: name,\n      type: 'createLink',\n      channel: outgoing,\n      reverse: reverse\n    });\n  }\n};\n\n/**\n * Remove a link between to ports. The reverse link will also be removed.\n * @method removeLink\n * @param {Port} port The source port.\n * @param {String} name The flow to be removed.\n */\nManager.prototype.removeLink = function (port, name) {\n  var reverse = this.hub.getDestination(name),\n    rflow = this.reverseFlowMap[name],\n    i;\n\n  if (!reverse || !rflow) {\n    this.debug.warn(\"Could not find metadata to remove flow: \" + name);\n    return;\n  }\n\n  if (this.hub.getDestination(rflow).id !== port.id) {\n    this.debug.warn(\"Source port does not own flow \" + name);\n    return;\n  }\n\n  // Notify ports that a channel is closing.\n  i = this.controlFlows[port.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: name\n    });\n  }\n  i = this.controlFlows[reverse.id];\n  if (i) {\n    this.hub.onMessage(i, {\n      type: 'close',\n      channel: rflow\n    });\n  }\n\n  // Uninstall the channel.\n  this.hub.uninstall(port, name);\n  this.hub.uninstall(reverse, rflow);\n\n  delete this.reverseFlowMap[name];\n  delete this.reverseFlowMap[rflow];\n  this.forgetFlow(reverse.id, rflow);\n  this.forgetFlow(port.id, name);\n};\n\n/**\n * Forget the flow from id with a given name.\n * @method forgetFlow\n * @private\n * @param {String} id The port ID of the source.\n * @param {String} name The flow name.\n */\nManager.prototype.forgetFlow = function (id, name) {\n  var i;\n  if (this.dataFlows[id]) {\n    for (i = 0; i < this.dataFlows[id].length; i += 1) {\n      if (this.dataFlows[id][i] === name) {\n        this.dataFlows[id].splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Get the core freedom.js API active on the current hub.\n * @method getCore\n * @private\n * @param {Function} cb Callback to fire with the core object.\n */\nManager.prototype.getCore = function (cb) {\n  if (this.core) {\n    cb(this.core);\n  } else {\n    this.api.getCore('core', this).then(function (core) {\n      this.core = core.inst;\n      cb(this.core);\n    }.bind(this), function () {\n      cb(undefined);\n    });\n  }\n};\n\nmodule.exports = Manager;\n","/*jslint indent:2,node:true,sloppy:true */\nvar util = require('./util');\nvar Provider = require('./provider');\n\n/**\n * The external Port face of a module on a hub.\n * @class Module\n * @extends Port\n * @param {String} manifestURL The manifest this module loads.\n * @param {String[]} creator The lineage of creation for this module.\n * @param {Policy} Policy The policy loader for dependencies.\n * @constructor\n */\nvar Module = function (manifestURL, manifest, creator, policy) {\n  this.api = policy.api;\n  this.policy = policy;\n  this.resource = policy.resource;\n  this.debug = policy.debug;\n\n  this.config = {};\n\n  this.id = manifestURL + Math.random();\n  this.manifestId = manifestURL;\n  this.manifest = manifest;\n  this.lineage = [this.manifestId].concat(creator);\n\n  this.quiet = this.manifest.quiet || false;\n\n  this.externalPortMap = {};\n  this.internalPortMap = {};\n  this.dependantChannels = [];\n  this.started = false;\n\n  util.handleEvents(this);\n};\n\n/**\n * Receive a message for the Module.\n * @method onMessage\n * @param {String} flow The origin of the message.\n * @param {Object} message The message received.\n */\nModule.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (message.type === 'setup') {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n      this.emit(this.controlChannel, {\n        type: 'Core Provider',\n        request: 'core'\n      });\n      this.start();\n      return;\n    } else if (message.type === 'createLink' && message.channel) {\n      this.debug.debug(this + 'got create link for ' + message.name);\n      this.externalPortMap[message.name] = message.channel;\n      if (this.internalPortMap[message.name] === undefined) {\n        this.internalPortMap[message.name] = false;\n      }\n      var msg = {\n        type: 'default channel announcement',\n        channel: message.reverse\n      };\n      if (this.manifest.dependencies &&\n          this.manifest.dependencies[message.name]) {\n        msg.api = this.manifest.dependencies[message.name].api;\n      }\n      this.emit(message.channel, msg);\n      return;\n    } else if (message.core) {\n      this.core = new message.core();\n      this.emit('core', message.core);\n      return;\n    } else if (message.type === 'close') {\n      // Closing channel.\n      if (!message.channel || message.channel === 'control') {\n        this.stop();\n      }\n      this.deregisterFlow(message.channel, false);\n    } else {\n      this.port.onMessage(flow, message);\n    }\n  } else {\n    if ((this.externalPortMap[flow] === false ||\n        !this.externalPortMap[flow]) && message.channel) {\n      this.debug.debug(this + 'handling channel announcement for ' + flow);\n      this.externalPortMap[flow] = message.channel;\n      if (this.internalPortMap[flow] === undefined) {\n        this.internalPortMap[flow] = false;\n\n        // New incoming connection attempts should get routed to modInternal.\n        if (this.manifest.provides && this.modInternal) {\n          this.port.onMessage(this.modInternal, {\n            type: 'Connection',\n            channel: flow,\n            api: message.api\n          });\n        } else if (this.manifest.provides) {\n          this.once('modInternal', function (flow, api) {\n            this.port.onMessage(this.modInternal, {\n              type: 'Connection',\n              channel: flow,\n              api: api\n            });\n          }.bind(this, flow, message.api));\n        // First connection retains legacy mapping as 'default'.\n        } else if (!this.externalPortMap['default'] && message.channel) {\n          this.externalPortMap['default'] = message.channel;\n          this.once('internalChannelReady', function (flow) {\n            this.internalPortMap[flow] = this.internalPortMap['default'];\n          }.bind(this, flow));\n        }\n      }\n      return;\n    } else if (!this.started) {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    } else {\n      if (this.internalPortMap[flow] === false) {\n        console.warn('waiting on internal channel for msg');\n        this.once('internalChannelReady', this.onMessage.bind(this, flow, message));\n      } else if (!this.internalPortMap[flow]) {\n        this.debug.error('Unexpected message from ' + flow);\n        return;\n      } else {\n        this.port.onMessage(this.internalPortMap[flow], message);\n      }\n    }\n  }\n};\n\n/**\n * Clean up after a flow which is no longer used / needed.\n * @method deregisterFLow\n * @param {String} flow The flow to remove mappings for.\n * @param {Boolean} internal If the flow name is the internal identifier.\n * @returns {Boolean} Whether the flow was successfully deregistered.\n * @private\n */\nModule.prototype.deregisterFlow = function (flow, internal) {\n  var key,\n    map = internal ? this.internalPortMap : this.externalPortMap;\n  // TODO: this is inefficient, but seems less confusing than a 3rd\n  // reverse lookup map.\n  for (key in map) {\n    if (map[key] === flow) {\n      if (internal) {\n        this.emit(this.controlChannel, {\n          type: 'Channel Teardown',\n          request: 'unlink',\n          to: this.externalPortMap[key]\n        });\n      } else if (this.port) {\n        this.port.onMessage('control', {\n          type: 'close',\n          channel: this.internalPortMap[key]\n        });\n      }\n      delete this.externalPortMap[key];\n      delete this.internalPortMap[key];\n\n      // When there are still non-dependant channels, keep running\n      for (key in this.externalPortMap) {\n        if (this.externalPortMap.hasOwnProperty(key)) {\n          if (this.dependantChannels.indexOf(key) < 0) {\n            return true;\n          }\n        }\n      }\n      // Otherwise shut down the module.\n      this.stop();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Attempt to start the module once the remote freedom context\n * exists.\n * @method start\n * @private\n */\nModule.prototype.start = function () {\n  var Port;\n  if (this.started || this.port) {\n    return false;\n  }\n  if (this.controlChannel) {\n    this.loadLinks();\n    Port = this.config.portType;\n    this.port = new Port(this.manifest.name, this.resource);\n    // Listen to all port messages.\n    this.port.on(this.emitMessage.bind(this));\n    this.port.addErrorHandler(function (err) {\n      this.debug.warn('Module Failed', err);\n      this.emit(this.controlChannel, {\n        request: 'close'\n      });\n    }.bind(this));\n    // Tell the local port to ask us for help.\n    this.port.onMessage('control', {\n      channel: 'control',\n      config: this.config\n    });\n\n    // Tell the remote location to delegate debugging.\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'debug'\n    });\n    this.port.onMessage('control', {\n      type: 'Redirect',\n      request: 'delegate',\n      flow: 'core'\n    });\n\n    // Tell the container to instantiate the counterpart to this external view.\n    this.port.onMessage('control', {\n      type: 'Environment Configuration',\n      request: 'environment',\n      name: 'ModInternal'\n    });\n  }\n};\n\n/**\n * Stop the module when it is no longer needed, and tear-down state.\n * @method stop\n * @private\n */\nModule.prototype.stop = function () {\n  if (!this.started) {\n    return;\n  }\n  this.emit('close');\n  if (this.port) {\n    this.port.off();\n    this.port.onMessage('control', {\n      type: 'close',\n      channel: 'control'\n    });\n    this.port.stop();\n    delete this.port;\n  }\n  delete this.policy;\n  this.started = false;\n};\n\n/**\n * Textual Description of the Port\n * @method toString\n * @return {String} The description of this Port.\n */\nModule.prototype.toString = function () {\n  return \"[Module \" + this.manifest.name + \"]\";\n};\n\n/**\n * Intercept messages as they arrive from the module,\n * mapping them between internal and external flow names.\n * @method emitMessage\n * @param {String} name The destination the module wants to send to.\n * @param {Object} message The message to send.\n * @private\n */\nModule.prototype.emitMessage = function (name, message) {\n  if (this.internalPortMap[name] === false && message.channel) {\n    this.internalPortMap[name] = message.channel;\n    this.emit('internalChannelReady');\n    return;\n  }\n  // Terminate debug redirection requested in start().\n  if (name === 'control') {\n    if (message.flow === 'debug' && message.message) {\n      this.debug.format(message.message.severity,\n          message.message.source || this.toString(),\n          message.message.msg);\n    } else if (message.flow === 'core' && message.message) {\n      if (!this.core) {\n        this.once('core', this.emitMessage.bind(this, name, message));\n        return;\n      }\n      if (message.message.type === 'register' ||\n          message.message.type === 'require') {\n        message.message.reply = this.port.onMessage.bind(this.port, 'control');\n        this.externalPortMap[message.message.id] = false;\n      }\n      this.core.onMessage(this, message.message);\n    } else if (message.name === 'ModInternal' && !this.modInternal) {\n      this.modInternal = message.channel;\n      this.port.onMessage(this.modInternal, {\n        type: 'Initialization',\n        id: this.manifestId,\n        appId: this.id,\n        manifest: this.manifest,\n        lineage: this.lineage,\n        channel: message.reverse\n      });\n      this.emit('modInternal');\n    } else if (message.type === 'createLink') {\n      this.internalPortMap[message.name] = message.channel;\n      this.port.onMessage(message.channel, {\n        type: 'channel announcement',\n        channel: message.reverse\n      });\n      this.emit('internalChannelReady');\n    } else if (message.type === 'close') {\n      this.deregisterFlow(message.channel, true);\n    }\n  } else if (name === 'ModInternal' && message.type === 'ready' && !this.started) {\n    this.started = true;\n    this.emit('start');\n  } else if (name === 'ModInternal' && message.type === 'resolve') {\n    this.resource.get(this.manifestId, message.data).then(function (id, data) {\n      this.port.onMessage(this.modInternal, {\n        type: 'resolve.response',\n        id: id,\n        data: data\n      });\n    }.bind(this, message.id), function () {\n      this.debug.warn('Error Resolving URL for Module.');\n    }.bind(this));\n  } else {\n    this.emit(this.externalPortMap[name], message);\n  }\n  return false;\n};\n\n/**\n * Create a dynamic dependency on another module.\n * @method require\n * @param {String} name The name of the dependency.\n * @param {String} manifest The URL of the dependency to add.\n */\nModule.prototype.require = function (name, manifest) {\n  this.dependantChannels.push(name);\n  this.addDependency(manifest, name).catch(function (err) {\n    this.port.onMessage(this.modInternal, {\n      type: 'require.failure',\n      id: name,\n      error: err.message\n    });\n  }.bind(this));\n};\n\n/**\n * Add a dependency to the module's dependency tree\n * @method addDependency\n * @param {String} url The manifest URL of the dependency\n * @param {String} name The exposed name of the module.\n * @returns {Module} The created dependent module.\n * @private\n */\nModule.prototype.addDependency = function (url, name) {\n  return this.resource.get(this.manifestId, url)\n    .then(function (url) {\n      return this.policy.get(this.lineage, url);\n    }.bind(this))\n    .then(function (dep) {\n      this.updateEnv(name, dep.manifest);\n      this.emit(this.controlChannel, {\n        type: 'Link to ' + name,\n        request: 'link',\n        name: name,\n        overrideDest: name + '.' + this.id,\n        to: dep\n      });\n      return dep;\n    }.bind(this))\n    .catch(function (err) {\n      this.debug.warn(this.toString() + ' failed to load dep: ', name, err);\n      throw err;\n    }.bind(this));\n};\n\n/**\n * Request the external routes used by this module.\n * @method loadLinks\n * @private\n */\nModule.prototype.loadLinks = function () {\n  var i, channels = ['default'], name, dep;\n\n  if (this.manifest.permissions) {\n    for (i = 0; i < this.manifest.permissions.length; i += 1) {\n      name = this.manifest.permissions[i];\n      if (channels.indexOf(name) < 0 && name.indexOf('core.') === 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n        dep = new Provider(this.api.get(name).definition, this.debug);\n        this.api.provideCore(name, dep, this);\n\n        this.emit(this.controlChannel, {\n          type: 'Core Link to ' + name,\n          request: 'link',\n          name: name,\n          to: dep\n        });\n      }\n    }\n  }\n  if (this.manifest.dependencies) {\n    util.eachProp(this.manifest.dependencies, function (desc, name) {\n      if (channels.indexOf(name) < 0) {\n        channels.push(name);\n        this.dependantChannels.push(name);\n      }\n\n      this.addDependency(desc.url, name);\n    }.bind(this));\n  }\n  // Note that messages can be synchronous, so some ports may already be bound.\n  for (i = 0; i < channels.length; i += 1) {\n    this.externalPortMap[channels[i]] = this.externalPortMap[channels[i]] || false;\n    this.internalPortMap[channels[i]] = false;\n  }\n};\n\n/**\n * Update the module environment with information about a dependent manifest.\n * @method updateEnv\n * @param {String} dep The dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModule.prototype.updateEnv = function (dep, manifest) {\n  if (!manifest) {\n    return;\n  }\n  if (!this.modInternal) {\n    this.once('modInternal', this.updateEnv.bind(this, dep, manifest));\n    return;\n  }\n\n  var metadata;\n\n  // Decide if/what other properties should be exported.\n  // Keep in sync with ModuleInternal.updateEnv\n  metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description,\n    api: manifest.api\n  };\n\n  this.port.onMessage(this.modInternal, {\n    type: 'manifest',\n    name: dep,\n    manifest: metadata\n  });\n};\n\nmodule.exports = Module;\n","/*jslint indent:2, node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar Provider = require('./provider');\nvar ProxyBinder = require('./proxybinder');\nvar util = require('./util');\n\n/**\n * The internal logic for module setup, which makes sure the public\n * facing exports have appropriate properties, and load user scripts.\n * @class ModuleInternal\n * @extends Port\n * @param {Port} manager The manager in this module to use for routing setup.\n * @constructor\n */\nvar ModuleInternal = function (manager) {\n  this.config = {};\n  this.manager = manager;\n  this.debug = manager.debug;\n  this.binder = new ProxyBinder(this.manager);\n  this.api = this.manager.api;\n  this.manifests = {};\n  this.providers = {};\n\n  this.id = 'ModuleInternal';\n  this.pendingPorts = 0;\n  this.requests = {};\n  this.unboundPorts = {};\n\n  util.handleEvents(this);\n};\n\n/**\n * Message handler for this port.\n * This port only handles two messages:\n * The first is its setup from the manager, which it uses for configuration.\n * The second is from the module controller (fdom.port.Module), which provides\n * the manifest info for the module.\n * @method onMessage\n * @param {String} flow The detination of the message.\n * @param {Object} message The message.\n */\nModuleInternal.prototype.onMessage = function (flow, message) {\n  if (flow === 'control') {\n    if (!this.controlChannel && message.channel) {\n      this.controlChannel = message.channel;\n      util.mixin(this.config, message.config);\n    }\n  } else if (flow === 'default' && !this.appId) {\n    // Recover the ID of this module:\n    this.port = this.manager.hub.getDestination(message.channel);\n    this.externalChannel = message.channel;\n    this.appId = message.appId;\n    this.lineage = message.lineage;\n\n    var objects = this.mapProxies(message.manifest);\n\n    this.generateEnv(message.manifest, objects).then(function () {\n      return this.loadLinks(objects);\n    }.bind(this)).then(this.loadScripts.bind(this, message.id,\n        message.manifest.app.script)).then(null, function (err) {\n      this.debug.error('Could not set up module ' + this.appId + ': ', err);\n    }.bind(this));\n  } else if (flow === 'default' && message.type === 'resolve.response' &&\n             this.requests[message.id]) {\n    this.requests[message.id](message.data);\n    delete this.requests[message.id];\n  } else if (flow === 'default' && message.type === 'require.failure' &&\n             this.unboundPorts[message.id]) {\n    this.unboundPorts[message.id].callback(undefined, message.error);\n    delete this.unboundPorts[message.id];\n  } else if (flow === 'default' && message.type === 'manifest') {\n    this.emit('manifest', message);\n    this.updateManifest(message.name, message.manifest);\n  } else if (flow === 'default' && message.type === 'Connection') {\n    // Multiple connections can be made to the default provider.\n    if (message.api && this.providers[message.api]) {\n      this.manager.createLink(this.providers[message.api], message.channel,\n                             this.port, message.channel);\n    } else if (this.defaultPort &&\n               (message.api === this.defaultPort.api || !message.api)) {\n      this.manager.createLink(this.defaultPort, message.channel,\n                              this.port, message.channel);\n    } else {\n      this.once('start', this.onMessage.bind(this, flow, message));\n    }\n  }\n};\n\n/**\n * Get a textual description of this Port.\n * @method toString\n * @return {String} a description of this Port.\n */\nModuleInternal.prototype.toString = function () {\n  return \"[Environment Helper]\";\n};\n\n/**\n * Generate an externaly visisble namespace\n * @method generateEnv\n * @param {Object} manifest The manifest of the module.\n * @param {Object[]} items Other interfaces to load.\n * @returns {Promise} A promise when the external namespace is visible.\n * @private\n */\nModuleInternal.prototype.generateEnv = function (manifest, items) {\n  return this.binder.bindDefault(this.port, this.api, manifest, true).then(\n    function (binding) {\n      var i = 0;\n      binding.port.api = binding.external.api;\n      this.defaultPort = binding.port;\n      if (binding.external.api) {\n        for (i = 0; i < items.length; i += 1) {\n          if (items[i].name === binding.external.api && items[i].def.provides) {\n            items.splice(i, 1);\n            break;\n          }\n        }\n      }\n      this.config.global.freedom = binding.external;\n    }.bind(this)\n  );\n};\n\n/**\n * Register an unused channel ID for callback, and once information\n * about the channel is known, call the handler with that information.\n * @method registerId\n * @param {String} api The preferred API to use for the new channel.\n * @param {Function} callback Function to call once channel ready\n * @returns {String} The allocated channel name.\n */\nModuleInternal.prototype.registerId = function (api, callback) {\n  var id = util.getId();\n  this.unboundPorts[id] = {\n    name: api,\n    callback: callback\n  };\n  return id;\n};\n\n/**\n * Attach a proxy to the externally visible namespace.\n * @method attach\n * @param {String} name The name of the proxy.\n * @param {Boolean} provides If this proxy is a provider.\n * @param {ProxyInterface} proxy The proxy to attach.\n * @param {String} api The API the proxy implements.\n * @private.\n */\nModuleInternal.prototype.attach = function (name, provides, proxy) {\n  var exp = this.config.global.freedom;\n\n  if (provides) {\n    this.providers[name] = proxy.port;\n  }\n\n  if (!exp[name]) {\n    exp[name] = proxy.external;\n    if (this.manifests[name]) {\n      exp[name].manifest = this.manifests[name];\n    }\n  }\n\n  this.pendingPorts -= 1;\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return exp[name];\n};\n\n/**\n * Request a set of proxy interfaces, and bind them to the external\n * namespace.\n * @method loadLinks\n * @param {Object[]} items Descriptors of the proxy ports to load.\n * @private\n * @returns {Promise} Promise for when all links are loaded.\n */\n//TODO(willscott): promise should be chained, rather than going through events.\nModuleInternal.prototype.loadLinks = function (items) {\n  var i, proxy, provider, core,\n    manifestPredicate = function (name, flow, msg) {\n      return flow === 'manifest' && msg.name === name;\n    },\n    onManifest = function (item, msg) {\n      var definition = {\n        name: item.api\n      };\n      if (!msg.manifest.api || !msg.manifest.api[item.api]) {\n        definition.definition = null;\n      } else {\n        definition.definition = msg.manifest.api[item.api];\n      }\n      this.binder.getExternal(this.port, item.name, definition).then(\n        this.attach.bind(this, item.name, false)\n      );\n    }.bind(this),\n    promise = new PromiseCompat(function (resolve, reject) {\n      this.once('start', resolve);\n    }.bind(this));\n\n  for (i = 0; i < items.length; i += 1) {\n    if (items[i].api && !items[i].def) {\n      if (this.manifests[items[i].name]) {\n        onManifest(items[i], {\n          manifest: this.manifests[items[i].name]\n        });\n      } else {\n        this.once(manifestPredicate.bind({}, items[i].name),\n                  onManifest.bind(this, items[i]));\n      }\n    } else {\n      this.binder.getExternal(this.port, items[i].name, items[i].def).then(\n        this.attach.bind(this, items[i].name, items[i].def &&\n                         items[i].def.provides)\n      );\n    }\n    this.pendingPorts += 1;\n  }\n\n  // Allow resolution of files by parent.\n  this.manager.resource.addResolver(function (manifest, url, resolve) {\n    var id = util.getId();\n    this.requests[id] = resolve;\n    this.emit(this.externalChannel, {\n      type: 'resolve',\n      id: id,\n      data: url\n    });\n    return true;\n  }.bind(this));\n\n  // Attach Core.\n  this.pendingPorts += 1;\n\n  core = this.api.get('core').definition;\n  provider = new Provider(core, this.debug);\n  this.manager.getCore(function (CoreProv) {\n    new CoreProv(this.manager).setId(this.lineage, this);\n    provider.getInterface().provideAsynchronous(CoreProv);\n  }.bind(this));\n\n  this.emit(this.controlChannel, {\n    type: 'Link to core',\n    request: 'link',\n    name: 'core',\n    to: provider\n  });\n\n  this.binder.getExternal(provider, 'default', {\n    name: 'core',\n    definition: core\n  }).then(function (core) {\n    core.external.getLoggerSync = this.debug.getLoggingShim(\n        core.external().getLogger);\n    this.attach('core', false, core);\n  }.bind(this));\n\n\n  if (this.pendingPorts === 0) {\n    this.emit('start');\n  }\n\n  return promise;\n};\n\n/**\n * Update the exported manifest of a dependency.\n * Sets it internally if not yet exported, or attaches the property if it\n * is loaded after the module has started (we don't delay start to retreive\n * the manifest of the dependency.)\n * @method updateManifest\n * @param {String} name The Dependency\n * @param {Object} manifest The manifest of the dependency\n */\nModuleInternal.prototype.updateManifest = function (name, manifest) {\n  var exp = this.config.global.freedom;\n\n  if (exp && exp[name]) {\n    exp[name].manifest = manifest;\n  // Handle require() dependency resolution.\n  } else if (this.unboundPorts[name]) {\n    this.binder.getExternal(this.port, name,\n        this.binder.getAPI(manifest, this.api, this.unboundPorts[name].api))\n      .then(\n        this.attach.bind(this, name, false)\n      ).then(function(proxy) {\n        this.unboundPorts[name].callback(proxy);\n        delete this.unboundPorts[name];\n      }.bind(this));\n  } else {\n    this.manifests[name] = manifest;\n  }\n};\n\n/**\n * Determine which proxy ports should be exposed by this module.\n * @method mapProxies\n * @param {Object} manifest the module JSON manifest.\n * @return {Object[]} proxy descriptors defined in the manifest.\n */\nModuleInternal.prototype.mapProxies = function (manifest) {\n  var proxies = [], seen = ['core'], i, obj;\n\n  if (manifest.permissions) {\n    for (i = 0; i < manifest.permissions.length; i += 1) {\n      obj = {\n        name: manifest.permissions[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (seen.indexOf(obj.name) < 0 && obj.def) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  if (manifest.dependencies) {\n    util.eachProp(manifest.dependencies, function (desc, name) {\n      obj = {\n        name: name,\n        api: desc.api\n      };\n      if (seen.indexOf(name) < 0) {\n        if (desc.api) {\n          obj.def = this.api.get(desc.api);\n        }\n        proxies.push(obj);\n        seen.push(name);\n      }\n    }.bind(this));\n  }\n\n  if (manifest.provides) {\n    for (i = 0; i < manifest.provides.length; i += 1) {\n      obj = {\n        name: manifest.provides[i],\n        def: undefined\n      };\n      obj.def = this.api.get(obj.name);\n      if (obj.def) {\n        obj.def.provides = true;\n      } else if (manifest.api && manifest.api[obj.name]) {\n        obj.def = {\n          name: obj.name,\n          definition: manifest.api[obj.name],\n          provides: true\n        };\n      } else {\n        this.debug.warn('Module will not provide \"' + obj.name +\n          '\", since no declaration can be found.');\n        /*jslint continue:true*/\n        continue;\n      }\n      /*jslint continue:false*/\n      if (seen.indexOf(obj.name) < 0) {\n        proxies.push(obj);\n        seen.push(obj.name);\n      }\n    }\n  }\n\n  return proxies;\n};\n\n/**\n * Load external scripts into this namespace.\n * @method loadScripts\n * @param {String} from The URL of this modules's manifest.\n * @param {String[]} scripts The URLs of the scripts to load.\n */\nModuleInternal.prototype.loadScripts = function (from, scripts) {\n  // TODO(salomegeo): add a test for failure.\n  var importer = function (script, resolve, reject) {\n    try {\n      this.config.global.importScripts(script);\n      resolve(true);\n    } catch (e) {\n      reject(e);\n    }\n  }.bind(this),\n    scripts_count,\n    load;\n  if (typeof scripts === 'string') {\n    scripts_count = 1;\n  } else {\n    scripts_count = scripts.length;\n  }\n\n  load = function (next) {\n    if (next === scripts_count) {\n      this.emit(this.externalChannel, {\n        type: \"ready\"\n      });\n      return;\n    }\n\n    var script;\n    if (typeof scripts === 'string') {\n      script = scripts;\n    } else {\n      script = scripts[next];\n    }\n\n    this.manager.resource.get(from, script).then(function (url) {\n      this.tryLoad(importer, url).then(function () {\n        load(next + 1);\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n\n\n  if (!this.config.global.importScripts) {\n    importer = function (url, resolve, reject) {\n      var script = this.config.global.document.createElement('script');\n      script.src = url;\n      script.addEventListener('load', resolve, true);\n      this.config.global.document.body.appendChild(script);\n    }.bind(this);\n  }\n\n  load(0);\n};\n\n/**\n * Attempt to load resolved scripts into the namespace.\n * @method tryLoad\n * @private\n * @param {Function} importer The actual import function\n * @param {String[]} urls The resoved URLs to load.\n * @returns {Promise} completion of load\n */\nModuleInternal.prototype.tryLoad = function (importer, url) {\n  return new PromiseCompat(importer.bind({}, url)).then(function (val) {\n    return val;\n  }, function (e) {\n    this.debug.warn(e.stack);\n    this.debug.error(\"Error loading \" + url, e);\n    this.debug.error(\"If the stack trace is not useful, see https://\" +\n        \"github.com/freedomjs/freedom/wiki/Debugging\");\n  }.bind(this));\n};\n\nmodule.exports = ModuleInternal;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,white:true,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\nvar Module = require('./module');\nvar util = require('./util');\n\n/**\n * The Policy registry for freedom.js.  Used to look up modules and provide\n * migration and coallesing of execution.\n * @Class Policy\n * @param {Manager} manager The manager of the active runtime.\n * @param {Resource} resource The resource loader of the active runtime.\n * @param {Object} config The local config.\n * @constructor\n */\nvar Policy = function(manager, resource, config) {\n  this.api = manager.api;\n  this.debug = manager.debug;\n  this.location = config.location;\n  this.resource = resource;\n\n  this.config = config;\n  this.runtimes = [];\n  this.policies = [];\n  this.pending = {};\n  util.handleEvents(this);\n\n  this.add(manager, config.policy);\n  this.runtimes[0].local = true;\n};\n\n/**\n * The policy a runtime is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultPolicy\n */\nPolicy.prototype.defaultPolicy = {\n  background: false, // Can this runtime run 'background' modules?\n  interactive: true // Is there a view associated with this runtime?\n  // TODO: remaining runtime policy.\n};\n\n/**\n * The constraints a code modules is expected to have unless it specifies\n * otherwise.\n * TODO: consider making static\n * @property defaultConstraints\n */\nPolicy.prototype.defaultConstraints = {\n  isolation: \"always\", // values: always, app, never\n  placement: \"local\" // values: local, stable, redundant\n  // TODO: remaining constraints, express platform-specific dependencies.\n};\n\n/**\n * Resolve a module from its canonical URL.\n * Reponds with the promise of a port representing the module, \n * @method get\n * @param {String[]} lineage The lineage of the requesting module.\n * @param {String} id The canonical ID of the module to get.\n * @returns {Promise} A promise for the local port towards the module.\n */\nPolicy.prototype.get = function(lineage, id) {\n  \n  // Make sure that a module isn't getting located twice at the same time.\n  // This is resolved by delaying if it until we see it in a 'moduleAdd' event.\n  if (this.pending[id]) {\n    return new PromiseCompat(function (resolve, reject) {\n      this.once('placed', function(l, i) {\n        this.get(l, i).then(resolve, reject);\n      }.bind(this, lineage, id));\n    }.bind(this));\n  } else {\n    this.pending[id] = true;\n  }\n\n  return this.loadManifest(id).then(function(manifest) {\n    var constraints = this.overlay(this.defaultConstraints, manifest.constraints),\n        runtime = this.findDestination(lineage, id, constraints),\n        portId;\n    if (runtime.local) {\n      portId = this.isRunning(runtime, id, lineage,\n                             constraints.isolation !== 'never');\n      if(constraints.isolation !== 'always' && portId) {\n        this.debug.info('Reused port ' + portId);\n        delete this.pending[id];\n        this.emit('placed');\n        return runtime.manager.getPort(portId);\n      } else {\n        return new Module(id, manifest, lineage, this);\n      }\n    } else {\n      // TODO: Create a port to go to the remote runtime.\n      this.debug.error('Unexpected location selected for module placement');\n      return false;\n    }\n  }.bind(this), function(err) {\n    this.debug.error('Policy Error Resolving ' + id, err);\n    throw(err);\n  }.bind(this));\n};\n\n/**\n * Find the runtime destination for a module given its constraints and the\n * module creating it.\n * @method findDestination\n * @param {String[]} lineage The identity of the module creating this module.\n * @param {String] id The canonical url of the module\n * @param {Object} constraints Constraints for the module.\n * @returns {Object} The element of this.runtimes where the module should run.\n */\nPolicy.prototype.findDestination = function(lineage, id, constraints) {\n  var i;\n\n  // Step 1: if an instance already exists, the m\n  if (constraints.isolation !== 'always') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.isRunning(this.runtimes[i], id, lineage,\n                         constraints.isolation !== 'never')) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 2: if the module wants stability, it may need to be remote.\n  if (constraints.placement === 'local') {\n    return this.runtimes[0];\n  } else if (constraints.placement === 'stable') {\n    for (i = 0; i < this.policies.length; i += 1) {\n      if (this.policies[i].background) {\n        return this.runtimes[i];\n      }\n    }\n  }\n\n  // Step 3: if the module needs longevity / interactivity, it may want to be remote.\n  return this.runtimes[0];\n};\n\n/**\n * Determine if a known runtime is running an appropriate instance of a module.\n * @method isRunning\n * @param {Object} runtime The runtime to check.\n * @param {String} id The module to look for.\n * @param {String[]} from The identifier of the requesting module.\n * @param {Boolean} fullMatch If the module needs to be in the same app.\n * @returns {String|Boolean} The Module id if it is running, or false if not.\n */\nPolicy.prototype.isRunning = function(runtime, id, from, fullMatch) {\n  var i = 0, j = 0, okay;\n  for (i = 0; i < runtime.modules.length; i += 1) {\n    if (fullMatch && runtime.modules[i].length === from.length + 1) {\n      okay = true;\n      for (j = 0; j < from.length; j += 1) {\n        if (runtime.modules[i][j + 1].indexOf(from[j]) !== 0) {\n          okay = false;\n          break;\n        }\n      }\n      if (runtime.modules[i][0].indexOf(id) !== 0) {\n        okay = false;\n      }\n\n      if (okay) {\n        return runtime.modules[i][0];\n      }\n    } else if (!fullMatch && runtime.modules[i][0].indexOf(id) === 0) {\n      return runtime.modules[i][0];\n    }\n  }\n  return false;\n};\n\n/**\n * Get a promise of the manifest for a module ID.\n * @method loadManifest\n * @param {String} manifest The canonical ID of the manifest\n * @returns {Promise} Promise for the json contents of the manifest.\n */\nPolicy.prototype.loadManifest = function(manifest) {\n  return this.resource.getContents(manifest).then(function(data) {\n    var resp = {};\n    try {\n      return JSON.parse(data);\n    } catch(err) {\n      this.debug.error(\"Failed to load \" + manifest + \": \" + err);\n      throw new Error(\"No Manifest Available\");\n    }\n  }.bind(this));\n};\n\n/**\n * Add a runtime to keep track of in this policy.\n * @method add\n * @param {fdom.port} port The port to use for module lifetime info\n * @param {Object} policy The policy of the runtime.\n */\nPolicy.prototype.add = function(port, policy) {\n  var runtime = {\n    manager: port,\n    modules: []\n  };\n  this.runtimes.push(runtime);\n  this.policies.push(this.overlay(this.defaultPolicy, policy));\n\n  port.on('moduleAdd', function(runtime, info) {\n    var lineage = [];\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    runtime.modules.push(lineage);\n    if (this.pending[info.lineage[0]]) {\n      delete this.pending[info.lineage[0]];\n      this.emit('placed');\n    }\n  }.bind(this, runtime));\n  port.on('moduleRemove', function(runtime, info) {\n    var lineage = [], i, modFingerprint;\n    lineage = lineage.concat(info.lineage);\n    lineage[0] = info.id;\n    modFingerprint = lineage.toString();\n\n    for (i = 0; i < runtime.modules.length; i += 1) {\n      if (runtime.modules[i].toString() === modFingerprint) {\n        runtime.modules.splice(i, 1);\n        return;\n      }\n    }\n    this.debug.warn('Unknown module to remove: ', info.id);\n  }.bind(this, runtime));\n};\n\n/**\n * Overlay a specific policy or constraint instance on default settings.\n * TODO: consider making static.\n * @method overlay\n * @private\n * @param {Object} base The default object\n * @param {Object} overlay The superceeding object\n * @returns {Object} A new object with base parameters when not set in overlay.\n */\nPolicy.prototype.overlay = function(base, overlay) {\n  var ret = {};\n\n  util.mixin(ret, base);\n  if (overlay) {\n    util.mixin(ret, overlay, true);\n  }\n  return ret;\n};\n\nmodule.exports = Policy;\n","/*jslint indent:2, node:true, sloppy:true, browser:true */\nvar Consumer = require('./consumer');\nvar util = require('./util');\n\n/**\n * A freedom port for a user-accessable provider.\n * @class Provider\n * @implements Port\n * @uses handleEvents\n * @param {Object} def The interface of the provider.\n * @param {Debug} debug The debugger to use for logging.\n * @contructor\n */\nvar Provider = function (def, debug) {\n  this.id = Consumer.nextId();\n  util.handleEvents(this);\n  this.debug = debug;\n\n  this.definition = def;\n  this.mode = Provider.mode.synchronous;\n  this.channels = {};\n  this.iface = null;\n  this.closeHandlers = {};\n  this.providerCls = null;\n\n  this.ifaces = {};\n  this.emits = {};\n};\n\n/**\n * Provider modes of operation.\n * @property mode\n * @static\n * @type number\n */\nProvider.mode = {\n  synchronous: 0,\n  asynchronous: 1,\n  promises: 2\n};\n\n/**\n * Receive external messages for the provider.\n * @method onMessage\n * @param {String} source the source identifier of the message.\n * @param {Object} message The received message.\n */\nProvider.prototype.onMessage = function (source, message) {\n  if (source === 'control' && message.reverse) {\n    this.channels[message.name] = message.channel;\n    this.emit(message.channel, {\n      type: 'channel announcement',\n      channel: message.reverse\n    });\n    this.emit('start');\n  } else if (source === 'control' && message.type === 'setup') {\n    this.controlChannel = message.channel;\n  } else if (source === 'control' && message.type === 'close') {\n    if (message.channel === this.controlChannel) {\n      delete this.controlChannel;\n    }\n    this.close();\n  } else {\n    if (!this.channels[source] && message.channel) {\n      this.channels[source] = message.channel;\n      this.emit('start');\n      return;\n    } else if (!this.channels[source]) {\n      this.debug.warn('Message from unconfigured source: ' + source);\n      return;\n    }\n\n    if (message.type === 'close' && message.to) {\n      this.teardown(source, message.to);\n    } else if (message.to && this.emits[source] &&\n               this.emits[source][message.to]) {\n      message.message.to = message.to;\n      this.emits[source][message.to](message.message);\n    } else if (message.to && message.message &&\n        message.message.type === 'construct') {\n      var args = Consumer.portableToMessage(\n          (this.definition.constructor && this.definition.constructor.value) ?\n              this.definition.constructor.value : [],\n          message.message,\n          this.debug\n        ),\n        instance;\n      if (!this.ifaces[source]) {\n        this.ifaces[source] = {};\n        this.emits[source] = {};\n      }\n      this.ifaces[source][message.to] = true;\n      instance = this.getProvider(source, message.to, args);\n      // don't save a reference to instance if it closed itself already.\n      if (this.ifaces[source] &&\n          this.ifaces[source][message.to]) {\n        this.ifaces[source][message.to] = instance.instance;\n        this.emits[source][message.to] = instance.onmsg;\n      }\n    } else {\n      this.debug.warn(this.toString() + ' dropping message ' +\n          JSON.stringify(message));\n    }\n  }\n};\n\n/**\n * Close / teardown the flow this provider terminates.\n * @method close\n */\nProvider.prototype.close = function () {\n  if (this.controlChannel) {\n    this.emit(this.controlChannel, {\n      type: 'Provider Closing',\n      request: 'close'\n    });\n    delete this.controlChannel;\n  }\n  this.emit('close');\n\n  // Release references.\n  delete this.iface;\n  delete this.providerCls;\n  this.ifaces = {};\n  this.emits = {};\n  this.emitChannel = null;\n};\n\n/**\n * Teardown a single instance of an object fulfilling this provider.\n * @method teardown\n * @param {String} source The consumer source of the instance.\n * @param {String} id The id of the instance to tear down.\n */\nProvider.prototype.teardown = function (source, id) {\n  // Ignore teardown of non-existant ids.\n  if (!this.ifaces[source]) {\n    return;\n  }\n\n  delete this.ifaces[source][id];\n  delete this.emits[source][id];\n  if (this.closeHandlers[source] && this.closeHandlers[source][id]) {\n    util.eachProp(this.closeHandlers[source][id], function (prop) {\n      prop();\n    });\n    delete this.closeHandlers[source][id];\n  }\n};\n\n/**\n * Get an interface to expose externally representing this port.\n * Providers are registered with the port using either\n * provideSynchronous or provideAsynchronous depending on the desired\n * return interface.\n * @method getInterface\n * @return {Object} The external interface of this Provider.\n */\nProvider.prototype.getInterface = function () {\n  if (this.iface) {\n    return this.iface;\n  } else {\n    var sanityCheck = function (provider) {\n      if (typeof provider !== \"function\") {\n        throw new Error(\"Provider \" + this.toString() +\n            \" needs to be implemented by a function.\");\n      }\n    };\n    this.iface = {\n      provideSynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.synchronous;\n      }.bind(this),\n      provideAsynchronous: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.asynchronous;\n      }.bind(this),\n      providePromises: function (prov) {\n        sanityCheck(prov);\n        this.providerCls = prov;\n        this.mode = Provider.mode.promises;\n      }.bind(this)\n    };\n\n    util.eachProp(this.definition, function (prop, name) {\n      switch (prop.type) {\n      case \"constant\":\n        Object.defineProperty(this.iface, name, {\n          value: Consumer.recursiveFreezeObject(prop.value),\n          writable: false\n        });\n        break;\n      }\n    }.bind(this));\n\n    return this.iface;\n  }\n};\n\n/**\n * Create a function that can be used to get interfaces from this provider from\n * a user-visible point.\n * @method getProxyInterface\n */\nProvider.prototype.getProxyInterface = function () {\n  var func = function (p) {\n    return p.getInterface();\n  }.bind({}, this);\n\n  func.close = function (iface) {\n    if (iface) {\n      util.eachProp(this.ifaces, function (ids, source) {\n        util.eachProp(ids, function (candidate, id) {\n          if (candidate === iface) {\n            this.teardown(source, id);\n            this.emit(this.channels[source], {\n              type: 'close',\n              to: id\n            });\n            return true;\n          }\n        }.bind(this));\n      }.bind(this));\n    } else {\n      // Close the channel.\n      this.close();\n    }\n  }.bind(this);\n\n  func.onClose = function (iface, handler) {\n    // Listen to the channel directly.\n    if (typeof iface === 'function' && handler === undefined) {\n      this.once('close', iface);\n      return;\n    }\n\n    util.eachProp(this.ifaces, function (ids, source) {\n      util.eachProp(ids, function (candidate, id) {\n        if (candidate === iface) {\n          if (!this.closeHandlers[source]) {\n            this.closeHandlers[source] = {};\n          }\n          if (!this.closeHandlers[source][id]) {\n            this.closeHandlers[source][id] = [];\n          }\n          this.closeHandlers[source][id].push(handler);\n          return true;\n        }\n      }.bind(this));\n    }.bind(this));\n  }.bind(this);\n\n  return func;\n};\n\n/**\n * Get a new instance of the registered provider.\n * @method getProvider\n * @param {String} source The port this instance is interactign with.\n * @param {String} identifier the messagable address for this provider.\n * @param {Array} args Constructor arguments for the provider.\n * @return {Function} A function to send messages to the provider.\n */\nProvider.prototype.getProvider = function (source, identifier, args) {\n  if (!this.providerCls) {\n    this.debug.error('Cannot instantiate provider, since it is not provided');\n    return {instance: undefined, onmsg: undefined};\n  }\n\n  var events = {},\n    dispatchEvent,\n    BoundClass,\n    instance;\n\n  util.eachProp(this.definition, function (prop, name) {\n    if (prop.type === 'event') {\n      events[name] = prop;\n    }\n  });\n\n  dispatchEvent = function (src, ev, id, name, value) {\n    if (ev[name]) {\n      var streams = Consumer.messageToPortable(ev[name].value, value,\n                                                   this.debug);\n      this.emit(this.channels[src], {\n        type: 'message',\n        to: id,\n        message: {\n          name: name,\n          type: 'event',\n          text: streams.text,\n          binary: streams.binary\n        }\n      });\n    }\n  }.bind(this, source, events, identifier);\n\n  // this is all to say: new providerCls(dispatchEvent, args[0], args[1],...)\n  BoundClass = this.providerCls.bind.apply(this.providerCls,\n      [this.providerCls, dispatchEvent].concat(args || []));\n  instance = new BoundClass();\n\n  return {\n    instance: instance,\n    onmsg: function (port, src, msg) {\n      var prop, debug, args, returnPromise, ret;\n      if (msg.action === 'method') {\n        if (typeof this[msg.type] !== 'function') {\n          port.debug.warn(\"Provider does not implement \" + msg.type + \"()!\");\n          port.emit(port.channels[src], {\n            type: 'method',\n            to: msg.to,\n            message: {\n              to: msg.to,\n              type: 'method',\n              reqId: msg.reqId,\n              name: msg.type,\n              error: 'Provider does not implement ' + msg.type + '()!'\n            }\n          });\n          return;\n        }\n        prop = port.definition[msg.type];\n        debug = port.debug;\n        args = Consumer.portableToMessage(prop.value, msg, debug);\n        if (msg.reqId === null) {\n          // Reckless call.  Ignore return value.\n          ret = function(resolve, reject) {\n            if (reject) {\n              debug.error(reject);\n            }\n          };\n        } else {\n          ret = function (src, msg, prop, resolve, reject) {\n            var streams = Consumer.messageToPortable(prop.ret, resolve,\n                                                         debug);\n            this.emit(this.channels[src], {\n              type: 'method',\n              to: msg.to,\n              message: {\n                to: msg.to,\n                type: 'method',\n                reqId: msg.reqId,\n                name: msg.type,\n                text: streams.text,\n                binary: streams.binary,\n                error: reject\n              }\n            });\n          }.bind(port, src, msg, prop);\n        }\n        if (!Array.isArray(args)) {\n          args = [args];\n        }\n        if (port.mode === Provider.mode.synchronous) {\n          try {\n            ret(this[msg.type].apply(this, args));\n          } catch (e1) {\n            ret(undefined, e1.message + ' ' + e1.stack);\n          }\n        } else if (port.mode === Provider.mode.asynchronous) {\n          try {\n            this[msg.type].apply(instance, args.concat(ret));\n          } catch (e2) {\n            ret(undefined, e2.message + ' ' + e2.stack);\n          }\n        } else if (port.mode === Provider.mode.promises) {\n          try {\n            returnPromise = this[msg.type].apply(this, args);\n            if (returnPromise && returnPromise.then) {\n              returnPromise.then(ret, ret.bind({}, undefined));\n            } else {\n              ret(undefined, 'No promise returned from ' +\n                  msg.type + ': ' + returnPromise);\n            }\n          } catch (e3) {\n            ret(undefined, e3.message + ' ' + e3.stack);\n          }\n        }\n      }\n    }.bind(instance, this, source)\n  };\n};\n\n/**\n * Get a textual description of this port.\n * @method toString\n * @return {String} the description of this port.\n */\nProvider.prototype.toString = function () {\n  if (this.emitChannel) {\n    return \"[Provider \" + this.emitChannel + \"]\";\n  } else {\n    return \"[unbound Provider]\";\n  }\n};\n\nmodule.exports = Provider;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('../util');\nvar Consumer = require('../consumer');\n\nvar ApiInterface = function(def, onMsg, emit, debug) {\n  var inflight = {},\n      events = null,\n      emitter = null,\n      reqId = 0,\n      args = arguments;\n\n  util.eachProp(def, function(prop, name) {\n    switch(prop.type) {\n    case 'method':\n      this[name] = function() {\n        // Note: inflight should be registered before message is passed\n        // in order to prepare for synchronous in-window pipes.\n        var thisReq = reqId,\n            promise = new PromiseCompat(function(resolve, reject) {\n              inflight[thisReq] = {\n                resolve:resolve,\n                reject:reject,\n                template: prop.ret\n              };\n            }),\n            streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        reqId += 1;\n        emit({\n          action: 'method',\n          type: name,\n          reqId: thisReq,\n          text: streams.text,\n          binary: streams.binary\n        });\n        return promise;\n      };\n      this[name].reckless = function () {\n        var streams = Consumer.messageToPortable(prop.value,\n                Array.prototype.slice.call(arguments, 0),\n                debug);\n        emit({\n          action: 'method',\n          type: name,\n          reqId: null,  // Marks this as a reckless call.\n          text: streams.text,\n          binary: streams.binary\n        });\n        // Return type is void.\n      };\n      break;\n    case 'event':\n      if(!events) {\n        util.handleEvents(this);\n        emitter = this.emit;\n        delete this.emit;\n        events = {};\n      }\n      events[name] = prop;\n      break;\n    case 'constant':\n      Object.defineProperty(this, name, {\n        value: Consumer.recursiveFreezeObject(prop.value),\n        writable: false\n      });\n      break;\n    }\n  }.bind(this));\n\n  onMsg(this, function(type, msg) {\n    if (type === 'close') {\n      if (this.off) {\n        this.off();\n      }\n      util.eachProp(inflight, function (obj) {\n        obj.reject('closed');\n      });\n      inflight = {};\n      return;\n    }\n    if (!msg) {\n      return;\n    }\n    if (msg.type === 'method') {\n      if (inflight[msg.reqId]) {\n        var resolver = inflight[msg.reqId],\n            template = resolver.template;\n        delete inflight[msg.reqId];\n        if (msg.error) {\n          resolver.reject(msg.error);\n        } else {\n          resolver.resolve(Consumer.portableToMessage(template, msg, debug));\n        }\n      } else {\n        debug.error('Incoming message claimed to be an RPC ' +\n                         'returning for unregistered call', msg.reqId);\n      }\n    } else if (msg.type === 'event') {\n      if (events[msg.name]) {\n        emitter(msg.name, Consumer.portableToMessage(events[msg.name].value,\n                msg, debug));\n      }\n    }\n  }.bind(this));\n\n  args = Consumer.messageToPortable(\n      (def.constructor && def.constructor.value) ? def.constructor.value : [],\n      Array.prototype.slice.call(args, 4),\n      debug);\n\n  emit({\n    type: 'construct',\n    text: args.text,\n    binary: args.binary\n  });\n};\n\nmodule.exports = ApiInterface;\n","/*jslint indent:2, white:true, node:true, sloppy:true, browser:true */\nvar util = require('../util');\n\nvar EventInterface = function(onMsg, emit, debug) {\n  util.handleEvents(this);\n  \n  onMsg(this, function(emit, type, msg) {\n    if (type === 'close') {\n      return;\n    }\n    emit(msg.type, msg.message);\n  }.bind(this, this.emit));\n\n  this.emit = function(emitter, type, msg) {\n    emitter({type: type, message: msg}, true);\n  }.bind({}, emit);\n};\n\nmodule.exports = EventInterface;\n","/*jslint indent:2, node:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar ApiInterface = require('./proxy/apiInterface');\nvar EventInterface = require('./proxy/eventInterface');\nvar Consumer = require('./consumer');\nvar Provider = require('./provider');\n\n/**\n * A Proxy Binder manages the external interface, and creates one of\n * the different types of objects exposed by freedom either as a global\n * within a worker / module context, or returned by an external call to\n * create a freedom runtime.\n * @Class ProxyBinder\n * @param {Manager} manager The manager for the active runtime.\n */\nvar ProxyBinder = function (manager) {\n  'use strict';\n  this.manager = manager;\n};\n\n/**\n * Create a proxy for a freedom port, and return it once loaded.\n * @method getExternal\n * @param {Port} port The port for the proxy to communicate with.\n * @param {String} name The name of the proxy.\n * @param {Object} [definition] The definition of the API to expose.\n * @param {String} definition.name The name of the API.\n * @param {Object} definition.definition The definition of the API.\n * @param {Boolean} definition.provides Whether this is a consumer or provider.\n * @returns {Promise} A promise for the active proxy interface.\n */\nProxyBinder.prototype.getExternal = function (port, name, definition) {\n  'use strict';\n  var proxy, api;\n  return new PromiseCompat(function (resolve, reject) {\n    if (definition) {\n      api = definition.name;\n      if (definition.provides) {\n        proxy = new Provider(definition.definition, this.manager.debug);\n      } else {\n        proxy = new Consumer(ApiInterface.bind({},\n            definition.definition),\n            this.manager.debug);\n      }\n    } else {\n      proxy = new Consumer(EventInterface, this.manager.debug);\n    }\n\n    proxy.once('start', function () {\n      var iface = proxy.getProxyInterface();\n      if (api) {\n        iface.api = api;\n      }\n      resolve({\n        port: proxy,\n        external: iface\n      });\n    });\n\n    this.manager.createLink(port, name, proxy);\n  }.bind(this));\n};\n\n/**\n * Bind the default proxy for a freedom port.\n * @method bindDefault\n * @param {Port} port The port for the proxy to communicate with.\n * @param {Api} api The API loader with API definitions.\n * @param {Object} manifest The manifest of the module to expose.\n * @param {Boolean} internal Whether the interface is for inside the module.\n * @returns {Promise} A promise for a proxy interface.\n * @private\n */\nProxyBinder.prototype.bindDefault = function (port, api, manifest, internal) {\n  'use strict';\n  var metadata = {\n    name: manifest.name,\n    icon: manifest.icon,\n    description: manifest.description\n  }, def;\n\n  if (manifest['default']) {\n    def = api.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      def = {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    if (internal && manifest.provides &&\n        manifest.provides.indexOf(manifest['default']) !== false) {\n      def.provides = true;\n    } else if (internal) {\n      api.debug.warn(\"default API not provided, \" +\n                     \"are you missing a provides key in your manifest?\");\n    }\n  }\n\n  return this.getExternal(port, 'default', def).then(\n    function (metadata, info) {\n      info.external.manifest = metadata;\n      return info;\n    }.bind(this, metadata)\n  );\n};\n\n/**\n * Get the definition for a proxy given a requested API and the manifest of\n * the module.\n * @method getAPI\n * @param {Object} manifest The manifest for the proxy.\n * @param {Api} apiProvider The registry of known APIs.\n * @param {String} api The Requested API.\n * @returns {Object} definition The definition to use for calls to getExternal.\n */\nProxyBinder.prototype.getAPI = function (manifest, apiProvider, api) {\n  'use strict';\n  if (manifest.api && manifest.api[api]) {\n    return {\n      name: api,\n      definition: manifest.api[api]\n    };\n  } else if (manifest['default']) {\n    var def = apiProvider.get(manifest['default']);\n    if (!def && manifest.api && manifest.api[manifest['default']]) {\n      return {\n        name: manifest['default'],\n        definition: manifest.api[manifest['default']]\n      };\n    }\n    return def;\n  } else {\n    return false;\n  }\n};\n\n\nmodule.exports = ProxyBinder;\n","/*globals XMLHttpRequest */\n/*jslint indent:2,node:true,sloppy:true */\nvar PromiseCompat = require('es6-promise').Promise;\n\nvar util = require('./util');\n\n/**\n * The Resource registry for FreeDOM.  Used to look up requested Resources,\n * and provide lookup and migration of resources.\n * @Class Resource\n * @param {Debug} debug The logger to use for debugging.\n * @constructor\n */\nvar Resource = function (debug) {\n  this.debug = debug;\n  this.files = {};\n  this.resolvers = [this.httpResolver, this.nullResolver];\n  this.contentRetrievers = {\n    'http': this.xhrRetriever,\n    'https': this.xhrRetriever,\n    'chrome-extension': this.xhrRetriever,\n    'resource': this.xhrRetriever,\n    'chrome': this.xhrRetriever,\n    'app': this.xhrRetriever,\n    'gopher': this.xhrRetriever,  // For Cordova; see http://crbug.com/513352 .\n    'manifest': this.manifestRetriever\n  };\n};\n\n/**\n * Resolve a resurce URL requested from a module.\n * @method get\n * @param {String} manifest The canonical address of the module requesting.\n * @param {String} url The resource to get.\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.get = function (manifest, url) {\n  var key = JSON.stringify([manifest, url]);\n  \n  return new PromiseCompat(function (resolve, reject) {\n    if (this.files[key]) {\n      resolve(this.files[key]);\n    } else {\n      this.resolve(manifest, url).then(function (key, resolve, address) {\n        this.files[key] = address;\n        //fdom.debug.log('Resolved ' + key + ' to ' + address);\n        resolve(address);\n      }.bind(this, key, resolve), reject);\n    }\n  }.bind(this));\n};\n\n/**\n * Get the contents of a resource.\n * @method getContents\n * @param {String} url The resource to read.\n * @returns {Promise} A promise for the resource contents.\n */\nResource.prototype.getContents = function (url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var prop;\n    if (!url) {\n      this.debug.warn(\"Asked to get contents of undefined URL.\");\n      return reject();\n    }\n    for (prop in this.contentRetrievers) {\n      if (this.contentRetrievers.hasOwnProperty(prop)) {\n        if (url.indexOf(prop + \"://\") === 0) {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        } else if (url.indexOf(\"://\") === -1 && prop === \"null\") {\n          return this.contentRetrievers[prop].call(this, url, resolve, reject);\n        }\n      }\n    }\n    reject();\n  }.bind(this));\n};\n\n/**\n * Return a promise that resolves when the first of an array of promises\n * resolves, or rejects after all promises reject. Can be thought of as\n * the missing 'Promise.any' - race is no good, since early rejections\n * preempt a subsequent resolution.\n * @private\n * @static\n * @method FirstPromise\n * @param {Promise[]} Promises to select from\n * @returns {Promise} Promise resolving with a value from arguments.\n */\nvar firstPromise = function(promises) {\n  return new PromiseCompat(function(resolve, reject) {\n    var errors = [];\n    promises.forEach(function(promise) {\n      promise.then(resolve, function(err) {\n        errors.push(err);\n        if (errors.length === promises.length) {\n          reject(errors);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Resolve a resource using known resolvers. Unlike get, resolve does\n * not cache resolved resources.\n * @method resolve\n * @private\n * @param {String} manifest The module requesting the resource.\n * @param {String} url The resource to resolve;\n * @returns {Promise} A promise for the resource address.\n */\nResource.prototype.resolve = function (manifest, url) {\n  return new PromiseCompat(function (resolve, reject) {\n    var promises = [];\n    if (url === undefined) {\n      return reject();\n    }\n    util.eachReverse(this.resolvers, function (resolver) {\n      promises.push(new PromiseCompat(resolver.bind({}, manifest, url)));\n    }.bind(this));\n    firstPromise(promises).then(resolve, function() {\n      reject('No resolvers to handle url: ' + JSON.stringify([manifest, url]));\n    });\n  }.bind(this));\n};\n\n/**\n * Register resolvers: code that knows how to get resources\n * needed by the runtime. A resolver will be called with four\n * arguments: the absolute manifest of the requester, the\n * resource being requested, and a resolve / reject pair to\n * fulfill a promise.\n * @method addResolver\n * @param {Function} resolver The resolver to add.\n */\nResource.prototype.addResolver = function (resolver) {\n  this.resolvers.push(resolver);\n};\n\n/**\n * Register retrievers: code that knows how to load resources\n * needed by the runtime. A retriever will be called with a URL\n * to retrieve with a protocol that it is able to handle.\n * @method addRetriever\n * @param {String} proto The protocol to register for.\n * @param {Function} retriever The retriever to add.\n */\nResource.prototype.addRetriever = function (proto, retriever) {\n  if (this.contentRetrievers[proto]) {\n    this.debug.warn(\"Unwilling to override file retrieval for \" + proto);\n    return;\n  }\n  this.contentRetrievers[proto] = retriever;\n};\n\n/**\n * Register external resolvers and retreavers\n * @method register\n * @param {{\"proto\":String, \"resolver\":Function, \"retreaver\":Function}[]}\n *     resolvers The list of retreivers and resolvers.\n */\nResource.prototype.register = function (resolvers) {\n  if (!resolvers.length) {\n    return;\n  }\n\n  resolvers.forEach(function (item) {\n    if (item.resolver) {\n      this.addResolver(item.resolver);\n    } else if (item.proto && item.retriever) {\n      this.addRetriever(item.proto, item.retriever);\n    }\n  }.bind(this));\n};\n\n/**\n * Determine if a URL is an absolute URL of a given Scheme.\n * @method hasScheme\n * @static\n * @private\n * @param {String[]} protocols Whitelisted protocols\n * @param {String} URL the URL to match.\n * @returns {Boolean} If the URL is an absolute example of one of the schemes.\n */\nResource.hasScheme = function (protocols, url) {\n  var i;\n  for (i = 0; i < protocols.length; i += 1) {\n    if (url.indexOf(protocols[i] + \"://\") === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Remove './' and '../' from a URL\n * Required because Chrome Apps for Mobile (cca) doesn't understand\n * XHR paths with these relative components in the URL.\n * @method removeRelativePath\n * @param {String} url The URL to modify\n * @returns {String} url without './' and '../'\n **/\nResource.removeRelativePath = function (url) {\n  var idx = url.indexOf(\"://\") + 3,\n    stack,\n    toRemove,\n    result;\n  // Remove all instances of /./\n  url = url.replace(/\\/\\.\\//g, \"/\");\n  //Weird bug where in cca, manifest starts with 'chrome:////'\n  //This forces there to only be 2 slashes\n  while (url.charAt(idx) === \"/\") {\n    url = url.slice(0, idx) + url.slice(idx + 1, url.length);\n  }\n\n  // Advance to next /\n  idx = url.indexOf(\"/\", idx);\n  // Removing ../\n  stack = url.substr(idx + 1).split(\"/\");\n  while (stack.indexOf(\"..\") !== -1) {\n    toRemove = stack.indexOf(\"..\");\n    if (toRemove === 0) {\n      stack.shift();\n    } else {\n      stack.splice((toRemove - 1), 2);\n    }\n  }\n  \n  //Rebuild string\n  result = url.substr(0, idx);\n  for (idx = 0; idx < stack.length; idx += 1) {\n    result += \"/\" + stack[idx];\n  }\n  return result;\n};\n\n/**\n * Resolve URLs which can be accessed using standard HTTP requests.\n * @method httpResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.httpResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"http\", \"https\", \"chrome\", \"chrome-extension\", \"resource\",\n                   \"app\", \"gopher\"],\n    dirname,\n    protocolIdx,\n    pathIdx,\n    path,\n    base,\n    result;\n\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(Resource.removeRelativePath(url));\n    return true;\n  }\n  \n  if (!manifest) {\n    reject();\n    return false;\n  }\n  if (Resource.hasScheme(protocols, manifest) &&\n      url.indexOf(\"://\") === -1) {\n    dirname = manifest.substr(0, manifest.lastIndexOf(\"/\"));\n    protocolIdx = dirname.indexOf(\"://\");\n    pathIdx = protocolIdx + 3 + dirname.substr(protocolIdx + 3).indexOf(\"/\");\n    path = dirname.substr(pathIdx);\n    base = dirname.substr(0, pathIdx);\n    if (url.indexOf(\"/\") === 0) {\n      resolve(Resource.removeRelativePath(base + url));\n    } else {\n      resolve(Resource.removeRelativePath(base + path + \"/\" + url));\n    }\n    return true;\n  }\n  reject();\n};\n\n/**\n * Resolve URLs which are self-describing.\n * @method nullResolver\n * @private\n * @param {String} manifest The Manifest URL.\n * @param {String} url The URL to resolve.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n * @returns {Boolean} True if the URL could be resolved.\n */\nResource.prototype.nullResolver = function (manifest, url, resolve, reject) {\n  var protocols = [\"manifest\"];\n  if (Resource.hasScheme(protocols, url)) {\n    resolve(url);\n    return true;\n  } else if (url.indexOf('data:') === 0) {\n    resolve(url);\n    return true;\n  }\n  reject();\n};\n\n/**\n * Retrieve manifest content from a self-descriptive manifest url.\n * These urls are used to reference a manifest without requiring subsequent,\n * potentially non-CORS requests.\n * @method manifestRetriever\n * @private\n * @param {String} manifest The Manifest URL\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.manifestRetriever = function (manifest, resolve, reject) {\n  var data;\n  try {\n    data = manifest.substr(11);\n    JSON.parse(data);\n    resolve(data);\n  } catch (e) {\n    this.debug.warn(\"Invalid manifest URL referenced:\" + manifest);\n    reject();\n  }\n};\n\n/**\n * Retrieve resource contents using an XHR request.\n * @method xhrRetriever\n * @private\n * @param {String} url The resource to fetch.\n * @param {Function} resolve The promise to complete.\n * @param {Function} reject The promise to reject.\n */\nResource.prototype.xhrRetriever = function (url, resolve, reject) {\n  var ref = new XMLHttpRequest();\n  ref.addEventListener(\"readystatechange\", function (resolve, reject) {\n    if (ref.readyState === 4 && ref.responseText) {\n      resolve(ref.responseText);\n    } else if (ref.readyState === 4) {\n      this.debug.warn(\"Failed to load file \" + url + \": \" + ref.status);\n      reject(ref.status);\n    }\n  }.bind(this, resolve, reject), false);\n  ref.overrideMimeType(\"application/json\");\n  ref.open(\"GET\", url, true);\n  ref.send();\n};\n\nmodule.exports = Resource;\n","/*globals crypto, WebKitBlobBuilder, Blob, URL */\n/*globals webkitURL, Uint8Array, Uint16Array, ArrayBuffer */\n/*jslint indent:2,white:true,browser:true,node:true,sloppy:true */\n\n/**\n * Utility method used within the freedom Library.\n * @class util\n * @static\n */\nvar util = {};\n\n\n/**\n * Helper function for iterating over an array backwards. If the func\n * returns a true value, it will break out of the loop.\n * @method eachReverse\n * @static\n */\nutil.eachReverse = function(ary, func) {\n  if (ary) {\n    var i;\n    for (i = ary.length - 1; i > -1; i -= 1) {\n      if (ary[i] && func(ary[i], i, ary)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * @method hasProp\n * @static\n */\nutil.hasProp = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n/**\n * Cycles over properties in an object and calls a function for each\n * property value. If the function returns a truthy value, then the\n * iteration is stopped.\n * @method eachProp\n * @static\n */\nutil.eachProp = function(obj, func) {\n  var prop;\n  for (prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      if (func(obj[prop], prop)) {\n        break;\n      }\n    }\n  }\n};\n\n/**\n * Simple function to mix in properties from source into target,\n * but only if target does not already have a property of the same name.\n * This is not robust in IE for transferring methods that match\n * Object.prototype names, but the uses of mixin here seem unlikely to\n * trigger a problem related to that.\n * @method mixin\n * @static\n */\nutil.mixin = function(target, source, force) {\n  if (source) {\n    util.eachProp(source, function (value, prop) {\n      if (force || !util.hasProp(target, prop)) {\n        target[prop] = value;\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Get a unique ID.\n * @method getId\n * @static\n */\nutil.getId = function() {\n  var guid = 'guid',\n      domain = 12,\n      buffer;\n  // Chrome / Firefox.\n  if (typeof crypto === 'object' && crypto.getRandomValues) {\n    buffer = new Uint8Array(domain);\n    crypto.getRandomValues(buffer);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  // Node\n  } else if (typeof crypto === 'object' && crypto.randomBytes) {\n    buffer = crypto.randomBytes(domain);\n    util.eachReverse(buffer, function(n) {\n      guid += '-' + n;\n    });\n  } else {\n    while (domain > 0) {\n      guid += '-' + Math.ceil(255 * Math.random());\n      domain -= 1;\n    }\n  }\n\n  return guid;\n};\n\n/**\n * Encode a string into a binary array buffer, by treating each character as a\n * utf16 encoded character - the native javascript encoding.\n * @method str2ab\n * @static\n * @param {String} str The string to encode.\n * @returns {ArrayBuffer} The encoded string.\n */\nutil.str2ab = function(str) {\n  var length = str.length,\n      buffer = new ArrayBuffer(length * 2), // 2 bytes for each char\n      bufferView = new Uint16Array(buffer),\n      i;\n  for (i = 0; i < length; i += 1) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return buffer;\n};\n\n/**\n * Convert an array buffer containing an encoded string back into a string.\n * @method ab2str\n * @static\n * @param {ArrayBuffer} buffer The buffer to unwrap.\n * @returns {String} The decoded buffer.\n */\nutil.ab2str = function(buffer) {\n  return String.fromCharCode.apply(null, new Uint16Array(buffer));\n};\n\n/**\n * Add 'on' and 'emit' methods to an object, which act as a light weight\n * event handling structure.\n * @class handleEvents\n * @static\n */\nutil.handleEvents = function(obj) {\n  var eventState = {\n    DEBUG_BACKREF: obj,\n    multiple: {},\n    maybemultiple: [],\n    single: {},\n    maybesingle: []\n  }, filter, push;\n\n  /**\n   * Filter a list based on a predicate. The list is filtered in place, with\n   * selected items removed and returned by the function.\n   * @method\n   * @param {Array} list The list to filter\n   * @param {Function} predicate The method to run on each item.\n   * @returns {Array} Selected items\n   */\n  filter = function(list, predicate) {\n    var ret = [], i;\n\n    if (!list || !list.length) {\n      return [];\n    }\n\n    for (i = list.length - 1; i >= 0; i -= 1) {\n      if (predicate(list[i])) {\n        ret.push(list.splice(i, 1));\n      }\n    }\n    return ret;\n  };\n\n  /**\n   * Enqueue a handler for a specific type.\n   * @method\n   * @param {String} to The queue ('single' or 'multiple') to queue on.\n   * @param {String} type The type of event to wait for.\n   * @param {Function} handler The handler to enqueue.\n   */\n  push = function(to, type, handler) {\n    if (typeof type === 'function') {\n      this['maybe' + to].push([type, handler]);\n    } else if (this[to][type]) {\n      this[to][type].push(handler);\n    } else {\n      this[to][type] = [handler];\n    }\n  };\n\n  /**\n   * Register a method to be executed when an event of a specific type occurs.\n   * @method on\n   * @param {String|Function} type The type of event to register against.\n   * @param {Function} handler The handler to run when the event occurs.\n   */\n  obj.on = push.bind(eventState, 'multiple');\n\n  /**\n   * Register a method to be execute the next time an event occurs.\n   * @method once\n   * @param {String|Function} type The type of event to wait for.\n   * @param {Function} handler The handler to run the next time a matching event\n   *     is raised.\n   */\n  obj.once = push.bind(eventState, 'single');\n\n  /**\n   * Emit an event on this object.\n   * @method emit\n   * @param {String} type The type of event to raise.\n   * @param {Object} data The payload of the event.\n   */\n  obj.emit = function(type, data) {\n    var i, queue;\n    // Note that registered handlers may stop events on the object, by calling\n    // this.off(). As such, the presence of these keys must be checked on each\n    // iteration of the relevant loops.\n    for (i = 0; this.multiple[type] &&\n         i < this.multiple[type].length; i += 1) {\n      if (this.multiple[type][i](data) === false) {\n        return;\n      }\n    }\n    if (this.single[type]) {\n      queue = this.single[type];\n      this.single[type] = [];\n      for (i = 0; i < queue.length; i += 1) {\n        queue[i](data);\n      }\n    }\n    for (i = 0; i < this.maybemultiple.length; i += 1) {\n      if (this.maybemultiple[i][0](type, data)) {\n        this.maybemultiple[i][1](data);\n      }\n    }\n    for (i = this.maybesingle.length - 1; i >= 0; i -= 1) {\n      if (this.maybesingle[i][0](type, data)) {\n        queue = this.maybesingle.splice(i, 1);\n        queue[0][1](data);\n      }\n    }\n  }.bind(eventState);\n\n  /**\n   * Remove an event handler\n   * @method off\n   * @param {String} type The type of event to remove.\n   * @param {Function?} handler The handler to remove.\n   */\n  obj.off = function(type, handler) {\n    if (!type) {\n      delete this.DEBUG_BACKREF;\n      this.multiple = {};\n      this.maybemultiple = [];\n      this.single = {};\n      this.maybesingle = [];\n      return;\n    }\n\n    if (typeof type === 'function') {\n      filter(this.maybesingle, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n      filter(this.maybemultiple, function(item) {\n        return item[0] === type && (!handler || item[1] === handler);\n      });\n    }\n\n    if (!handler) {\n      delete this.multiple[type];\n      delete this.single[type];\n    } else {\n      filter(this.multiple[type], function(item) {\n        return item === handler;\n      });\n      filter(this.single[type], function(item) {\n        return item === handler;\n      });\n    }\n  }.bind(eventState);\n};\n\n/**\n * When run without a window, or specifically requested.\n * Note: Declaration can be redefined in forceModuleContext below.\n * @method isModuleContext\n * @for util\n * @static\n */\n/*!@preserve StartModuleContextDeclaration*/\nutil.isModuleContext = function() {\n  return (typeof document === 'undefined');\n};\n\n/**\n * Get a Blob object of a string.\n * Polyfills implementations which don't have a current Blob constructor, like\n * phantomjs.\n * @method getBlob\n * @static\n */\nutil.getBlob = function(data, type) {\n  if (typeof Blob !== 'function' && typeof WebKitBlobBuilder !== 'undefined') {\n    var builder = new WebKitBlobBuilder();\n    builder.append(data);\n    return builder.getBlob(type);\n  } else {\n    return new Blob([data], {type: type});\n  }\n};\n\n/**\n * Find all scripts on the given page.\n * @method scripts\n * @static\n */\nutil.scripts = function(global) {\n  return global.document.getElementsByTagName('script');\n};\n\nmodule.exports = util;\n","/*jslint node:true*/\n\nvar providers = [\n  require('../../providers/core/core.unprivileged'),\n  require('../../providers/core/core.echo'),\n  require('../../providers/core/core.console'),\n  require('../../providers/core/core.crypto'),\n  require('../../providers/core/core.peerconnection'),\n  require('../../providers/core/core.rtcpeerconnection'),\n  require('../../providers/core/core.rtcdatachannel'),\n  require('../../providers/core/core.storage'),\n  require('../../providers/core/core.view'),\n  require('../../providers/core/core.oauth'),\n  require('../../providers/core/core.websocket'),\n  require('../../providers/core/core.xhr')\n];\n\nfunction getFreedomScript() {\n  'use strict';\n  var script;\n  if (window.document.currentScript) {\n    // New browser API\n    script = window.document.currentScript.src;\n  } else if (document.readyState !== \"complete\" &&\n             document.readyState !== \"loaded\") {\n    // Included in HTML or through document.write\n    script = window.document.getElementsByTagName('script');\n    script = script[script.length - 1].src;\n  } else {\n    // Loaded through dom manipulation or async.\n    script = document.querySelector(\n      \"script[src*='freedom.js'],script[src*='freedom-']\"\n    );\n    if (script.length !== 1) {\n      console.error(\"Could not determine freedom.js script tag.\");\n    }\n    script = script[0].src;\n  }\n  return script;\n}\n\nif (typeof window !== 'undefined') {\n  window.freedom = require('../entry').bind({}, {\n    location: window.location.href,\n    portType: require('../link/worker'),\n    source: getFreedomScript(),\n    providers: providers,\n    oauth: [\n      require('../../providers/oauth/oauth.localpageauth'),\n      require('../../providers/oauth/oauth.remotepageauth')\n    ]\n  });\n} else {\n  require('../entry')({\n    isModule: true,\n    portType: require('../link/worker'),\n    providers: providers,\n    global: global\n  });\n}\n"]}